% Running on host: hawk

% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

% Calling ILPouterLoop from createRegressionOuterLooper.

% getInputArgWithDefaultValue: args=[datasets/Cora/train/train_pos.txt, datasets/Cora/train/train_neg.txt, datasets/Cora/train/train_bk.txt, datasets/Cora/train/train_facts.txt]
%  for N=0: args[N]=datasets/Cora/train/train_pos.txt

% getInputArgWithDefaultValue: args=[datasets/Cora/train/train_pos.txt, datasets/Cora/train/train_neg.txt, datasets/Cora/train/train_bk.txt, datasets/Cora/train/train_facts.txt]
%  for N=1: args[N]=datasets/Cora/train/train_neg.txt

% getInputArgWithDefaultValue: args=[datasets/Cora/train/train_pos.txt, datasets/Cora/train/train_neg.txt, datasets/Cora/train/train_bk.txt, datasets/Cora/train/train_facts.txt]
%  for N=2: args[N]=datasets/Cora/train/train_bk.txt

% getInputArgWithDefaultValue: args=[datasets/Cora/train/train_pos.txt, datasets/Cora/train/train_neg.txt, datasets/Cora/train/train_bk.txt, datasets/Cora/train/train_facts.txt]
%  for N=3: args[N]=datasets/Cora/train/train_facts.txt

% Welcome to the WILL ILP/SRL systems.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.
% Reading background theory from dir: null
% Load '../cora_bk.txt'.

% Switching to VarIndicator = uppercase.

***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****


***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****

% [ LazyGroundClauseIndex ]  Building full index for mode/1 with 1 assertions.
% LoadAllModes() called.  Currently loaded modes: []
% [ LazyGroundClauseIndex ]  Building full index for sameAs/2 with 2 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for exp/3.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for log/3.
% LoadAllLibraries() called.  Currently loaded libraries: [listsInLogic, differentInLogic, modes_arithmeticInLogic, inlines_comparisonInLogic, modes_listsInLogic, inlines_differentInLogic, modes_differentInLogic, arithmeticInLogic, inlines_listsInLogic, modes_comparisonInLogic, comparisonInLogic, inlines_arithmeticInLogic]

%  Read the facts.
%  Have read 6,541 facts.
% Have read 35,008 examples from 'datasets/Cora/train' [datasets/Cora/train/train*].
% Have read 27,709 examples from 'datasets/Cora/train' [datasets/Cora/train/train*].

%  LearnOneClause initialized.

% The outer looper has been created.

% Initializing the ILP inner looper.

% NEW target:                 sameauthor(D, E)
%  targetPred:                sameauthor/2
%  targetArgTypes:            signature = [const, const], types = [+authid, +authid]
%  targets:                   [sameauthor(D, E)]
%  targetPredicates:          [sameauthor/2, samebib/2, sametitle/2, samevenue/2]
%  targetArgSpecs:            [[D[+authid], E[+authid]]]
%  variablesInTargets:        [[D, E]]

% NEW target:                 samebib(F, G)
%  targetPred:                samebib/2
%  targetArgTypes:            signature = [const, const], types = [+paperid, +paperid]
%  targets:                   [sameauthor(D, E), samebib(F, G)]
%  targetPredicates:          [sameauthor/2, samebib/2, sametitle/2, samevenue/2]
%  targetArgSpecs:            [[D[+authid], E[+authid]], [F[+paperid], G[+paperid]]]
%  variablesInTargets:        [[D, E], [F, G]]

% NEW target:                 sametitle(H, I)
%  targetPred:                sametitle/2
%  targetArgTypes:            signature = [const, const], types = [+titleid, +titleid]
%  targets:                   [sameauthor(D, E), samebib(F, G), sametitle(H, I)]
%  targetPredicates:          [sameauthor/2, samebib/2, sametitle/2, samevenue/2]
%  targetArgSpecs:            [[D[+authid], E[+authid]], [F[+paperid], G[+paperid]], [H[+titleid], I[+titleid]]]
%  variablesInTargets:        [[D, E], [F, G], [H, I]]

% NEW target:                 samevenue(J, K)
%  targetPred:                samevenue/2
%  targetArgTypes:            signature = [const, const], types = [+venueid, +venueid]
%  targets:                   [sameauthor(D, E), samebib(F, G), sametitle(H, I), samevenue(J, K)]
%  targetPredicates:          [sameauthor/2, samebib/2, sametitle/2, samevenue/2]
%  targetArgSpecs:            [[D[+authid], E[+authid]], [F[+paperid], G[+paperid]], [H[+titleid], I[+titleid]], [J[+venueid], K[+venueid]]]
%  variablesInTargets:        [[D, E], [F, G], [H, I], [J, K]]

% Started collecting constants

% Collecting the types of constants.

% Looking at the training examples to see if any types of new constants can be inferred.
% Time to collect constants: 170 milliseconds
% Time to collect examples: 0 seconds

% Read 35,008 pos examples and 27,709 neg examples.
% Time to init learnOneClause: 201 milliseconds
% Old dirnull
Setting model dir

% Have 35,008 'raw' positive examples and kept 488.
% Have 27,709 'raw' negative examples and kept 66.

% processing backup's for sameauthor
%  POS EX = 488
%  NEG EX = 66

% Memory usage by WILLSetup (just counts # targets?):
%  |backupPosExamples| = 1
%  |backupNegExamples| = 1
%  |predicatesAsFacts| = 0
%  |addedToFactBase|   = 0
datasets/Cora/train/models/
File: datasets/Cora/train/advice.txt doesnt exist.Hence no advice loaded
% Learning 3 trees in this iteration for sameauthor

% Learn model for: sameauthor
% Kept 488 of the 488 positive examples.
% Kept 66 of the 66 negative examples.
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.10494076555148646
Set score:0.0025
% Dataset size: 554
Computing probabilities
prob time:2 milliseconds
No hidden examples for : sameauthor
Time to build dataset: 4 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.10494076555149223
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 55 91 127 164 197 276 351 389 430 433
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% LearnOneClause Parameters:
%   Targets (4):
%    sameauthor(+authid, +authid),
%    samebib(+paperid, +paperid),
%    sametitle(+titleid, +titleid),
%    samevenue(+venueid, +venueid)
%  Modes (45):
%    author(-paperid, +authid),
%    haswordauthor(+authid, -wordid),
%    haswordtitle(-titleid, +wordid),
%    haswordvenue(-venueid, +wordid),
%    title(+paperid, +titleid),
%    venue(+paperid, -venueid),
%    addList(+willList, #willNumber),
%    multiplyList(+willList, #willNumber),
%    abs(+willNumber, &willNumber),
%    minus(+willNumber, &willNumber),
%    minus(+willNumber, +willNumber, &willNumber),
%    plus(+willNumber, +willNumber, &willNumber),
%    mult(+willNumber, +willNumber, &willNumber),
%    div(+willNumber, +willNumber, &willNumber),
%    allNumbers(+willList),
%    positiveNumber(+willNumber),
%    negativeNumber(+willNumber),
%    in0toDot001(+willNumber),
%    in0toDot01(+willNumber),
%    in0toDot1(+willNumber),
%    in0to1(+willNumber),
%    in0to10(+willNumber),
%    in0to100(+willNumber),
%    in0to1000(+willNumber),
%    equalWithTolerance(+willNumber, +willNumber, &willNumber),
%    greaterOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    smallerOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    isaEqualTolerance(+willNumber),
%    lessThan(+willNumber, +willNumber),
%    greaterThan(+willNumber, +willNumber),
%    lessThanOrEqual(+willNumber, +willNumber),
%    greaterThanOrEqual(+willNumber, +willNumber),
%    inBetweenOO(+willNumber, +willNumber, +willNumber),
%    inBetweenCO(+willNumber, +willNumber, +willNumber),
%    inBetweenOC(+willNumber, +willNumber, +willNumber),
%    inBetweenCC(+willNumber, +willNumber, +willNumber),
%    memberOfList(+willAnything, +willList),
%    firstInList(+willList, &willAnything),
%    restOfList(+willList, &willList),
%    positionInList(+willAnything, +willList, &willNumber),
%    nthInList(+willNumber, +willList, &willAnything),
%    lengthOfList(+willList, &willNumber),
%    samebib(+paperid, +paperid),
%    sametitle(+titleid, +titleid),
%    samevenue(+venueid, +venueid)

% target           = sameauthor(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
% Most-general root: sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for author/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for haswordauthor/2.
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for author/2 with 1,295 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for venue/2.
% [ LazyGroundClauseIndex ]  Building full index for samebib/2 with 30,971 assertions.
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, A), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, A), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(A, _) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, B), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, B), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(_, A) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for haswordauthor/2 with 203 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for haswordtitle/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for haswordvenue/2.
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -40.360904 (regressionFit = 40.360902, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -40.360904): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -57.061931 (regressionFit = 57.061929, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -58.101722 (regressionFit = 58.101720, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -40.360904 (regressionFit = 40.360902, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, C), haswordauthor(A, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -57.061931 (regressionFit = 57.061929, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -58.101722 (regressionFit = 58.101720, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
Comparing variance: 0.07586635762338899 to score=0.0025 #egs=532.0
Comparing variance: 5.046468293750712E-18 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 532.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.075866)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.075866) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 515 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #1, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% This clause covers 532 positive examples, of which 532 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]'
%     Score = -40.360904 (regressionFit = 40.360902, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 20 163 305 345 354 359 361 362 378 381
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-40.360904185642944
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.666670 (regressionFit = 38.666667, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -38.666670): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.847499 (regressionFit = 39.847496, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]' score=-38.666669706669104
% [ LazyGroundClauseIndex ]  Building full index for sametitle/2 with 661 assertions.
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -38.666671 (regressionFit = 38.666667, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.666671 (regressionFit = 38.666667, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.666671 (regressionFit = 38.666667, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.666671 (regressionFit = 38.666667, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.666671 (regressionFit = 38.666667, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.786204 (regressionFit = 39.786200, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.666671 (regressionFit = 38.666667, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]' score=-39.847498922391175
% [ LazyGroundClauseIndex ]  Building full index for samevenue/2 with 2,888 assertions.
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -39.847500 (regressionFit = 39.847496, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, A).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.847500 (regressionFit = 39.847496, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, B).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.847500 (regressionFit = 39.847496, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.847500 (regressionFit = 39.847496, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.786204 (regressionFit = 39.786200, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.847500 (regressionFit = 39.847496, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.847500 (regressionFit = 39.847496, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(D, C), samevenue(D, D).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.666671 (regressionFit = 38.666667, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.847500 (regressionFit = 39.847496, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.666671 (regressionFit = 38.666667, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.847500 (regressionFit = 39.847496, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.666671 (regressionFit = 38.666667, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.307363 (regressionFit = 39.307359, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.847500 (regressionFit = 39.847496, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -40.201573 (regressionFit = 40.201570, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.666671 (regressionFit = 38.666667, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.307363 (regressionFit = 39.307359, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.847500 (regressionFit = 39.847496, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -40.201573 (regressionFit = 40.201570, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.076.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
Comparing variance: 0.11426592797784342 to score=0.0025 #egs=304.0
Comparing variance: 0.017236072637739915 to score=0.0025 #egs=228.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 304.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.114266)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.114266) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 228.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.017236)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.017236) into the LAST position (#2) in the search queue.

% Time for loop #2: 572 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #2, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% This clause covers 304 positive examples, of which 304 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]'
%     Score = -38.666670 (regressionFit = 38.666667, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Have these 8 positive seeds: 13 47 98 161 190 221 241 252
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #3, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-38.666669706669104
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726298 (regressionFit = 34.726294, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34.726298): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]' score=-34.72629814586064
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for title/2 with 1,295 assertions.
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.557828 (regressionFit = 34.557823, penalties=4.950000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, B), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34.557828): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, B), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for haswordtitle/2 with 1,139 assertions.
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.532148 (regressionFit = 34.532143, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34.532148): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.532148 (regressionFit = 34.532143, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.114.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
Comparing variance: 0.10259885204082199 to score=0.0025 #egs=224.0
Comparing variance: 0.1443749999999991 to score=0.0025 #egs=80.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 224.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.102599)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.102599) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 80.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.144375)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.144375) into position #1 in the search queue (new size=3).

% Time for loop #3: 318 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #3, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% This clause covers 224 positive examples, of which 224 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/80.0 pos, 0.0/0.0 neg]'
%     Score = -38.666670 (regressionFit = 38.666667, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 9 11 14 40 48 58 63 65 67 70
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #4, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-38.666669706669104
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -11.299776 (regressionFit = 11.299771, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -11.299776): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.144.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 74 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #4, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]'
%     Score = -34.532148 (regressionFit = 34.532143, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Have these 9 positive seeds: 58 80 90 105 106 151 170 187 214
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-34.53214791714405
% [ LazyGroundClauseIndex ]  Building full index for haswordvenue/2 with 1,313 assertions.
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838101 (regressionFit = 22.838095, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -22.838101): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838101 (regressionFit = 22.838095, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]' score=-22.838101198096457
%  At # nodes expanded = 2, |OPEN| = 10.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), author(_, A).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), author(_, B).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordauthor(A, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordauthor(B, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordtitle(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordtitle(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordvenue(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordauthor(B, E), sametitle(D, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, D), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]' score=-22.83810130809646
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 0 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, A).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, B).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, C), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(E, F).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(F, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, C), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for venue/2 with 1,296 assertions.
%  At # nodes expanded = 4, |OPEN| = 8.  Pruned 0 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.180000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), author(_, A), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 7.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.826298 (regressionFit = 22.826291, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 11.0/224.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -22.826298): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 11.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.180000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), author(_, B), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 6.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordauthor(A, _), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 5.  Pruned 0 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.770000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordauthor(B, F), haswordtitle(D, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.960422 (regressionFit = 22.960415, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 201.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordauthor(B, _), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 4.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(_, C), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(F, C), sametitle(D, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(F, C), sametitle(F, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(E, C), sametitle(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordtitle(_, C), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 3.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(_, E), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.585865 (regressionFit = 22.585859, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(F, E), sametitle(D, F).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -22.585865): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(F, E), sametitle(D, F).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.585865 (regressionFit = 22.585859, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(F, E), sametitle(F, D).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(E, D), sametitle(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordtitle(_, D), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

***** Warning: #1 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(F, E), sametitle(D, F).  [covers 198.0/224.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(F, E), sametitle(D, F).  [covers 198.0/224.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.103.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(F, E), sametitle(D, F).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #5: 807 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #5, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(F, E), sametitle(D, F).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
% This clause covers 198 positive examples, of which 198 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/228.0 pos, 0.0/0.0 neg]'
%     Score = -40.360904 (regressionFit = 40.360902, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Have these 6 positive seeds: 11 38 48 55 130 178
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #6, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-40.360904185642944
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.919976 (regressionFit = 3.919972, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.919976): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.908539 (regressionFit = 3.908535, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.908539): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.908539 (regressionFit = 3.908535, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.017.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
Comparing variance: 0.032749209997126966 to score=0.0025 #egs=59.0
Comparing variance: 0.011694268407975461 to score=0.0025 #egs=169.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 59.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.032749)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.032749) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 169.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.011694)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.011694) into the LAST position (#2) in the search queue.

% Time for loop #6: 68 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #6, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% This clause covers 59 positive examples, of which 59 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]'
%     Score = -3.908539 (regressionFit = 3.908535, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 0 9 17 18 19 20 22 36 54 56
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #7, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-3.908538700778344
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921574 (regressionFit = 1.921569, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.921574): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]' score=-1.921573687451
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, A).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, B).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(A, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(E, D), sametitle(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordtitle(_, D), samevenue(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916673 (regressionFit = 1.916667, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.916673): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.913049 (regressionFit = 1.913043, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.913049): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(E, F).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(F, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.033.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #7: 112 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #7, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
% This clause covers 13 positive examples, of which 13 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/169.0 pos, 0.0/0.0 neg]'
%     Score = -40.360904 (regressionFit = 40.360902, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Have these 5 positive seeds: 7 69 114 118 149
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #8, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-40.360904185642944
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.972607 (regressionFit = 1.972603, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 23.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.972607): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 23.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.936512 (regressionFit = 1.936508, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.936512): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.913047 (regressionFit = 1.913043, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.913047): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.012.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #8: 63 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #8, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% This clause covers 46 positive examples, of which 46 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #1 @ 8:54:26 5/11/17.  [Using 13,675,880 memory cells.]  %%%%%


% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( haswordtitle(G, E), sametitle(D, G) )
%   | | | then return 0.7268358037863779;  // std dev = 4.752, 198.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=172 */
%   | | | else return 0.8581489350995118;  // std dev = 1.46e-07, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.7711924133603816;  // std dev = 1.351, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0.6476226193100387;  // std dev = 3.078, 57.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=45 */
%   | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | then if ( haswordauthor(B, L), haswordvenue(M, L) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.8146706742299468;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | else if ( haswordauthor(B, N), haswordvenue(P, N) )
%   | | | then return 0.8146706742299468;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return 0.8581489350995105;  // std dev = 6.95e-07, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


% Clauses:

sameauthor(A, B, 0.7268358037863779) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(A, E), 
     haswordvenue(F, E), 
     haswordtitle(G, E), 
     sametitle(D, G), 
     !. // Clause #1.

sameauthor(A, B, 0.8581489350995118) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(A, E), 
     haswordvenue(F, E), 
     !. // Clause #2.

sameauthor(A, B, 0.7711924133603816) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     !. // Clause #3.

sameauthor(A, B, 0.6476226193100387) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     !. // Clause #4.

sameauthor(A, B, 0.8581489350995123) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     haswordauthor(B, F), 
     haswordvenue(G, F), 
     !. // Clause #5.

sameauthor(A, B, 0.8146706742299468) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     !. // Clause #6.

sameauthor(A, B, 0.8146706742299468) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     !. // Clause #7.

sameauthor(A, B, 0.8581489350995105) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     !. // Clause #8.

sameauthor(A, B, -0.14185106490048774) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_sameauthor(a, b, 0.7268358037863779) :-  /* #neg=26 #pos=172 */ 
   haswordauthor(a, uniqueVar1),
   haswordauthor(b, uniqueVar1),
   haswordtitle(uniqueVar2, uniqueVar1),
   haswordauthor(a, uniqueVar3),
   haswordvenue(underscore, uniqueVar3),
   haswordtitle(uniqueVar4, uniqueVar3),
   sametitle(uniqueVar2, uniqueVar4),
   !. // Flattened version of clause #1.

flattened_sameauthor(a, b, 0.8581489350995118) :-  /* #pos=26 */ 
   haswordauthor(a, uniqueVar5),
   haswordauthor(b, uniqueVar5),
   haswordtitle(underscore, uniqueVar5),
   haswordauthor(a, uniqueVar6),
   haswordvenue(underscore, uniqueVar6),
   !. // Flattened version of clause #2.

flattened_sameauthor(a, b, 0.7711924133603816) :-  /* #neg=2 #pos=21 */ 
   haswordauthor(a, uniqueVar7),
   haswordauthor(b, uniqueVar7),
   haswordtitle(underscore, uniqueVar7),
   haswordauthor(b, uniqueVar8),
   haswordvenue(underscore, uniqueVar8),
   !. // Flattened version of clause #3.

flattened_sameauthor(a, b, 0.6476226193100387) :-  /* #neg=12 #pos=45 */ 
   haswordauthor(a, uniqueVar9),
   haswordauthor(b, uniqueVar9),
   haswordtitle(underscore, uniqueVar9),
   !. // Flattened version of clause #4.

flattened_sameauthor(a, b, 0.8581489350995123) :-  /* #pos=13 */ 
   haswordauthor(a, uniqueVar10),
   haswordauthor(b, uniqueVar10),
   haswordauthor(a, uniqueVar11),
   haswordvenue(underscore, uniqueVar11),
   haswordauthor(b, uniqueVar12),
   haswordvenue(underscore, uniqueVar12),
   !. // Flattened version of clause #5.

flattened_sameauthor(a, b, 0.8146706742299468) :-  /* #neg=2 #pos=44 */ 
   haswordauthor(a, uniqueVar13),
   haswordauthor(b, uniqueVar13),
   haswordauthor(a, uniqueVar14),
   haswordvenue(underscore, uniqueVar14),
   !. // Flattened version of clause #6.

flattened_sameauthor(a, b, 0.8146706742299468) :-  /* #neg=2 #pos=44 */ 
   haswordauthor(a, uniqueVar15),
   haswordauthor(b, uniqueVar15),
   haswordauthor(b, uniqueVar16),
   haswordvenue(underscore, uniqueVar16),
   !. // Flattened version of clause #7.

flattened_sameauthor(a, b, 0.8581489350995105) :-  /* #pos=123 */ 
   haswordauthor(a, uniqueVar17),
   haswordauthor(b, uniqueVar17),
   !. // Flattened version of clause #8.

flattened_sameauthor(underscore, underscore, -0.14185106490048774) :-  /* #neg=22 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   haswordauthor(a, uniqueVar6)
%   haswordvenue(underscore, uniqueVar12)
%   haswordauthor(b, uniqueVar13)
%   haswordauthor(a, uniqueVar14)
%   haswordauthor(a, uniqueVar9)
%   sametitle(uniqueVar2, uniqueVar4)
%   haswordvenue(underscore, uniqueVar16)
%   haswordauthor(a, uniqueVar3)
%   haswordauthor(b, uniqueVar12)
%   haswordauthor(a, uniqueVar1)
%   haswordtitle(underscore, uniqueVar7)
%   haswordauthor(a, uniqueVar15)
%   haswordauthor(b, uniqueVar10)
%   haswordauthor(b, uniqueVar7)
%   haswordauthor(a, uniqueVar5)
%   haswordauthor(a, uniqueVar7)
%   haswordauthor(a, uniqueVar10)
%   haswordvenue(underscore, uniqueVar14)
%   haswordauthor(b, uniqueVar9)
%   haswordauthor(b, uniqueVar5)
%   haswordvenue(underscore, uniqueVar11)
%   haswordauthor(b, uniqueVar15)
%   haswordauthor(a, uniqueVar13)
%   haswordauthor(b, uniqueVar1)
%   haswordtitle(underscore, uniqueVar5)
%   haswordvenue(underscore, uniqueVar3)
%   haswordtitle(uniqueVar2, uniqueVar1)
%   haswordauthor(a, uniqueVar17)
%   haswordauthor(b, uniqueVar16)
%   haswordtitle(uniqueVar4, uniqueVar3)
%   haswordvenue(underscore, uniqueVar6)
%   haswordvenue(underscore, uniqueVar8)
%   haswordauthor(b, uniqueVar8)
%   haswordauthor(a, uniqueVar11)
%   haswordtitle(underscore, uniqueVar9)
%   haswordauthor(b, uniqueVar17)

% Saving model in: datasets/Cora/train/models/bRDNs/sameauthor.model.ckpt
% Time taken to learn 1 trees is 2.691 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.011694268407975494
Set score:0.0025
% Only 554 out of 554 converged.
% Kept 488 of the 488 positive examples.
% Kept 66 of the 66 negative examples.
% Dataset size: 554
Computing probabilities
prob time:26 milliseconds
No hidden examples for : sameauthor
Time to build dataset: 33 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.09428560761834248
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 56 142 188 193 254 271 287 323 414 464
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = sameauthor(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
% Most-general root: sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, A), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, A), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(A, _) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, B), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, B), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(_, A) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -39.434658 (regressionFit = 39.434656, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -39.434658): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -51.534406 (regressionFit = 51.534404, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -52.214445 (regressionFit = 52.214443, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -39.434658 (regressionFit = 39.434656, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, C), haswordauthor(A, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -51.534406 (regressionFit = 51.534404, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -52.218183 (regressionFit = 52.218181, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
Comparing variance: 0.07412529275908321 to score=0.0025 #egs=532.0
Comparing variance: -2.523234146875356E-18 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 532.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.074125)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.074125) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 125 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #1, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% This clause covers 532 positive examples, of which 532 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]'
%     Score = -39.434658 (regressionFit = 39.434656, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Have these 8 positive seeds: 5 127 236 268 340 385 409 525
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-39.43465767783227
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.334401 (regressionFit = 38.334398, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -38.334401): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.120017 (regressionFit = 39.120014, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]' score=-38.334401467925254
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -38.334403 (regressionFit = 38.334398, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.334403 (regressionFit = 38.334398, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.334402 (regressionFit = 38.334398, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.334402 (regressionFit = 38.334398, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.334402 (regressionFit = 38.334398, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.081484 (regressionFit = 39.081480, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.334402 (regressionFit = 38.334398, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]' score=-39.12001736760626
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -39.120018 (regressionFit = 39.120014, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, A).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.120018 (regressionFit = 39.120014, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, B).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.120018 (regressionFit = 39.120014, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.120018 (regressionFit = 39.120014, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.081484 (regressionFit = 39.081480, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.120018 (regressionFit = 39.120014, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.120018 (regressionFit = 39.120014, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(D, C), samevenue(D, D).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.334403 (regressionFit = 38.334398, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.120018 (regressionFit = 39.120014, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.334403 (regressionFit = 38.334398, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.120018 (regressionFit = 39.120014, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.334402 (regressionFit = 38.334398, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.751114 (regressionFit = 38.751110, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.120018 (regressionFit = 39.120014, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.332793 (regressionFit = 39.332789, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.334402 (regressionFit = 38.334398, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.751114 (regressionFit = 38.751110, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.120018 (regressionFit = 39.120014, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.341704 (regressionFit = 39.341700, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.074.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
Comparing variance: 0.11329572881358008 to score=0.0025 #egs=304.0
Comparing variance: 0.017072354686828543 to score=0.0025 #egs=228.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 304.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.113296)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.113296) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 228.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.017072)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.017072) into the LAST position (#2) in the search queue.

% Time for loop #2: 205 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #2, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% This clause covers 304 positive examples, of which 304 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]'
%     Score = -38.334401 (regressionFit = 38.334398, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Have these 9 positive seeds: 62 80 91 118 128 129 184 244 266
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #3, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-38.334401467925254
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.430991 (regressionFit = 34.430986, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34.430991): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]' score=-34.43099057005506
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -34.430992 (regressionFit = 34.430986, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.430992 (regressionFit = 34.430986, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.430992 (regressionFit = 34.430986, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.430992 (regressionFit = 34.430986, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.430992 (regressionFit = 34.430986, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.430992 (regressionFit = 34.430986, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.430991 (regressionFit = 34.430986, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.430991 (regressionFit = 34.430986, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.430992 (regressionFit = 34.430986, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.262672 (regressionFit = 34.262667, penalties=4.950000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34.262672): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.430992 (regressionFit = 34.430986, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.430992 (regressionFit = 34.430986, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.306752 (regressionFit = 34.306747, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.430992 (regressionFit = 34.430986, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.290556 (regressionFit = 34.290551, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.430992 (regressionFit = 34.430986, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.430991 (regressionFit = 34.430986, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.113.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
Comparing variance: 2.6645352591003756E-16 to score=0.0025 #egs=10.0
Comparing variance: 0.11653968317678066 to score=0.0025 #egs=294.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 294.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.116540)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.116540) into position #1 in the search queue (new size=2).

% Time for loop #3: 360 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #3, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
% This clause covers 10 positive examples, of which 10 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/294.0 pos, 0.0/0.0 neg]'
%     Score = -38.334401 (regressionFit = 38.334398, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 22 37 38 53 90 97 99 178 191 193
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #4, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-38.334401467925254
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -34.260733 (regressionFit = 34.260728, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34.260733): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]' score=-34.26073252270204
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -34.260734 (regressionFit = 34.260728, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -34.260734 (regressionFit = 34.260728, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -34.260734 (regressionFit = 34.260728, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -34.260734 (regressionFit = 34.260728, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -34.260734 (regressionFit = 34.260728, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -34.260734 (regressionFit = 34.260728, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -34.260733 (regressionFit = 34.260728, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -34.260733 (regressionFit = 34.260728, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 179.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -34.260734 (regressionFit = 34.260728, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -34.260734 (regressionFit = 34.260728, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -34.260734 (regressionFit = 34.260728, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -34.158381 (regressionFit = 34.158376, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34.158381): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -34.260734 (regressionFit = 34.260728, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -34.144008 (regressionFit = 34.144003, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34.144008): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -34.260734 (regressionFit = 34.260728, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -34.260733 (regressionFit = 34.260728, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.117.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 223 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #4, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
% This clause covers 214 positive examples, of which 214 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/228.0 pos, 0.0/0.0 neg]'
%     Score = -39.434658 (regressionFit = 39.434656, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 123 129 131 165 172 200 209 214 218 226
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-39.43465767783227
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.886193 (regressionFit = 3.886189, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.886193): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.878872 (regressionFit = 3.878868, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.878872): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.886193 (regressionFit = 3.886189, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.878872 (regressionFit = 3.878868, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.878872): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.017.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
Comparing variance: 0.03263235792466136 to score=0.0025 #egs=59.0
Comparing variance: 0.011559518402168007 to score=0.0025 #egs=169.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 59.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.032632)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.032632) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 169.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.011560)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.011560) into the LAST position (#2) in the search queue.

% Time for loop #5: 74 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #5, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% This clause covers 59 positive examples, of which 59 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]'
%     Score = -3.878872 (regressionFit = 3.878868, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 1 12 13 16 18 27 28 35 51 56
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #6, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-3.8788716775214134
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916772 (regressionFit = 1.916767, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.916772): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]' score=-1.9167716274854754
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), author(_, A).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), author(_, B).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(A, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(E, D), sametitle(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordtitle(_, D), samevenue(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911334 (regressionFit = 1.911328, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.911334): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.913555 (regressionFit = 1.913549, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.913049 (regressionFit = 1.913043, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(_, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(E, F).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(F, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.033.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #6: 119 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #6, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
% This clause covers 10 positive examples, of which 10 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/169.0 pos, 0.0/0.0 neg]'
%     Score = -39.434658 (regressionFit = 39.434656, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 3 15 16 38 41 45 47 54 55 64
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #7, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-39.43465767783227
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.926727 (regressionFit = 1.926723, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.926727): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.913047 (regressionFit = 1.913043, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.913047): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.950570 (regressionFit = 1.950566, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 23.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.012.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #7: 54 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #7, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% This clause covers 46 positive examples, of which 46 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #2 @ 8:54:27 5/11/17.  [Using 13,824,312 memory cells.]  %%%%%


% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( author(E, A), title(E, D) )
%   | | then return 0.7451981925919738;  // std dev = 5.16e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | | then return 0.6213453482063944;  // std dev = 4.771, 214.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=188 */
%   | | | else return 0.5762033760020602;  // std dev = 3.374, 80.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=66 */
%   | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | then if ( author(J, B), venue(J, I) )
%   | | | then return 0.7264261946342654;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.685397027825389;  // std dev = 1.382, 49.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=47 */
%   | | else if ( haswordauthor(A, K), haswordvenue(L, K) )
%   | | | then return 0.6846861293705276;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return 0.7194734122109554;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


% Clauses:

sameauthor(A, B, 0.7451981925919738) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     author(E, A), 
     title(E, D), 
     !. // Clause #1.

sameauthor(A, B, 0.6213453482063944) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     !. // Clause #2.

sameauthor(A, B, 0.5762033760020602) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     !. // Clause #3.

sameauthor(A, B, 0.7264261946342654) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     author(F, B), 
     venue(F, E), 
     !. // Clause #4.

sameauthor(A, B, 0.685397027825389) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     !. // Clause #5.

sameauthor(A, B, 0.6846861293705276) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     !. // Clause #6.

sameauthor(A, B, 0.7194734122109554) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     !. // Clause #7.

sameauthor(A, B, -0.12544463852839138) :- !. // Clause #8.


% The flattened versions of these clauses:

flattened_sameauthor(a, b, 0.7451981925919738) :-  /* #pos=10 */ 
   haswordauthor(a, uniqueVar18),
   haswordauthor(b, uniqueVar18),
   haswordtitle(uniqueVar19, uniqueVar18),
   author(uniqueVar20, a),
   title(uniqueVar20, uniqueVar19),
   !. // Flattened version of clause #1.

flattened_sameauthor(a, b, 0.6213453482063944) :-  /* #neg=26 #pos=188 */ 
   haswordauthor(a, uniqueVar21),
   haswordauthor(b, uniqueVar21),
   haswordtitle(underscore, uniqueVar21),
   haswordauthor(b, uniqueVar22),
   haswordvenue(underscore, uniqueVar22),
   !. // Flattened version of clause #2.

flattened_sameauthor(a, b, 0.5762033760020602) :-  /* #neg=14 #pos=66 */ 
   haswordauthor(a, uniqueVar23),
   haswordauthor(b, uniqueVar23),
   haswordtitle(underscore, uniqueVar23),
   !. // Flattened version of clause #3.

flattened_sameauthor(a, b, 0.7264261946342654) :-  /* #pos=10 */ 
   haswordauthor(a, uniqueVar24),
   haswordauthor(b, uniqueVar24),
   haswordauthor(b, uniqueVar25),
   haswordvenue(uniqueVar26, uniqueVar25),
   author(uniqueVar27, b),
   venue(uniqueVar27, uniqueVar26),
   !. // Flattened version of clause #4.

flattened_sameauthor(a, b, 0.685397027825389) :-  /* #neg=2 #pos=47 */ 
   haswordauthor(a, uniqueVar28),
   haswordauthor(b, uniqueVar28),
   haswordauthor(b, uniqueVar29),
   haswordvenue(underscore, uniqueVar29),
   !. // Flattened version of clause #5.

flattened_sameauthor(a, b, 0.6846861293705276) :-  /* #neg=2 #pos=44 */ 
   haswordauthor(a, uniqueVar30),
   haswordauthor(b, uniqueVar30),
   haswordauthor(a, uniqueVar31),
   haswordvenue(underscore, uniqueVar31),
   !. // Flattened version of clause #6.

flattened_sameauthor(a, b, 0.7194734122109554) :-  /* #pos=123 */ 
   haswordauthor(a, uniqueVar32),
   haswordauthor(b, uniqueVar32),
   !. // Flattened version of clause #7.

flattened_sameauthor(underscore, underscore, -0.12544463852839138) :-  /* #neg=22 */ 
   !. // Flattened version of clause #8.


% The unique flattened literals:
%   haswordauthor(b, uniqueVar30)
%   haswordauthor(b, uniqueVar24)
%   haswordtitle(underscore, uniqueVar23)
%   haswordauthor(b, uniqueVar21)
%   author(uniqueVar27, b)
%   haswordauthor(a, uniqueVar21)
%   haswordvenue(uniqueVar26, uniqueVar25)
%   haswordauthor(b, uniqueVar32)
%   title(uniqueVar20, uniqueVar19)
%   haswordauthor(b, uniqueVar18)
%   haswordauthor(b, uniqueVar29)
%   haswordauthor(a, uniqueVar28)
%   haswordauthor(b, uniqueVar28)
%   venue(uniqueVar27, uniqueVar26)
%   haswordvenue(underscore, uniqueVar29)
%   haswordauthor(a, uniqueVar18)
%   haswordauthor(b, uniqueVar23)
%   haswordauthor(a, uniqueVar23)
%   haswordauthor(a, uniqueVar31)
%   haswordauthor(a, uniqueVar32)
%   haswordauthor(b, uniqueVar25)
%   haswordauthor(a, uniqueVar30)
%   haswordauthor(a, uniqueVar24)
%   haswordvenue(underscore, uniqueVar22)
%   haswordvenue(underscore, uniqueVar31)
%   haswordtitle(underscore, uniqueVar21)
%   haswordtitle(uniqueVar19, uniqueVar18)
%   haswordauthor(b, uniqueVar22)
%   author(uniqueVar20, a)

% Saving model in: datasets/Cora/train/models/bRDNs/sameauthor.model.ckpt
% Time taken to learn 2 trees is 4.030 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.011559518402167956
Set score:0.0025
% Only 554 out of 554 converged.
% Kept 488 of the 488 positive examples.
% Kept 66 of the 66 negative examples.
% Dataset size: 554
Computing probabilities
prob time:42 milliseconds
No hidden examples for : sameauthor
Time to build dataset: 45 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.08448793105740307
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 5 10 119 141 154 170 186 246 284 313
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = sameauthor(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
% Most-general root: sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, A), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, A), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(A, _) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, B), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, B), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(_, A) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -38.654950 (regressionFit = 38.654948, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -38.654950): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -46.468182 (regressionFit = 46.468180, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -46.803344 (regressionFit = 46.803342, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -38.654950 (regressionFit = 38.654948, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, C), haswordauthor(A, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -46.456343 (regressionFit = 46.456341, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -46.801916 (regressionFit = 46.801914, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
Comparing variance: 0.07265967723278446 to score=0.0025 #egs=532.0
Comparing variance: 7.569702440626067E-18 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 532.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.072660)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.072660) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 109 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #1, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% This clause covers 532 positive examples, of which 532 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]'
%     Score = -38.654950 (regressionFit = 38.654948, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Have these 6 positive seeds: 166 219 339 348 432 486
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-38.65495021784134
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.116292 (regressionFit = 38.116289, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -38.116292): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.474788 (regressionFit = 38.474785, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]' score=-38.11629208972838
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -38.116293 (regressionFit = 38.116289, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.116293 (regressionFit = 38.116289, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.116293 (regressionFit = 38.116289, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.116293 (regressionFit = 38.116289, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.116293 (regressionFit = 38.116289, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.451688 (regressionFit = 38.451684, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.116293 (regressionFit = 38.116289, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]' score=-38.474788120617504
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -38.474789 (regressionFit = 38.474785, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, A).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.474789 (regressionFit = 38.474785, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, B).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.474789 (regressionFit = 38.474785, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.474789 (regressionFit = 38.474785, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.451688 (regressionFit = 38.451684, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.474789 (regressionFit = 38.474785, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.474789 (regressionFit = 38.474785, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(D, C), samevenue(D, D).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.116293 (regressionFit = 38.116289, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.474789 (regressionFit = 38.474785, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.116293 (regressionFit = 38.116289, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.474789 (regressionFit = 38.474785, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.116293 (regressionFit = 38.116289, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.327790 (regressionFit = 38.327786, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.474789 (regressionFit = 38.474785, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.616631 (regressionFit = 38.616627, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.116293 (regressionFit = 38.116289, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.315910 (regressionFit = 38.315906, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.474789 (regressionFit = 38.474785, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.611762 (regressionFit = 38.611758, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.073.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
Comparing variance: 0.11269415272286941 to score=0.0025 #egs=304.0
Comparing variance: 0.0169178360612986 to score=0.0025 #egs=228.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 304.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.112694)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.112694) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 228.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.016918)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.016918) into the LAST position (#2) in the search queue.

% Time for loop #2: 193 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #2, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% This clause covers 304 positive examples, of which 304 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]'
%     Score = -38.116292 (regressionFit = 38.116289, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 14 25 38 100 105 119 133 188 245 259
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #3, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-38.11629208972838
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.258277 (regressionFit = 34.258273, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34.258277): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]' score=-34.258277380168984
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -34.258278 (regressionFit = 34.258273, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.258278 (regressionFit = 34.258273, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.258278 (regressionFit = 34.258273, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.258278 (regressionFit = 34.258273, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.258278 (regressionFit = 34.258273, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.258278 (regressionFit = 34.258273, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.258278 (regressionFit = 34.258273, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.258278 (regressionFit = 34.258273, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.258278 (regressionFit = 34.258273, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.258278 (regressionFit = 34.258273, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.258278 (regressionFit = 34.258273, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.176830 (regressionFit = 34.176825, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34.176830): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.258278 (regressionFit = 34.258273, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.180550 (regressionFit = 34.180544, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.258278 (regressionFit = 34.258273, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.258278 (regressionFit = 34.258273, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.113.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
Comparing variance: 0.10161518802985567 to score=0.0025 #egs=224.0
Comparing variance: 0.14268778697219306 to score=0.0025 #egs=80.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 224.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.101615)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.101615) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 80.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.142688)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.142688) into position #1 in the search queue (new size=3).

% Time for loop #3: 221 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #3, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% This clause covers 224 positive examples, of which 224 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/80.0 pos, 0.0/0.0 neg]'
%     Score = -38.116292 (regressionFit = 38.116289, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 0 4 11 17 33 35 38 47 50 52
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #4, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-38.11629208972838
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -11.299776 (regressionFit = 11.299771, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -11.299776): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.143.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 50 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #4, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]'
%     Score = -34.176830 (regressionFit = 34.176825, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 18 53 54 66 80 91 126 150 152 169
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-34.17683013646312
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672299 (regressionFit = 22.672293, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -22.672299): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672299 (regressionFit = 22.672293, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]' score=-22.672298949760286
%  At # nodes expanded = 2, |OPEN| = 10.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -22.672300 (regressionFit = 22.672293, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), author(_, A).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), author(_, B).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordauthor(A, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordauthor(B, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordtitle(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordtitle(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordvenue(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordauthor(B, E), sametitle(D, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, D), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]' score=-22.672299059760288
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 0 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -22.672300 (regressionFit = 22.672293, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, A).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, B).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, C), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(E, F).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(F, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, C), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 8.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.642424 (regressionFit = 22.642417, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 8.0/224.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -22.642424): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 8.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.180000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), author(_, A), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 7.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.617993 (regressionFit = 22.617987, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 11.0/224.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -22.617993): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 11.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.180000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), author(_, B), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 6.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordauthor(A, _), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 5.  Pruned 0 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.770000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordauthor(B, F), haswordtitle(D, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.746297 (regressionFit = 22.746290, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 201.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordauthor(B, _), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 4.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(_, C), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(F, C), sametitle(D, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(F, C), sametitle(F, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(E, C), sametitle(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordtitle(_, C), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 3.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.672300 (regressionFit = 22.672293, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(_, E), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.500599 (regressionFit = 22.500592, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(F, E), sametitle(D, F).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -22.500599): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(F, E), sametitle(D, F).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.500599 (regressionFit = 22.500592, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(F, E), sametitle(F, D).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(E, D), sametitle(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordtitle(_, D), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

***** Warning: #2 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(F, E), sametitle(D, F).  [covers 198.0/224.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(F, E), sametitle(D, F).  [covers 198.0/224.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.102.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(F, E), sametitle(D, F).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #5: 734 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #5, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(F, E), sametitle(D, F).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
% This clause covers 198 positive examples, of which 198 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/228.0 pos, 0.0/0.0 neg]'
%     Score = -38.654950 (regressionFit = 38.654948, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 34 38 41 102 107 116 121 148 183 195
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #6, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-38.65495021784134
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.855160 (regressionFit = 3.855156, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.855160): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.852656 (regressionFit = 3.852652, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.852656): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.853529 (regressionFit = 3.853525, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.850659 (regressionFit = 3.850655, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.850659): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.017.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
Comparing variance: 0.03250732007488605 to score=0.0025 #egs=59.0
Comparing variance: 0.011436231952879069 to score=0.0025 #egs=169.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 59.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.032507)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.032507) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 169.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.011436)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.011436) into the LAST position (#2) in the search queue.

% Time for loop #6: 86 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #6, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% This clause covers 59 positive examples, of which 59 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]'
%     Score = -3.850659 (regressionFit = 3.850655, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Have these 7 positive seeds: 1 3 10 17 41 42 56
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #7, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-3.8506590344548393
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908875 (regressionFit = 1.908870, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.908875): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]' score=-1.9088752999467928
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), author(_, A).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), author(_, B).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(A, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(E, D), sametitle(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordtitle(_, D), samevenue(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.912456 (regressionFit = 1.912450, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909953 (regressionFit = 1.909947, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(_, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(E, F).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(F, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.033.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #7: 129 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #7, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
% This clause covers 51 positive examples, of which 51 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/169.0 pos, 0.0/0.0 neg]'
%     Score = -38.654950 (regressionFit = 38.654948, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 0 43 46 55 71 72 82 97 130 138
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #8, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-38.65495021784134
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.918217 (regressionFit = 1.918213, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.918217): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.913047 (regressionFit = 1.913043, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.913047): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.930519 (regressionFit = 1.930515, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 23.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.011.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #8: 60 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #8, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% This clause covers 46 positive examples, of which 46 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #3 @ 8:54:29 5/11/17.  [Using 13,939,328 memory cells.]  %%%%%


% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( haswordtitle(G, E), sametitle(D, G) )
%   | | | then return 0.47873819653588756;  // std dev = 4.743, 198.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=172 */
%   | | | else return 0.5853487070688884;  // std dev = 0.028, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.51352269367404;  // std dev = 1.351, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0.42966025474120595;  // std dev = 3.078, 57.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=45 */
%   | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.5315632593874174;  // std dev = 1.382, 51.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=49 */
%   | | | else return 0.5677624978089177;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( haswordauthor(A, M), haswordvenue(N, M) )
%   | | | then return 0.5311214831143672;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return 0.5553664367462834;  // std dev = 4.54e-07, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


% Clauses:

sameauthor(A, B, 0.47873819653588756) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(A, E), 
     haswordvenue(F, E), 
     haswordtitle(G, E), 
     sametitle(D, G), 
     !. // Clause #1.

sameauthor(A, B, 0.5853487070688884) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(A, E), 
     haswordvenue(F, E), 
     !. // Clause #2.

sameauthor(A, B, 0.51352269367404) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     !. // Clause #3.

sameauthor(A, B, 0.42966025474120595) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     !. // Clause #4.

sameauthor(A, B, 0.5315632593874174) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     haswordtitle(F, D), 
     !. // Clause #5.

sameauthor(A, B, 0.5677624978089177) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     !. // Clause #6.

sameauthor(A, B, 0.5311214831143672) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     !. // Clause #7.

sameauthor(A, B, 0.5553664367462834) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     !. // Clause #8.

sameauthor(A, B, -0.11231637819360638) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_sameauthor(a, b, 0.47873819653588756) :-  /* #neg=26 #pos=172 */ 
   haswordauthor(a, uniqueVar33),
   haswordauthor(b, uniqueVar33),
   haswordtitle(uniqueVar34, uniqueVar33),
   haswordauthor(a, uniqueVar35),
   haswordvenue(underscore, uniqueVar35),
   haswordtitle(uniqueVar36, uniqueVar35),
   sametitle(uniqueVar34, uniqueVar36),
   !. // Flattened version of clause #1.

flattened_sameauthor(a, b, 0.5853487070688884) :-  /* #pos=26 */ 
   haswordauthor(a, uniqueVar37),
   haswordauthor(b, uniqueVar37),
   haswordtitle(underscore, uniqueVar37),
   haswordauthor(a, uniqueVar38),
   haswordvenue(underscore, uniqueVar38),
   !. // Flattened version of clause #2.

flattened_sameauthor(a, b, 0.51352269367404) :-  /* #neg=2 #pos=21 */ 
   haswordauthor(a, uniqueVar39),
   haswordauthor(b, uniqueVar39),
   haswordtitle(underscore, uniqueVar39),
   haswordauthor(b, uniqueVar40),
   haswordvenue(underscore, uniqueVar40),
   !. // Flattened version of clause #3.

flattened_sameauthor(a, b, 0.42966025474120595) :-  /* #neg=12 #pos=45 */ 
   haswordauthor(a, uniqueVar41),
   haswordauthor(b, uniqueVar41),
   haswordtitle(underscore, uniqueVar41),
   !. // Flattened version of clause #4.

flattened_sameauthor(a, b, 0.5315632593874174) :-  /* #neg=2 #pos=49 */ 
   haswordauthor(a, uniqueVar42),
   haswordauthor(b, uniqueVar42),
   haswordauthor(b, uniqueVar43),
   haswordvenue(underscore, uniqueVar43),
   haswordtitle(underscore, uniqueVar43),
   !. // Flattened version of clause #5.

flattened_sameauthor(a, b, 0.5677624978089177) :-  /* #pos=8 */ 
   haswordauthor(a, uniqueVar44),
   haswordauthor(b, uniqueVar44),
   haswordauthor(b, uniqueVar45),
   haswordvenue(underscore, uniqueVar45),
   !. // Flattened version of clause #6.

flattened_sameauthor(a, b, 0.5311214831143672) :-  /* #neg=2 #pos=44 */ 
   haswordauthor(a, uniqueVar46),
   haswordauthor(b, uniqueVar46),
   haswordauthor(a, uniqueVar47),
   haswordvenue(underscore, uniqueVar47),
   !. // Flattened version of clause #7.

flattened_sameauthor(a, b, 0.5553664367462834) :-  /* #pos=123 */ 
   haswordauthor(a, uniqueVar48),
   haswordauthor(b, uniqueVar48),
   !. // Flattened version of clause #8.

flattened_sameauthor(underscore, underscore, -0.11231637819360638) :-  /* #neg=22 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   haswordauthor(b, uniqueVar44)
%   haswordauthor(b, uniqueVar37)
%   haswordauthor(b, uniqueVar40)
%   haswordtitle(underscore, uniqueVar37)
%   haswordvenue(underscore, uniqueVar40)
%   haswordtitle(uniqueVar36, uniqueVar35)
%   haswordauthor(a, uniqueVar41)
%   haswordauthor(a, uniqueVar42)
%   haswordauthor(b, uniqueVar43)
%   haswordauthor(a, uniqueVar33)
%   haswordauthor(b, uniqueVar45)
%   haswordvenue(underscore, uniqueVar35)
%   haswordvenue(underscore, uniqueVar45)
%   haswordauthor(a, uniqueVar35)
%   haswordtitle(underscore, uniqueVar41)
%   haswordvenue(underscore, uniqueVar43)
%   haswordauthor(a, uniqueVar46)
%   haswordauthor(b, uniqueVar33)
%   haswordtitle(underscore, uniqueVar39)
%   haswordtitle(uniqueVar34, uniqueVar33)
%   haswordauthor(b, uniqueVar42)
%   haswordauthor(a, uniqueVar48)
%   sametitle(uniqueVar34, uniqueVar36)
%   haswordauthor(b, uniqueVar39)
%   haswordauthor(a, uniqueVar44)
%   haswordauthor(a, uniqueVar37)
%   haswordvenue(underscore, uniqueVar47)
%   haswordauthor(a, uniqueVar38)
%   haswordtitle(underscore, uniqueVar43)
%   haswordauthor(a, uniqueVar47)
%   haswordauthor(b, uniqueVar41)
%   haswordauthor(b, uniqueVar48)
%   haswordvenue(underscore, uniqueVar38)
%   haswordauthor(a, uniqueVar39)
%   haswordauthor(b, uniqueVar46)

% Saving model in: datasets/Cora/train/models/bRDNs/sameauthor.model.ckpt


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for sameauthor.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).

logPrior(-1.8).
sameauthor(D, E, Total) :- // A general accessor. 
   sameauthor(D, E, 1000000, Total), !.
sameauthor(D, E, Total) :- waitHere("This should not fail", sameauthor(D, E, Total)).

sameauthor(D, E, TreesToUse, Total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(LogPrior),
   getScore_sameauthor_tree1(D, E, TreesToUse, Total1),
   getScore_sameauthor_tree2(D, E, TreesToUse, Total2),
   getScore_sameauthor_tree3(D, E, TreesToUse, Total3),
   Total is LogPrior + Total1 + Total2 + Total3,
   !.
sameauthor(D, E, TreesToUse, Total) :- waitHere("This should not fail", sameauthor(D, E, TreesToUse, Total)).

getScore_sameauthor_tree1(D, E, TreesToUse, 0.0) :- 1 > TreesToUse, !.
getScore_sameauthor_tree1(D, E, TreesToUse, Total1) :- sameauthor_tree1(D, E, Total), stepLength_tree1(StepLen), Total1 is Total * StepLen.

getScore_sameauthor_tree2(D, E, TreesToUse, 0.0) :- 2 > TreesToUse, !.
getScore_sameauthor_tree2(D, E, TreesToUse, Total2) :- sameauthor_tree2(D, E, Total), stepLength_tree2(StepLen), Total2 is Total * StepLen.

getScore_sameauthor_tree3(D, E, TreesToUse, 0.0) :- 3 > TreesToUse, !.
getScore_sameauthor_tree3(D, E, TreesToUse, Total3) :- sameauthor_tree3(D, E, Total), stepLength_tree3(StepLen), Total3 is Total * StepLen.

flattenedLiteralsInThisSetOfTrees(sameauthor, 100, [
   haswordauthor(b, uniqueVar44),
   haswordvenue(underscore, uniqueVar12),
   haswordauthor(a, uniqueVar9),
   sametitle(uniqueVar2, uniqueVar4),
   haswordvenue(underscore, uniqueVar40),
   haswordauthor(b, uniqueVar21),
   haswordtitle(uniqueVar36, uniqueVar35),
   haswordauthor(a, uniqueVar3),
   author(uniqueVar27, b),
   haswordvenue(uniqueVar26, uniqueVar25),
   haswordauthor(b, uniqueVar18),
   haswordauthor(b, uniqueVar43),
   haswordauthor(a, uniqueVar28),
   haswordauthor(b, uniqueVar45),
   venue(uniqueVar27, uniqueVar26),
   haswordvenue(underscore, uniqueVar35),
   haswordauthor(a, uniqueVar7),
   haswordauthor(a, uniqueVar10),
   haswordauthor(a, uniqueVar23),
   haswordtitle(underscore, uniqueVar41),
   haswordauthor(b, uniqueVar5),
   haswordauthor(b, uniqueVar42),
   sametitle(uniqueVar34, uniqueVar36),
   haswordauthor(b, uniqueVar1),
   haswordauthor(b, uniqueVar25),
   haswordauthor(a, uniqueVar37),
   haswordvenue(underscore, uniqueVar47),
   haswordauthor(a, uniqueVar47),
   haswordauthor(b, uniqueVar48),
   haswordtitle(uniqueVar4, uniqueVar3),
   haswordauthor(b, uniqueVar8),
   haswordauthor(a, uniqueVar11),
   haswordauthor(a, uniqueVar6),
   haswordauthor(b, uniqueVar13),
   haswordauthor(b, uniqueVar30),
   haswordvenue(underscore, uniqueVar16),
   haswordauthor(b, uniqueVar29),
   haswordauthor(b, uniqueVar10),
   haswordauthor(b, uniqueVar28),
   haswordvenue(underscore, uniqueVar29),
   haswordauthor(a, uniqueVar18),
   haswordauthor(a, uniqueVar35),
   haswordauthor(a, uniqueVar46),
   haswordauthor(b, uniqueVar9),
   haswordauthor(b, uniqueVar33),
   haswordauthor(a, uniqueVar13),
   haswordauthor(a, uniqueVar31),
   haswordauthor(a, uniqueVar32),
   haswordtitle(uniqueVar2, uniqueVar1),
   haswordvenue(underscore, uniqueVar31),
   haswordtitle(underscore, uniqueVar21),
   haswordauthor(b, uniqueVar46),
   haswordauthor(b, uniqueVar40),
   haswordtitle(underscore, uniqueVar37),
   haswordauthor(b, uniqueVar12),
   haswordauthor(a, uniqueVar21),
   haswordauthor(b, uniqueVar32),
   haswordauthor(a, uniqueVar42),
   haswordauthor(a, uniqueVar33),
   haswordauthor(b, uniqueVar7),
   haswordauthor(b, uniqueVar23),
   haswordvenue(underscore, uniqueVar45),
   haswordvenue(underscore, uniqueVar43),
   haswordtitle(underscore, uniqueVar39),
   haswordtitle(uniqueVar34, uniqueVar33),
   haswordvenue(underscore, uniqueVar11),
   haswordauthor(b, uniqueVar15),
   haswordauthor(a, uniqueVar48),
   haswordtitle(underscore, uniqueVar5),
   haswordauthor(a, uniqueVar38),
   haswordtitle(underscore, uniqueVar43),
   haswordauthor(b, uniqueVar41),
   haswordauthor(a, uniqueVar30),
   haswordauthor(a, uniqueVar24),
   haswordvenue(underscore, uniqueVar38),
   haswordauthor(b, uniqueVar16),
   haswordtitle(uniqueVar19, uniqueVar18),
   haswordvenue(underscore, uniqueVar6),
   haswordvenue(underscore, uniqueVar8),
   haswordtitle(underscore, uniqueVar9),
   author(uniqueVar20, a),
   haswordauthor(a, uniqueVar14),
   haswordauthor(b, uniqueVar37),
   haswordauthor(b, uniqueVar24),
   haswordtitle(underscore, uniqueVar23),
   haswordauthor(a, uniqueVar1),
   haswordauthor(a, uniqueVar41),
   title(uniqueVar20, uniqueVar19),
   haswordtitle(underscore, uniqueVar7),
   haswordauthor(a, uniqueVar15),
   haswordauthor(a, uniqueVar5),
   haswordvenue(underscore, uniqueVar14),
   haswordauthor(b, uniqueVar39),
   haswordauthor(a, uniqueVar44),
   haswordvenue(underscore, uniqueVar3),
   haswordauthor(a, uniqueVar17),
   haswordauthor(a, uniqueVar39),
   haswordvenue(underscore, uniqueVar22),
   haswordauthor(b, uniqueVar22),
   haswordauthor(b, uniqueVar17)]).
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.8449570244542954
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 594 616 652 653 896 933 952 1074 1349 1400
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = sameauthor(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  sameauthor(_, _).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
% Most-general root: sameauthor(_, _).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'sameauthor(_, _).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- author(_, A).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- author(_, A).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- author(_, A).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(_, A), author(_, A).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, A), author(_, B).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- author(_, A), haswordauthor(A, _).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, A), haswordauthor(B, _).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(B, A), venue(B, _).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(A, _) :- author(B, A), samebib(B, B).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- author(_, A).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, B), author(_, A).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(_, A), author(_, A).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, B), haswordauthor(A, _).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- author(_, A), haswordauthor(A, _).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(B, A), venue(B, _).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(_, A) :- author(B, A), samebib(B, B).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- haswordauthor(A, _).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), author(_, A).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), author(_, B).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -1,064.121284 (regressionFit = 1,064.121282, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 1,596.0/1,662.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1,064.121284): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 1,596.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), haswordauthor(B, _).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -1,386.237615 (regressionFit = 1,386.237613, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 1,182.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -1,403.877377 (regressionFit = 1,403.877374, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 876.0/1,662.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- haswordauthor(A, _).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), author(_, A).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), author(_, A).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -1,064.121284 (regressionFit = 1,064.121282, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, C), haswordauthor(A, C).  [covers 1,596.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), haswordauthor(A, _).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 1,662.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -1,386.088651 (regressionFit = 1,386.088649, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 1,182.0/1,662.0 pos, 0.0/0.0 neg]
%     Score = -1,403.882353 (regressionFit = 1,403.882351, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 876.0/1,662.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 1,596.0/1,662.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 1,596.0/1,662.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 1,596.0/1,662.0 pos, 0.0/0.0 neg]
Comparing variance: 0.6667426576933169 to score=0.0025 #egs=1596.0
Comparing variance: -4.306319610667274E-16 to score=0.0025 #egs=66.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 1,596.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.666743)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 1,596.0/1,662.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.666743) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 280 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #1, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 1,596.0/1,662.0 pos, 0.0/0.0 neg]
% This clause covers 1596 positive examples, of which 1596 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]'
%     Score = -1,064.121284 (regressionFit = 1,064.121282, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 385 484 759 946 957 961 974 997 1190 1289
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]' score=-1064.1212836085338
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,035.578981 (regressionFit = 1,035.578978, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 912.0/1,596.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1,035.578981): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 912.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,055.431799 (regressionFit = 1,055.431796, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 582.0/1,596.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 912.0/1,596.0 pos, 0.0/0.0 neg]' score=-1035.578981494329
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -1,035.578983 (regressionFit = 1,035.578978, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 912.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,035.578983 (regressionFit = 1,035.578978, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 912.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,035.578983 (regressionFit = 1,035.578978, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 912.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,035.578983 (regressionFit = 1,035.578978, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 912.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,035.578983 (regressionFit = 1,035.578978, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 912.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,054.366414 (regressionFit = 1,054.366410, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 567.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,035.578982 (regressionFit = 1,035.578978, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 912.0/1,596.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 582.0/1,596.0 pos, 0.0/0.0 neg]' score=-1055.431799457568
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -1,055.431801 (regressionFit = 1,055.431796, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, A).  [covers 582.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,055.431801 (regressionFit = 1,055.431796, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, B).  [covers 582.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,055.431800 (regressionFit = 1,055.431796, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 582.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,055.431800 (regressionFit = 1,055.431796, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 582.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,054.366414 (regressionFit = 1,054.366410, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 567.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,055.431800 (regressionFit = 1,055.431796, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 582.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,055.431800 (regressionFit = 1,055.431796, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(D, C), samevenue(D, D).  [covers 582.0/1,596.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,035.578983 (regressionFit = 1,035.578978, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordtitle(_, C).  [covers 912.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,055.431801 (regressionFit = 1,055.431796, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordvenue(_, C).  [covers 582.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,035.578983 (regressionFit = 1,035.578978, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordtitle(_, C).  [covers 912.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,055.431801 (regressionFit = 1,055.431796, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordvenue(_, C).  [covers 582.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,035.578983 (regressionFit = 1,035.578978, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 912.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,046.476912 (regressionFit = 1,046.476908, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 1,134.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,055.431800 (regressionFit = 1,055.431796, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 582.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,061.614603 (regressionFit = 1,061.614599, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 849.0/1,596.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,035.578983 (regressionFit = 1,035.578978, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 912.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,046.326838 (regressionFit = 1,046.326834, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 1,134.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,055.431800 (regressionFit = 1,055.431796, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 582.0/1,596.0 pos, 0.0/0.0 neg]
%     Score = -1,061.626735 (regressionFit = 1,061.626731, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 849.0/1,596.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 912.0/1,596.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 912.0/1,596.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.667.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 912.0/1,596.0 pos, 0.0/0.0 neg]
Comparing variance: 1.0203379417773508 to score=0.0025 #egs=912.0
Comparing variance: 0.15355376542892538 to score=0.0025 #egs=684.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 912.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-1.020338)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 912.0/1,596.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -1.020338) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 684.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.153554)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 1,596.0/1,596.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.153554) into the LAST position (#2) in the search queue.

% Time for loop #2: 532 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #2, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 912.0/1,596.0 pos, 0.0/0.0 neg]
% This clause covers 912 positive examples, of which 912 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 912.0/912.0 pos, 0.0/0.0 neg]'
%     Score = -1,035.578981 (regressionFit = 1,035.578978, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 912.0/912.0 pos, 0.0/0.0 neg]

% Have these 7 positive seeds: 204 386 544 649 698 782 790
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #3, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 912.0/912.0 pos, 0.0/0.0 neg]' score=-1035.578981494329
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -930.383165 (regressionFit = 930.383160, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 567.0/912.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -930.383165): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 567.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 912.0/912.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 567.0/912.0 pos, 0.0/0.0 neg]' score=-930.3831645262567
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -930.383166 (regressionFit = 930.383160, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 567.0/912.0 pos, 0.0/0.0 neg]
%     Score = -930.383166 (regressionFit = 930.383160, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 567.0/912.0 pos, 0.0/0.0 neg]
%     Score = -930.383166 (regressionFit = 930.383160, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 567.0/912.0 pos, 0.0/0.0 neg]
%     Score = -930.383166 (regressionFit = 930.383160, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 567.0/912.0 pos, 0.0/0.0 neg]
%     Score = -930.383166 (regressionFit = 930.383160, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 567.0/912.0 pos, 0.0/0.0 neg]
%     Score = -930.383166 (regressionFit = 930.383160, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 567.0/912.0 pos, 0.0/0.0 neg]
%     Score = -930.383165 (regressionFit = 930.383160, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 567.0/912.0 pos, 0.0/0.0 neg]
%     Score = -930.383165 (regressionFit = 930.383160, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 567.0/912.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 912.0/912.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -930.383166 (regressionFit = 930.383160, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 567.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 912.0/912.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 912.0/912.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -930.383166 (regressionFit = 930.383160, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 567.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 912.0/912.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 912.0/912.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -930.383166 (regressionFit = 930.383160, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 567.0/912.0 pos, 0.0/0.0 neg]
%     Score = -926.873374 (regressionFit = 926.873369, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 672.0/912.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -926.873374): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 672.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 912.0/912.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 912.0/912.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -930.383166 (regressionFit = 930.383160, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 567.0/912.0 pos, 0.0/0.0 neg]
%     Score = -926.774149 (regressionFit = 926.774144, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 672.0/912.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -926.774149): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 672.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 912.0/912.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 912.0/912.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -930.383166 (regressionFit = 930.383160, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 567.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 912.0/912.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 912.0/912.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%     Score = -930.383165 (regressionFit = 930.383160, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 567.0/912.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 672.0/912.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 672.0/912.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -1.020.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 672.0/912.0 pos, 0.0/0.0 neg]
Comparing variance: 0.9201934613302827 to score=0.0025 #egs=672.0
Comparing variance: 1.2850172397496682 to score=0.0025 #egs=240.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 672.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.920193)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 672.0/912.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.920193) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 240.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-1.285017)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 912.0/912.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -1.285017) into position #1 in the search queue (new size=3).

% Time for loop #3: 622 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #3, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 672.0/912.0 pos, 0.0/0.0 neg]
% This clause covers 672 positive examples, of which 672 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 912.0/240.0 pos, 0.0/0.0 neg]'
%     Score = -1,035.578981 (regressionFit = 1,035.578978, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 240.0/240.0 pos, 0.0/0.0 neg]

% Have these 8 positive seeds: 2 58 88 94 200 224 231 233
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #4, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 240.0/240.0 pos, 0.0/0.0 neg]' score=-1035.578981494329
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 240.0/240.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 240.0/240.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 240.0/240.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 240.0/240.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 240.0/240.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 240.0/240.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -303.896923 (regressionFit = 303.896917, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 69.0/240.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -303.896923): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 69.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 240.0/240.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 240.0/240.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 240.0/240.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 240.0/240.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 240.0/240.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 240.0/240.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 240.0/240.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 240.0/240.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 69.0/240.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 69.0/240.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -1.285.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 69.0/240.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 105 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #4, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 69.0/240.0 pos, 0.0/0.0 neg]
% This clause covers 69 positive examples, of which 69 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]'
%     Score = -926.774149 (regressionFit = 926.774144, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]

% Have these 9 positive seeds: 65 181 231 278 330 363 392 460 602
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]' score=-926.7741486138704
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535085 (regressionFit = 615.535079, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -615.535085): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -609.456545 (regressionFit = 609.456539, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 594.0/672.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -609.456545): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 594.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), sametitle(D, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E).  [covers 672.0/672.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 594.0/672.0 pos, 0.0/0.0 neg]' score=-609.4565450246085
%  At # nodes expanded = 2, |OPEN| = 11.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -609.456546 (regressionFit = 609.456539, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), author(_, A).  [covers 594.0/672.0 pos, 0.0/0.0 neg]
%     Score = -609.456546 (regressionFit = 609.456539, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), author(_, B).  [covers 594.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.7600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordauthor(A, E).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -609.456546 (regressionFit = 609.456539, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordauthor(A, _).  [covers 594.0/672.0 pos, 0.0/0.0 neg]
%     Score = -609.456546 (regressionFit = 609.456539, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordauthor(B, _).  [covers 594.0/672.0 pos, 0.0/0.0 neg]
%     Score = -609.456546 (regressionFit = 609.456539, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordtitle(_, C).  [covers 594.0/672.0 pos, 0.0/0.0 neg]
%     Score = -609.456546 (regressionFit = 609.456539, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordtitle(_, E).  [covers 594.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordvenue(_, C).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -609.456546 (regressionFit = 609.456539, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordvenue(_, E).  [covers 594.0/672.0 pos, 0.0/0.0 neg]
%     Score = -609.456546 (regressionFit = 609.456539, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), sametitle(D, D).  [covers 594.0/672.0 pos, 0.0/0.0 neg]
%     Score = -609.456546 (regressionFit = 609.456539, penalties=6.7600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(F, E), haswordtitle(D, E), samevenue(F, F).  [covers 594.0/672.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D).  [covers 567.0/672.0 pos, 0.0/0.0 neg]' score=-615.5350854114232
%  At # nodes expanded = 3, |OPEN| = 10.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -615.535087 (regressionFit = 615.535079, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), author(_, A).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535087 (regressionFit = 615.535079, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), author(_, B).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordauthor(A, _).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordauthor(B, _).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.7600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, E), haswordtitle(D, E).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordtitle(_, C).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordtitle(_, D).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordvenue(_, C).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordvenue(_, D).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, E), sametitle(D, D).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(A, D), samevenue(E, E).  [covers 567.0/672.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 567.0/672.0 pos, 0.0/0.0 neg]' score=-615.5350855214233
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -615.535087 (regressionFit = 615.535079, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), author(_, A).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535087 (regressionFit = 615.535079, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), author(_, B).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, D).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535087 (regressionFit = 615.535079, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, _).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535087 (regressionFit = 615.535079, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(B, _).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535087 (regressionFit = 615.535079, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, C).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535087 (regressionFit = 615.535079, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, D).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535087 (regressionFit = 615.535079, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, C).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535087 (regressionFit = 615.535079, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, D).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordvenue(_, C), sametitle(D, D).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(_, C), samevenue(E, E).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(E, F).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(F, E).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(E, C), samevenue(E, E).  [covers 567.0/672.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A).  [covers 672.0/672.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 8.  Pruned 0 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535087 (regressionFit = 615.535079, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(A, D).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -609.456546 (regressionFit = 609.456539, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, A), haswordtitle(D, E).  [covers 594.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordtitle(_, C).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535087 (regressionFit = 615.535079, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordvenue(_, C).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -614.259626 (regressionFit = 614.259619, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 33.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.180000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, A), sametitle(D, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 672.0/672.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B).  [covers 672.0/672.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 7.  Pruned 0 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535087 (regressionFit = 615.535079, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(A, D).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -609.456546 (regressionFit = 609.456539, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, B), haswordtitle(D, E).  [covers 594.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordtitle(_, C).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535087 (regressionFit = 615.535079, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordvenue(_, C).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -614.746885 (regressionFit = 614.746878, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(F, B), title(F, D).  [covers 30.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.180000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, B), sametitle(D, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 672.0/672.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 672.0/672.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 6.  Pruned 0 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, D).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -609.456546 (regressionFit = 609.456539, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, _), haswordtitle(D, E).  [covers 594.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.770000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, F), haswordtitle(D, F).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, C).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535087 (regressionFit = 615.535079, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, C).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -617.942037 (regressionFit = 617.942030, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 603.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, _), sametitle(D, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 672.0/672.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 672.0/672.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 5.  Pruned 0 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, D).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -609.456546 (regressionFit = 609.456539, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(B, _), haswordtitle(D, E).  [covers 594.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.770000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(B, F), haswordtitle(D, F).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, C).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535087 (regressionFit = 615.535079, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, C).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(B, _), sametitle(D, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 672.0/672.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C).  [covers 672.0/672.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 4.  Pruned 0 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), author(_, A).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), author(_, B).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535086 (regressionFit = 615.535079, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(A, D).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(A, _).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(B, _).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -609.456546 (regressionFit = 609.456539, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(_, C), haswordtitle(D, E).  [covers 594.0/672.0 pos, 0.0/0.0 neg]
%     Score = -609.456546 (regressionFit = 609.456539, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(E, C), haswordtitle(E, D).  [covers 594.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordtitle(_, C).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordtitle(_, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -615.535087 (regressionFit = 615.535079, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordvenue(_, C).  [covers 567.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordvenue(_, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(_, C), sametitle(D, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(F, C), sametitle(D, F).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(F, C), sametitle(F, D).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(E, C), sametitle(E, E).  [covers 672.0/672.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordtitle(_, C), samevenue(E, E).  [covers 672.0/672.0 pos, 0.0/0.0 neg]

***** Warning: #3 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 594.0/672.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 594.0/672.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.920.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 594.0/672.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #5: 1.352 seconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #5, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 594.0/672.0 pos, 0.0/0.0 neg]
% This clause covers 594 positive examples, of which 594 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 1,596.0/684.0 pos, 0.0/0.0 neg]'
%     Score = -1,064.121284 (regressionFit = 1,064.121282, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 684.0/684.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 0 23 24 267 290 298 334 387 394 403
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #6, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 684.0/684.0 pos, 0.0/0.0 neg]' score=-1064.1212836085338
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 684.0/684.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 684.0/684.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 684.0/684.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 684.0/684.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 684.0/684.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 684.0/684.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -104.879413 (regressionFit = 104.879409, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 222.0/684.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -104.879413): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 222.0/684.0 pos, 0.0/0.0 neg]
%     Score = -104.702915 (regressionFit = 104.702911, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 177.0/684.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -104.702915): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 177.0/684.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 684.0/684.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%     Score = -104.858194 (regressionFit = 104.858190, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 222.0/684.0 pos, 0.0/0.0 neg]
%     Score = -104.675843 (regressionFit = 104.675839, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 177.0/684.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -104.675843): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 177.0/684.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 177.0/684.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 177.0/684.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.154.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 177.0/684.0 pos, 0.0/0.0 neg]
Comparing variance: 0.29360578084184663 to score=0.0025 #egs=177.0
Comparing variance: 0.10395979375081961 to score=0.0025 #egs=507.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 177.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.293606)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 177.0/684.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.293606) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 507.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.103960)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 684.0/684.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.103960) into the LAST position (#2) in the search queue.

% Time for loop #6: 192 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #6, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 177.0/684.0 pos, 0.0/0.0 neg]
% This clause covers 177 positive examples, of which 177 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 177.0/177.0 pos, 0.0/0.0 neg]'
%     Score = -104.675843 (regressionFit = 104.675839, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 177.0/177.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 8 29 48 57 75 81 83 84 94 96
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #7, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 177.0/177.0 pos, 0.0/0.0 neg]' score=-104.6758425906724
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846196 (regressionFit = 51.846191, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -51.846196): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.714633 (regressionFit = 51.714628, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 153.0/177.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -51.714633): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 153.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846196 (regressionFit = 51.846191, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E).  [covers 177.0/177.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 153.0/177.0 pos, 0.0/0.0 neg]' score=-51.71463279645979
%  At # nodes expanded = 2, |OPEN| = 8.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -51.714634 (regressionFit = 51.714628, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), author(_, A).  [covers 153.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.714634 (regressionFit = 51.714628, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), author(_, B).  [covers 153.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.714634 (regressionFit = 51.714628, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(A, _).  [covers 153.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.714634 (regressionFit = 51.714628, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 153.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.714634 (regressionFit = 51.714628, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 153.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.714634 (regressionFit = 51.714628, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 153.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.714634 (regressionFit = 51.714628, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(E, D), sametitle(E, E).  [covers 153.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.714634 (regressionFit = 51.714628, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordtitle(_, D), samevenue(E, E).  [covers 153.0/177.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D).  [covers 15.0/177.0 pos, 0.0/0.0 neg]' score=-51.846196199850134
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), author(_, A).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), author(_, B).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordauthor(A, _).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordauthor(B, _).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordvenue(_, C).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordvenue(_, D).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.750000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(A, D), samevenue(E, E).  [covers 15.0/177.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 15.0/177.0 pos, 0.0/0.0 neg]' score=-51.84619630985013
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -51.846197 (regressionFit = 51.846191, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), author(_, A).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), author(_, B).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, _).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(B, _).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, C).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, D).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(_, C), samevenue(E, E).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(E, F).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(F, E).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(E, C), samevenue(E, E).  [covers 15.0/177.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A).  [covers 177.0/177.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(A, D).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.714634 (regressionFit = 51.714628, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 153.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordvenue(_, C).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.811109 (regressionFit = 51.811104, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 177.0/177.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B).  [covers 177.0/177.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 4.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(A, D).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.714634 (regressionFit = 51.714628, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 153.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordvenue(_, C).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.650917 (regressionFit = 51.650911, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 30.0/177.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -51.650917): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 30.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 177.0/177.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 177.0/177.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 3.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, D).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.714634 (regressionFit = 51.714628, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 153.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.612928 (regressionFit = 51.612923, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 33.0/177.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -51.612928): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 33.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, C).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.591725 (regressionFit = 51.591719, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 39.0/177.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -51.591725): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 39.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 177.0/177.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 177.0/177.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 2.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, D).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.714634 (regressionFit = 51.714628, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 153.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.714634 (regressionFit = 51.714628, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 153.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, C).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 177.0/177.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 177.0/177.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D), author(_, A).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D), author(_, B).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(A, D).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.714634 (regressionFit = 51.714628, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 153.0/177.0 pos, 0.0/0.0 neg]
%     Score = -51.846197 (regressionFit = 51.846191, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 15.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(_, D), samevenue(E, E).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(E, F).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(F, E).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(E, D), samevenue(E, E).  [covers 177.0/177.0 pos, 0.0/0.0 neg]

***** Warning: #4 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 39.0/177.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 39.0/177.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.294.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 39.0/177.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #7: 285 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #7, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 39.0/177.0 pos, 0.0/0.0 neg]
% This clause covers 39 positive examples, of which 39 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 684.0/507.0 pos, 0.0/0.0 neg]'
%     Score = -1,064.121284 (regressionFit = 1,064.121282, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 507.0/507.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 60 78 85 127 222 240 258 265 269 287
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #8, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 507.0/507.0 pos, 0.0/0.0 neg]' score=-1064.1212836085338
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 507.0/507.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 507.0/507.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 507.0/507.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 507.0/507.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 507.0/507.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 507.0/507.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -52.005336 (regressionFit = 52.005332, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 189.0/507.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -52.005336): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 189.0/507.0 pos, 0.0/0.0 neg]
%     Score = -51.652178 (regressionFit = 51.652174, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 138.0/507.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -51.652178): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 138.0/507.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 507.0/507.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 507.0/507.0 pos, 0.0/0.0 neg]
%     Score = -52.628144 (regressionFit = 52.628140, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 69.0/507.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 138.0/507.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 138.0/507.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.104.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 138.0/507.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #8: 132 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #8, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 138.0/507.0 pos, 0.0/0.0 neg]
% This clause covers 138 positive examples, of which 138 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 8:54:33 5/11/17.  [Using 13,890,328 memory cells.]  %%%%%


% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( haswordtitle(D, E) )
%   | | | then return 1.8181054630488118;  // std dev = 24.687, 594.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=516 */
%   | | | else return 2.177662207477098;  // std dev = 0.168, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | | then return 1.9294885691427233;  // std dev = 6.936, 69.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=63 */
%   | | | else return 1.6267014455579738;  // std dev = 15.993, 171.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=135 */
%   | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | then if ( haswordauthor(A, K), haswordvenue(L, K) )
%   | | | then return 2.139830530672095;  // std dev = 0.023, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return 2.0285550607206613;  // std dev = 7.183, 138.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=132 */
%   | | else if ( haswordauthor(A, M), haswordvenue(N, M) )
%   | | | then return 2.0304782867148403;  // std dev = 7.187, 138.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=132 */
%   | | | else return 2.1329887840567694;  // std dev = 0.000, 369.000 (wgt'ed) examples reached here.  /* #pos=369 */
%   else return -0.3796120816224861;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */


% Clauses:

sameauthor(A, B, 1.8181054630488118) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     haswordtitle(D, E), 
     !. // Clause #1.

sameauthor(A, B, 2.177662207477098) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     !. // Clause #2.

sameauthor(A, B, 1.9294885691427233) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(A, E), 
     haswordvenue(F, E), 
     !. // Clause #3.

sameauthor(A, B, 1.6267014455579738) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     !. // Clause #4.

sameauthor(A, B, 2.139830530672095) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     haswordauthor(A, F), 
     haswordvenue(G, F), 
     !. // Clause #5.

sameauthor(A, B, 2.0285550607206613) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     !. // Clause #6.

sameauthor(A, B, 2.0304782867148403) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     !. // Clause #7.

sameauthor(A, B, 2.1329887840567694) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     !. // Clause #8.

sameauthor(A, B, -0.3796120816224861) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_sameauthor(a, b, 1.8181054630488118) :-  /* #neg=78 #pos=516 */ 
   haswordauthor(a, uniqueVar49),
   haswordauthor(b, uniqueVar49),
   haswordtitle(uniqueVar50, uniqueVar49),
   haswordauthor(b, uniqueVar51),
   haswordvenue(underscore, uniqueVar51),
   haswordtitle(uniqueVar50, uniqueVar51),
   !. // Flattened version of clause #1.

flattened_sameauthor(a, b, 2.177662207477098) :-  /* #pos=78 */ 
   haswordauthor(a, uniqueVar52),
   haswordauthor(b, uniqueVar52),
   haswordtitle(underscore, uniqueVar52),
   haswordauthor(b, uniqueVar53),
   haswordvenue(underscore, uniqueVar53),
   !. // Flattened version of clause #2.

flattened_sameauthor(a, b, 1.9294885691427233) :-  /* #neg=6 #pos=63 */ 
   haswordauthor(a, uniqueVar54),
   haswordauthor(b, uniqueVar54),
   haswordtitle(underscore, uniqueVar54),
   haswordauthor(a, uniqueVar55),
   haswordvenue(underscore, uniqueVar55),
   !. // Flattened version of clause #3.

flattened_sameauthor(a, b, 1.6267014455579738) :-  /* #neg=36 #pos=135 */ 
   haswordauthor(a, uniqueVar56),
   haswordauthor(b, uniqueVar56),
   haswordtitle(underscore, uniqueVar56),
   !. // Flattened version of clause #4.

flattened_sameauthor(a, b, 2.139830530672095) :-  /* #pos=39 */ 
   haswordauthor(a, uniqueVar57),
   haswordauthor(b, uniqueVar57),
   haswordauthor(b, uniqueVar58),
   haswordvenue(underscore, uniqueVar58),
   haswordauthor(a, uniqueVar59),
   haswordvenue(underscore, uniqueVar59),
   !. // Flattened version of clause #5.

flattened_sameauthor(a, b, 2.0285550607206613) :-  /* #neg=6 #pos=132 */ 
   haswordauthor(a, uniqueVar60),
   haswordauthor(b, uniqueVar60),
   haswordauthor(b, uniqueVar61),
   haswordvenue(underscore, uniqueVar61),
   !. // Flattened version of clause #6.

flattened_sameauthor(a, b, 2.0304782867148403) :-  /* #neg=6 #pos=132 */ 
   haswordauthor(a, uniqueVar62),
   haswordauthor(b, uniqueVar62),
   haswordauthor(a, uniqueVar63),
   haswordvenue(underscore, uniqueVar63),
   !. // Flattened version of clause #7.

flattened_sameauthor(a, b, 2.1329887840567694) :-  /* #pos=369 */ 
   haswordauthor(a, uniqueVar64),
   haswordauthor(b, uniqueVar64),
   !. // Flattened version of clause #8.

flattened_sameauthor(underscore, underscore, -0.3796120816224861) :-  /* #neg=66 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   haswordauthor(a, uniqueVar57)
%   haswordvenue(underscore, uniqueVar58)
%   haswordauthor(a, uniqueVar62)
%   haswordvenue(underscore, uniqueVar51)
%   haswordauthor(a, uniqueVar60)
%   haswordauthor(b, uniqueVar52)
%   haswordauthor(b, uniqueVar53)
%   haswordauthor(b, uniqueVar54)
%   haswordtitle(uniqueVar50, uniqueVar51)
%   haswordvenue(underscore, uniqueVar63)
%   haswordtitle(underscore, uniqueVar56)
%   haswordvenue(underscore, uniqueVar59)
%   haswordauthor(b, uniqueVar61)
%   haswordauthor(b, uniqueVar64)
%   haswordauthor(a, uniqueVar55)
%   haswordauthor(a, uniqueVar59)
%   haswordauthor(a, uniqueVar63)
%   haswordtitle(uniqueVar50, uniqueVar49)
%   haswordauthor(b, uniqueVar56)
%   haswordauthor(b, uniqueVar58)
%   haswordauthor(a, uniqueVar56)
%   haswordauthor(b, uniqueVar51)
%   haswordtitle(underscore, uniqueVar54)
%   haswordvenue(underscore, uniqueVar55)
%   haswordauthor(b, uniqueVar62)
%   haswordauthor(a, uniqueVar64)
%   haswordauthor(b, uniqueVar49)
%   haswordauthor(b, uniqueVar60)
%   haswordvenue(underscore, uniqueVar53)
%   haswordauthor(a, uniqueVar54)
%   haswordauthor(b, uniqueVar57)
%   haswordvenue(underscore, uniqueVar61)
%   haswordauthor(a, uniqueVar52)
%   haswordauthor(a, uniqueVar49)
%   haswordtitle(underscore, uniqueVar52)

% Time taken to learn model for 'sameauthor': 9.370 seconds.
% Saving model in: datasets/Cora/train/models/bRDNs/sameauthor.model
cached groundings hit: 0
Misses: 0

% Total learning time (3 trees): 10.423 seconds.
