% Running on host: hawk

% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

% Calling ILPouterLoop from createRegressionOuterLooper.

% getInputArgWithDefaultValue: args=[datasets/Cora/train/train_pos.txt, datasets/Cora/train/train_neg.txt, datasets/Cora/train/train_bk.txt, datasets/Cora/train/train_facts.txt]
%  for N=0: args[N]=datasets/Cora/train/train_pos.txt

% getInputArgWithDefaultValue: args=[datasets/Cora/train/train_pos.txt, datasets/Cora/train/train_neg.txt, datasets/Cora/train/train_bk.txt, datasets/Cora/train/train_facts.txt]
%  for N=1: args[N]=datasets/Cora/train/train_neg.txt

% getInputArgWithDefaultValue: args=[datasets/Cora/train/train_pos.txt, datasets/Cora/train/train_neg.txt, datasets/Cora/train/train_bk.txt, datasets/Cora/train/train_facts.txt]
%  for N=2: args[N]=datasets/Cora/train/train_bk.txt

% getInputArgWithDefaultValue: args=[datasets/Cora/train/train_pos.txt, datasets/Cora/train/train_neg.txt, datasets/Cora/train/train_bk.txt, datasets/Cora/train/train_facts.txt]
%  for N=3: args[N]=datasets/Cora/train/train_facts.txt

% Welcome to the WILL ILP/SRL systems.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.
% Reading background theory from dir: null
% Load '../cora_bk.txt'.

% Switching to VarIndicator = uppercase.

***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****


***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****

% [ LazyGroundClauseIndex ]  Building full index for mode/1 with 1 assertions.
% LoadAllModes() called.  Currently loaded modes: []
% [ LazyGroundClauseIndex ]  Building full index for sameAs/2 with 2 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for exp/3.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for log/3.
% LoadAllLibraries() called.  Currently loaded libraries: [listsInLogic, differentInLogic, modes_arithmeticInLogic, inlines_comparisonInLogic, modes_listsInLogic, inlines_differentInLogic, modes_differentInLogic, arithmeticInLogic, inlines_listsInLogic, modes_comparisonInLogic, comparisonInLogic, inlines_arithmeticInLogic]

%  Read the facts.
%  Have read 6,541 facts.
% Have read 35,008 examples from 'datasets/Cora/train' [datasets/Cora/train/train*].
% Have read 27,709 examples from 'datasets/Cora/train' [datasets/Cora/train/train*].

%  LearnOneClause initialized.

% The outer looper has been created.

% Initializing the ILP inner looper.

% NEW target:                 sameauthor(D, E)
%  targetPred:                sameauthor/2
%  targetArgTypes:            signature = [const, const], types = [+authid, +authid]
%  targets:                   [sameauthor(D, E)]
%  targetPredicates:          [sameauthor/2, samebib/2, sametitle/2, samevenue/2]
%  targetArgSpecs:            [[D[+authid], E[+authid]]]
%  variablesInTargets:        [[D, E]]

% NEW target:                 samebib(F, G)
%  targetPred:                samebib/2
%  targetArgTypes:            signature = [const, const], types = [+paperid, +paperid]
%  targets:                   [sameauthor(D, E), samebib(F, G)]
%  targetPredicates:          [sameauthor/2, samebib/2, sametitle/2, samevenue/2]
%  targetArgSpecs:            [[D[+authid], E[+authid]], [F[+paperid], G[+paperid]]]
%  variablesInTargets:        [[D, E], [F, G]]

% NEW target:                 sametitle(H, I)
%  targetPred:                sametitle/2
%  targetArgTypes:            signature = [const, const], types = [+titleid, +titleid]
%  targets:                   [sameauthor(D, E), samebib(F, G), sametitle(H, I)]
%  targetPredicates:          [sameauthor/2, samebib/2, sametitle/2, samevenue/2]
%  targetArgSpecs:            [[D[+authid], E[+authid]], [F[+paperid], G[+paperid]], [H[+titleid], I[+titleid]]]
%  variablesInTargets:        [[D, E], [F, G], [H, I]]

% NEW target:                 samevenue(J, K)
%  targetPred:                samevenue/2
%  targetArgTypes:            signature = [const, const], types = [+venueid, +venueid]
%  targets:                   [sameauthor(D, E), samebib(F, G), sametitle(H, I), samevenue(J, K)]
%  targetPredicates:          [sameauthor/2, samebib/2, sametitle/2, samevenue/2]
%  targetArgSpecs:            [[D[+authid], E[+authid]], [F[+paperid], G[+paperid]], [H[+titleid], I[+titleid]], [J[+venueid], K[+venueid]]]
%  variablesInTargets:        [[D, E], [F, G], [H, I], [J, K]]

% Started collecting constants

% Collecting the types of constants.

% Looking at the training examples to see if any types of new constants can be inferred.
% Time to collect constants: 125 milliseconds
% Time to collect examples: 0 seconds

% Read 35,008 pos examples and 27,709 neg examples.
% Time to init learnOneClause: 155 milliseconds
% Old dirnull
Setting model dir

% Have 35,008 'raw' positive examples and kept 488.
% Have 27,709 'raw' negative examples and kept 66.

% processing backup's for sameauthor
%  POS EX = 488
%  NEG EX = 66

% Memory usage by WILLSetup (just counts # targets?):
%  |backupPosExamples| = 1
%  |backupNegExamples| = 1
%  |predicatesAsFacts| = 0
%  |addedToFactBase|   = 0
datasets/Cora/train/models/
File: datasets/Cora/train/advice.txt doesnt exist.Hence no advice loaded
% Learning 10 trees in this iteration for sameauthor

% Learn model for: sameauthor
% Kept 488 of the 488 positive examples.
% Kept 66 of the 66 negative examples.
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.10494076555148646
Set score:0.0025
% Dataset size: 554
Computing probabilities
prob time:2 milliseconds
No hidden examples for : sameauthor
Time to build dataset: 3 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.10494076555149223
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 133 234 295 353 356 437 492 500 508 510
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% LearnOneClause Parameters:
%   Targets (4):
%    sameauthor(+authid, +authid),
%    samebib(+paperid, +paperid),
%    sametitle(+titleid, +titleid),
%    samevenue(+venueid, +venueid)
%  Modes (45):
%    author(-paperid, +authid),
%    haswordauthor(+authid, -wordid),
%    haswordtitle(-titleid, +wordid),
%    haswordvenue(-venueid, +wordid),
%    title(+paperid, +titleid),
%    venue(+paperid, -venueid),
%    addList(+willList, #willNumber),
%    multiplyList(+willList, #willNumber),
%    abs(+willNumber, &willNumber),
%    minus(+willNumber, &willNumber),
%    minus(+willNumber, +willNumber, &willNumber),
%    plus(+willNumber, +willNumber, &willNumber),
%    mult(+willNumber, +willNumber, &willNumber),
%    div(+willNumber, +willNumber, &willNumber),
%    allNumbers(+willList),
%    positiveNumber(+willNumber),
%    negativeNumber(+willNumber),
%    in0toDot001(+willNumber),
%    in0toDot01(+willNumber),
%    in0toDot1(+willNumber),
%    in0to1(+willNumber),
%    in0to10(+willNumber),
%    in0to100(+willNumber),
%    in0to1000(+willNumber),
%    equalWithTolerance(+willNumber, +willNumber, &willNumber),
%    greaterOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    smallerOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    isaEqualTolerance(+willNumber),
%    lessThan(+willNumber, +willNumber),
%    greaterThan(+willNumber, +willNumber),
%    lessThanOrEqual(+willNumber, +willNumber),
%    greaterThanOrEqual(+willNumber, +willNumber),
%    inBetweenOO(+willNumber, +willNumber, +willNumber),
%    inBetweenCO(+willNumber, +willNumber, +willNumber),
%    inBetweenOC(+willNumber, +willNumber, +willNumber),
%    inBetweenCC(+willNumber, +willNumber, +willNumber),
%    memberOfList(+willAnything, +willList),
%    firstInList(+willList, &willAnything),
%    restOfList(+willList, &willList),
%    positionInList(+willAnything, +willList, &willNumber),
%    nthInList(+willNumber, +willList, &willAnything),
%    lengthOfList(+willList, &willNumber),
%    samebib(+paperid, +paperid),
%    sametitle(+titleid, +titleid),
%    samevenue(+venueid, +venueid)

% target           = sameauthor(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
% Most-general root: sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for author/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for haswordauthor/2.
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for author/2 with 1,295 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for venue/2.
% [ LazyGroundClauseIndex ]  Building full index for samebib/2 with 30,971 assertions.
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, A), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, A), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(A, _) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, B), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, B), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(_, A) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for haswordauthor/2 with 203 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for haswordtitle/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for haswordvenue/2.
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -40.360904 (regressionFit = 40.360902, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -40.360904): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -57.061931 (regressionFit = 57.061929, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -58.101722 (regressionFit = 58.101720, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -40.360904 (regressionFit = 40.360902, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, C), haswordauthor(A, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -57.061931 (regressionFit = 57.061929, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -58.101722 (regressionFit = 58.101720, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
Comparing variance: 0.07586635762338899 to score=0.0025 #egs=532.0
Comparing variance: 5.046468293750712E-18 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 532.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.075866)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.075866) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 551 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #1, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% This clause covers 532 positive examples, of which 532 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]'
%     Score = -40.360904 (regressionFit = 40.360902, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Have these 8 positive seeds: 17 53 54 149 153 168 445 485
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-40.360904185642944
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.666670 (regressionFit = 38.666667, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -38.666670): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.847499 (regressionFit = 39.847496, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]' score=-38.666669706669104
% [ LazyGroundClauseIndex ]  Building full index for sametitle/2 with 661 assertions.
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -38.666671 (regressionFit = 38.666667, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.666671 (regressionFit = 38.666667, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.666671 (regressionFit = 38.666667, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.666671 (regressionFit = 38.666667, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.666671 (regressionFit = 38.666667, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.786204 (regressionFit = 39.786200, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.666671 (regressionFit = 38.666667, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]' score=-39.847498922391175
% [ LazyGroundClauseIndex ]  Building full index for samevenue/2 with 2,888 assertions.
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -39.847500 (regressionFit = 39.847496, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, A).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.847500 (regressionFit = 39.847496, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, B).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.847500 (regressionFit = 39.847496, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.847500 (regressionFit = 39.847496, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.786204 (regressionFit = 39.786200, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.847500 (regressionFit = 39.847496, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.847500 (regressionFit = 39.847496, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(D, C), samevenue(D, D).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.666671 (regressionFit = 38.666667, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.847500 (regressionFit = 39.847496, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.666671 (regressionFit = 38.666667, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.847500 (regressionFit = 39.847496, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.666671 (regressionFit = 38.666667, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.307363 (regressionFit = 39.307359, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.847500 (regressionFit = 39.847496, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -40.201573 (regressionFit = 40.201570, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.666671 (regressionFit = 38.666667, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.307363 (regressionFit = 39.307359, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.847500 (regressionFit = 39.847496, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -40.201573 (regressionFit = 40.201570, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.076.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
Comparing variance: 0.11426592797784342 to score=0.0025 #egs=304.0
Comparing variance: 0.017236072637739915 to score=0.0025 #egs=228.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 304.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.114266)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.114266) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 228.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.017236)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.017236) into the LAST position (#2) in the search queue.

% Time for loop #2: 901 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #2, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% This clause covers 304 positive examples, of which 304 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]'
%     Score = -38.666670 (regressionFit = 38.666667, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 3 27 48 65 66 102 111 154 189 218
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #3, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-38.666669706669104
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726298 (regressionFit = 34.726294, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34.726298): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]' score=-34.72629814586064
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for title/2 with 1,295 assertions.
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.557828 (regressionFit = 34.557823, penalties=4.950000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34.557828): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.557828 (regressionFit = 34.557823, penalties=4.950000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, B), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for haswordtitle/2 with 1,139 assertions.
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.532148 (regressionFit = 34.532143, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34.532148): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.532148 (regressionFit = 34.532143, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.726299 (regressionFit = 34.726294, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.114.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
Comparing variance: 0.10259885204082199 to score=0.0025 #egs=224.0
Comparing variance: 0.1443749999999991 to score=0.0025 #egs=80.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 224.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.102599)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.102599) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 80.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.144375)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.144375) into position #1 in the search queue (new size=3).

% Time for loop #3: 381 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #3, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% This clause covers 224 positive examples, of which 224 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/80.0 pos, 0.0/0.0 neg]'
%     Score = -38.666670 (regressionFit = 38.666667, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Have these 7 positive seeds: 8 18 20 21 32 35 66
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #4, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-38.666669706669104
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -38.6667):
%  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
Created a leaf under (sameauthor(D, E) :- haswordauthor(D, Anon2899), haswordvenue(Anon3775, Anon2899))

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]'
%     Score = -34.532148 (regressionFit = 34.532143, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 20 31 43 54 88 137 155 176 184 201
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-34.53214791714405
% [ LazyGroundClauseIndex ]  Building full index for haswordvenue/2 with 1,313 assertions.
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838101 (regressionFit = 22.838095, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -22.838101): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.585864 (regressionFit = 22.585859, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -22.585864): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838101 (regressionFit = 22.838095, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]' score=-22.585864445859876
%  At # nodes expanded = 2, |OPEN| = 11.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -22.585866 (regressionFit = 22.585859, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(D, E), author(_, A).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.585866 (regressionFit = 22.585859, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(D, E), author(_, B).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.585865 (regressionFit = 22.585859, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(D, E), haswordauthor(A, _).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.7600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(D, E), haswordauthor(B, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.585865 (regressionFit = 22.585859, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(D, E), haswordauthor(B, _).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.585865 (regressionFit = 22.585859, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(D, E), haswordtitle(_, C).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.585865 (regressionFit = 22.585859, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(D, E), haswordtitle(_, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(D, E), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.585865 (regressionFit = 22.585859, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(D, E), haswordvenue(_, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.585865 (regressionFit = 22.585859, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(D, E), sametitle(D, D).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.585865 (regressionFit = 22.585859, penalties=6.7600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(F, E), haswordtitle(D, E), samevenue(F, F).  [covers 198.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]' score=-22.838101198096457
%  At # nodes expanded = 3, |OPEN| = 10.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), author(_, A).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), author(_, B).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordauthor(A, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordauthor(B, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.7600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordauthor(B, E), haswordtitle(D, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordtitle(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordtitle(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordvenue(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordauthor(B, E), sametitle(D, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, D), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]' score=-22.83810130809646
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 0 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, A).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, B).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordvenue(_, C), haswordtitle(D, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, C), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(E, F).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(F, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, C), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for venue/2 with 1,296 assertions.
%  At # nodes expanded = 5, |OPEN| = 8.  Pruned 0 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.585866 (regressionFit = 22.585859, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), author(_, A), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.841128 (regressionFit = 22.841121, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), author(F, A), title(F, D).  [covers 10.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.180000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), author(_, A), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 7.  Pruned 0 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.585866 (regressionFit = 22.585859, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), author(_, B), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.841128 (regressionFit = 22.841121, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), author(F, B), title(F, D).  [covers 10.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.826298 (regressionFit = 22.826291, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 11.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.180000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), author(_, B), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 6.  Pruned 0 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.585865 (regressionFit = 22.585859, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordauthor(A, _), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.770000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordauthor(A, F), haswordtitle(D, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordauthor(A, _), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 5.  Pruned 0 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.585865 (regressionFit = 22.585859, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordauthor(B, _), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.770000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordauthor(B, F), haswordtitle(D, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.960422 (regressionFit = 22.960415, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 201.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordauthor(B, _), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 4.  Pruned 0 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(B, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.585865 (regressionFit = 22.585859, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(_, C), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.585865 (regressionFit = 22.585859, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(E, C), haswordtitle(E, D).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.838102 (regressionFit = 22.838095, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, C), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(_, C), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(F, C), sametitle(D, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(F, C), sametitle(F, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(E, C), sametitle(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(E, D), haswordtitle(_, C), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

***** Warning: #1 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.103.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #5: 799 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #5, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
% This clause covers 198 positive examples, of which 198 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/228.0 pos, 0.0/0.0 neg]'
%     Score = -40.360904 (regressionFit = 40.360902, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 3 21 61 72 74 111 118 158 180 219
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #6, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-40.360904185642944
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.919976 (regressionFit = 3.919972, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.919976): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.908539 (regressionFit = 3.908535, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.908539): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.919976 (regressionFit = 3.919972, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.908539 (regressionFit = 3.908535, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.017.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
Comparing variance: 0.032749209997126966 to score=0.0025 #egs=59.0
Comparing variance: 0.011694268407975461 to score=0.0025 #egs=169.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 59.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.032749)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.032749) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 169.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.011694)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.011694) into the LAST position (#2) in the search queue.

% Time for loop #6: 97 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #6, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% This clause covers 59 positive examples, of which 59 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]'
%     Score = -3.908539 (regressionFit = 3.908535, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 1 2 11 12 14 18 22 33 34 37
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #7, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-3.908538700778344
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925931 (regressionFit = 1.925926, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.925931): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921574 (regressionFit = 1.921569, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.921574): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925931 (regressionFit = 1.925926, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]' score=-1.921573687451
%  At # nodes expanded = 2, |OPEN| = 8.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, A).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, B).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(A, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(E, D), sametitle(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordtitle(_, D), samevenue(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]' score=-1.925930775925931
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), author(_, A).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), author(_, B).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordauthor(A, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordauthor(B, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordvenue(_, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.750000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, D), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]' score=-1.925930885925931
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -1.925932 (regressionFit = 1.925926, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, A).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, B).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(B, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, C), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(E, F).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(F, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, C), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 4.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 3.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 2.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916673 (regressionFit = 1.916667, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.916673): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.913049 (regressionFit = 1.913043, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.913049): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921575 (regressionFit = 1.921569, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.925932 (regressionFit = 1.925926, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(E, F).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(F, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

***** Warning: #2 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.033.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #7: 275 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #7, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
% This clause covers 13 positive examples, of which 13 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/169.0 pos, 0.0/0.0 neg]'
%     Score = -40.360904 (regressionFit = 40.360902, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Have these 9 positive seeds: 61 62 77 85 95 98 103 163 165
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #8, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-40.360904185642944
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.972607 (regressionFit = 1.972603, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 23.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.972607): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 23.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.936512 (regressionFit = 1.936508, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.936512): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.913047 (regressionFit = 1.913043, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.913047): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.012.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #8: 71 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #8, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% This clause covers 46 positive examples, of which 46 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #1 @ 13:55:22 5/11/17.  [Using 13,658,976 memory cells.]  %%%%%


% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( haswordtitle(D, E) )
%   | | | then return 0.7268358037863779;  // std dev = 4.752, 198.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=172 */
%   | | | else return 0.8581489350995118;  // std dev = 1.46e-07, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.6831489350995129;  // std dev = 0.380, 80.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=66 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.8146706742299468;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | else if ( haswordauthor(B, K), haswordvenue(L, K) )
%   | | | then return 0.8146706742299468;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return 0.8581489350995105;  // std dev = 6.95e-07, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


% Clauses:

sameauthor(A, B, 0.7268358037863779) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(A, E), 
     haswordvenue(F, E), 
     haswordtitle(D, E), 
     !. // Clause #1.

sameauthor(A, B, 0.8581489350995118) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(A, E), 
     haswordvenue(F, E), 
     !. // Clause #2.

sameauthor(A, B, 0.6831489350995129) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     !. // Clause #3.

sameauthor(A, B, 0.8581489350995123) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     haswordauthor(B, F), 
     haswordvenue(G, F), 
     !. // Clause #4.

sameauthor(A, B, 0.8146706742299468) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     !. // Clause #5.

sameauthor(A, B, 0.8146706742299468) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     !. // Clause #6.

sameauthor(A, B, 0.8581489350995105) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     !. // Clause #7.

sameauthor(A, B, -0.14185106490048774) :- !. // Clause #8.


% The flattened versions of these clauses:

flattened_sameauthor(a, b, 0.7268358037863779) :-  /* #neg=26 #pos=172 */ 
   haswordauthor(a, uniqueVar1),
   haswordauthor(b, uniqueVar1),
   haswordtitle(uniqueVar2, uniqueVar1),
   haswordauthor(a, uniqueVar3),
   haswordvenue(underscore, uniqueVar3),
   haswordtitle(uniqueVar2, uniqueVar3),
   !. // Flattened version of clause #1.

flattened_sameauthor(a, b, 0.8581489350995118) :-  /* #pos=26 */ 
   haswordauthor(a, uniqueVar4),
   haswordauthor(b, uniqueVar4),
   haswordtitle(underscore, uniqueVar4),
   haswordauthor(a, uniqueVar5),
   haswordvenue(underscore, uniqueVar5),
   !. // Flattened version of clause #2.

flattened_sameauthor(a, b, 0.6831489350995129) :-  /* #neg=14 #pos=66 */ 
   haswordauthor(a, uniqueVar6),
   haswordauthor(b, uniqueVar6),
   haswordtitle(underscore, uniqueVar6),
   !. // Flattened version of clause #3.

flattened_sameauthor(a, b, 0.8581489350995123) :-  /* #pos=13 */ 
   haswordauthor(a, uniqueVar7),
   haswordauthor(b, uniqueVar7),
   haswordauthor(a, uniqueVar8),
   haswordvenue(underscore, uniqueVar8),
   haswordauthor(b, uniqueVar9),
   haswordvenue(underscore, uniqueVar9),
   !. // Flattened version of clause #4.

flattened_sameauthor(a, b, 0.8146706742299468) :-  /* #neg=2 #pos=44 */ 
   haswordauthor(a, uniqueVar10),
   haswordauthor(b, uniqueVar10),
   haswordauthor(a, uniqueVar11),
   haswordvenue(underscore, uniqueVar11),
   !. // Flattened version of clause #5.

flattened_sameauthor(a, b, 0.8146706742299468) :-  /* #neg=2 #pos=44 */ 
   haswordauthor(a, uniqueVar12),
   haswordauthor(b, uniqueVar12),
   haswordauthor(b, uniqueVar13),
   haswordvenue(underscore, uniqueVar13),
   !. // Flattened version of clause #6.

flattened_sameauthor(a, b, 0.8581489350995105) :-  /* #pos=123 */ 
   haswordauthor(a, uniqueVar14),
   haswordauthor(b, uniqueVar14),
   !. // Flattened version of clause #7.

flattened_sameauthor(underscore, underscore, -0.14185106490048774) :-  /* #neg=22 */ 
   !. // Flattened version of clause #8.


% The unique flattened literals:
%   haswordvenue(underscore, uniqueVar5)
%   haswordauthor(b, uniqueVar13)
%   haswordauthor(b, uniqueVar1)
%   haswordauthor(b, uniqueVar9)
%   haswordauthor(a, uniqueVar3)
%   haswordauthor(a, uniqueVar7)
%   haswordtitle(uniqueVar2, uniqueVar1)
%   haswordvenue(underscore, uniqueVar3)
%   haswordauthor(a, uniqueVar6)
%   haswordvenue(underscore, uniqueVar11)
%   haswordauthor(b, uniqueVar12)
%   haswordtitle(underscore, uniqueVar4)
%   haswordauthor(a, uniqueVar11)
%   haswordvenue(underscore, uniqueVar9)
%   haswordauthor(b, uniqueVar6)
%   haswordvenue(underscore, uniqueVar13)
%   haswordauthor(b, uniqueVar14)
%   haswordauthor(b, uniqueVar4)
%   haswordauthor(a, uniqueVar10)
%   haswordauthor(a, uniqueVar12)
%   haswordauthor(b, uniqueVar10)
%   haswordauthor(b, uniqueVar7)
%   haswordauthor(a, uniqueVar14)
%   haswordauthor(a, uniqueVar1)
%   haswordtitle(underscore, uniqueVar6)
%   haswordauthor(a, uniqueVar8)
%   haswordauthor(a, uniqueVar5)
%   haswordtitle(uniqueVar2, uniqueVar3)
%   haswordvenue(underscore, uniqueVar8)
%   haswordauthor(a, uniqueVar4)

% Saving model in: datasets/Cora/train/models/bRDNs/sameauthor.model.ckpt
% Time taken to learn 1 trees is 3.330 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.011694268407975494
Set score:0.0025
% Only 554 out of 554 converged.
% Kept 488 of the 488 positive examples.
% Kept 66 of the 66 negative examples.
% Dataset size: 554
Computing probabilities
prob time:18 milliseconds
No hidden examples for : sameauthor
Time to build dataset: 25 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.0944377969693167
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 7 positive seeds: 26 99 191 260 343 399 526
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = sameauthor(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
% Most-general root: sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, A), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, A), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(A, _) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, B), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, B), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(_, A) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -39.518246 (regressionFit = 39.518244, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -39.518246): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -51.619250 (regressionFit = 51.619248, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -52.298610 (regressionFit = 52.298607, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -39.518246 (regressionFit = 39.518244, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, C), haswordauthor(A, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -51.619250 (regressionFit = 51.619248, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -52.309617 (regressionFit = 52.309614, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
Comparing variance: 0.07428241296304194 to score=0.0025 #egs=532.0
Comparing variance: -2.523234146875356E-18 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 532.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.074282)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.074282) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 135 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #1, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% This clause covers 532 positive examples, of which 532 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]'
%     Score = -39.518246 (regressionFit = 39.518244, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Have these 9 positive seeds: 79 194 207 262 287 428 437 460 498
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-39.51824562633832
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.418913 (regressionFit = 38.418910, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -38.418913): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.203173 (regressionFit = 39.203170, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]' score=-38.41891291346706
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -38.418914 (regressionFit = 38.418910, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.418914 (regressionFit = 38.418910, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.418914 (regressionFit = 38.418910, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.418914 (regressionFit = 38.418910, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.418914 (regressionFit = 38.418910, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.164623 (regressionFit = 39.164619, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.418914 (regressionFit = 38.418910, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]' score=-39.20317305272987
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -39.203174 (regressionFit = 39.203170, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, A).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.203174 (regressionFit = 39.203170, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, B).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.203174 (regressionFit = 39.203170, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.203174 (regressionFit = 39.203170, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.164623 (regressionFit = 39.164619, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.203174 (regressionFit = 39.203170, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.203174 (regressionFit = 39.203170, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(D, C), samevenue(D, D).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.418914 (regressionFit = 38.418910, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.203174 (regressionFit = 39.203170, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.418914 (regressionFit = 38.418910, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.203174 (regressionFit = 39.203170, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.418914 (regressionFit = 38.418910, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.835239 (regressionFit = 38.835235, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.203174 (regressionFit = 39.203170, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.416034 (regressionFit = 39.416031, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.418914 (regressionFit = 38.418910, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.835239 (regressionFit = 38.835235, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.203174 (regressionFit = 39.203170, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -39.444255 (regressionFit = 39.444251, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.074.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
Comparing variance: 0.11357372698970444 to score=0.0025 #egs=304.0
Comparing variance: 0.017072354686828543 to score=0.0025 #egs=228.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 304.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.113574)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.113574) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 228.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.017072)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.017072) into the LAST position (#2) in the search queue.

% Time for loop #2: 226 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #2, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% This clause covers 304 positive examples, of which 304 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]'
%     Score = -38.418913 (regressionFit = 38.418910, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Have these 6 positive seeds: 9 53 60 177 266 267
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #3, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-38.41891291346706
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.515681 (regressionFit = 34.515677, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34.515681): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]' score=-34.51568143472924
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -34.515683 (regressionFit = 34.515677, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.515683 (regressionFit = 34.515677, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.515682 (regressionFit = 34.515677, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.515682 (regressionFit = 34.515677, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.515682 (regressionFit = 34.515677, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.515682 (regressionFit = 34.515677, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.515682 (regressionFit = 34.515677, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.515683 (regressionFit = 34.515677, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.515683 (regressionFit = 34.515677, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.515682 (regressionFit = 34.515677, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.392089 (regressionFit = 34.392084, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34.392089): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.515682 (regressionFit = 34.515677, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.334575 (regressionFit = 34.334569, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34.334575): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.515682 (regressionFit = 34.515677, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.515682 (regressionFit = 34.515677, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.114.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
Comparing variance: 0.10237007497561436 to score=0.0025 #egs=224.0
Comparing variance: 0.1425459085500748 to score=0.0025 #egs=80.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 224.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.102370)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.102370) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 80.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.142546)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.142546) into position #1 in the search queue (new size=3).

% Time for loop #3: 246 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #3, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% This clause covers 224 positive examples, of which 224 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/80.0 pos, 0.0/0.0 neg]'
%     Score = -38.418913 (regressionFit = 38.418910, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 1 9 10 11 13 34 44 54 62 66
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #4, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-38.41891291346706
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -11.240767 (regressionFit = 11.240762, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -11.240767): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.143.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 58 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #4, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]'
%     Score = -34.334575 (regressionFit = 34.334569, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Have these 9 positive seeds: 35 41 44 82 91 110 129 159 215
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-34.3345745385436
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800646 (regressionFit = 22.800640, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -22.800646): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.580454 (regressionFit = 22.580448, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -22.580454): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800647 (regressionFit = 22.800640, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]' score=-22.58045414012248
%  At # nodes expanded = 2, |OPEN| = 11.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -22.580455 (regressionFit = 22.580448, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), author(_, A).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.580455 (regressionFit = 22.580448, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), author(_, B).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800647 (regressionFit = 22.800640, penalties=6.7600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordauthor(A, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.580455 (regressionFit = 22.580448, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordauthor(A, _).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.580455 (regressionFit = 22.580448, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordauthor(B, _).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.580455 (regressionFit = 22.580448, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordtitle(_, C).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.580455 (regressionFit = 22.580448, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordtitle(_, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800647 (regressionFit = 22.800640, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.580455 (regressionFit = 22.580448, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordvenue(_, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.580455 (regressionFit = 22.580448, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), sametitle(D, D).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.580455 (regressionFit = 22.580448, penalties=6.7600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(F, E), haswordtitle(D, E), samevenue(F, F).  [covers 198.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]' score=-22.80064639443431
%  At # nodes expanded = 3, |OPEN| = 10.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -22.800648 (regressionFit = 22.800640, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), author(_, A).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800648 (regressionFit = 22.800640, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), author(_, B).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800647 (regressionFit = 22.800640, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordauthor(A, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800647 (regressionFit = 22.800640, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordauthor(B, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800647 (regressionFit = 22.800640, penalties=6.7600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, E), haswordtitle(D, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800647 (regressionFit = 22.800640, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordtitle(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800647 (regressionFit = 22.800640, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordtitle(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800647 (regressionFit = 22.800640, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800647 (regressionFit = 22.800640, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordvenue(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800647 (regressionFit = 22.800640, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, E), sametitle(D, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800647 (regressionFit = 22.800640, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(A, D), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]' score=-22.80064650443431
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 0 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -22.800648 (regressionFit = 22.800640, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), author(_, A).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800648 (regressionFit = 22.800640, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), author(_, B).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800648 (regressionFit = 22.800640, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800648 (regressionFit = 22.800640, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800648 (regressionFit = 22.800640, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800648 (regressionFit = 22.800640, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800648 (regressionFit = 22.800640, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800648 (regressionFit = 22.800640, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800647 (regressionFit = 22.800640, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800647 (regressionFit = 22.800640, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(_, C), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800647 (regressionFit = 22.800640, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(E, F).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800647 (regressionFit = 22.800640, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(F, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800647 (regressionFit = 22.800640, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(E, C), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 8.  Pruned 0 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800648 (regressionFit = 22.800640, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.580455 (regressionFit = 22.580448, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, A), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800648 (regressionFit = 22.800640, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.788578 (regressionFit = 22.788571, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(F, A), title(F, D).  [covers 10.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.180000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, A), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 7.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800648 (regressionFit = 22.800640, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.580455 (regressionFit = 22.580448, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, B), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800648 (regressionFit = 22.800640, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.180000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, B), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 6.  Pruned 0 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800647 (regressionFit = 22.800640, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.580455 (regressionFit = 22.580448, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, _), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.770000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, F), haswordtitle(D, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800648 (regressionFit = 22.800640, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.894171 (regressionFit = 22.894164, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 201.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, _), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 5.  Pruned 0 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800647 (regressionFit = 22.800640, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.580455 (regressionFit = 22.580448, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(B, _), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.770000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(B, F), haswordtitle(D, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800648 (regressionFit = 22.800640, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(B, _), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 4.  Pruned 0 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800647 (regressionFit = 22.800640, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.580455 (regressionFit = 22.580448, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(_, C), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.580455 (regressionFit = 22.580448, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(E, C), haswordtitle(E, D).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.800648 (regressionFit = 22.800640, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(_, C), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(F, C), sametitle(D, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(F, C), sametitle(F, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(E, C), sametitle(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordtitle(_, C), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

***** Warning: #3 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.102.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #5: 621 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #5, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
% This clause covers 198 positive examples, of which 198 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/228.0 pos, 0.0/0.0 neg]'
%     Score = -39.518246 (regressionFit = 39.518244, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 6 13 38 39 76 82 88 93 108 139
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #6, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-39.51824562633832
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.886193 (regressionFit = 3.886189, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.886193): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.878872 (regressionFit = 3.878868, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.878872): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.017.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
Comparing variance: 0.03263235792466118 to score=0.0025 #egs=59.0
Comparing variance: 0.011559518402168343 to score=0.0025 #egs=169.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 59.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.032632)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.032632) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 169.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.011560)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.011560) into the LAST position (#2) in the search queue.

% Time for loop #6: 73 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #6, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% This clause covers 59 positive examples, of which 59 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]'
%     Score = -3.878872 (regressionFit = 3.878868, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 5 10 13 23 28 29 32 34 40 44
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #7, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-3.8788716775214596
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921295 (regressionFit = 1.921290, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.921295): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916772 (regressionFit = 1.916767, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.916772): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921295 (regressionFit = 1.921290, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]' score=-1.9167716274854931
%  At # nodes expanded = 2, |OPEN| = 8.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, A).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, B).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(A, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, C).  [covers 2.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(E, D), sametitle(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordtitle(_, D), samevenue(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]' score=-1.9212953108062296
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), author(_, A).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), author(_, B).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordauthor(A, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordauthor(B, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordvenue(_, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.750000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, D), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]' score=-1.9212954208062296
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -1.921297 (regressionFit = 1.921290, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, A).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921297 (regressionFit = 1.921290, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, B).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(B, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, D).  [covers 2.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, C), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(E, F).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(F, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, C), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921297 (regressionFit = 1.921290, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911334 (regressionFit = 1.911328, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.911334): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 4.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921297 (regressionFit = 1.921290, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 3.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.913049 (regressionFit = 1.913043, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.916773 (regressionFit = 1.916767, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.921296 (regressionFit = 1.921290, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(E, F).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(F, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

***** Warning: #4 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.033.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #7: 130 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #7, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
% This clause covers 10 positive examples, of which 10 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/169.0 pos, 0.0/0.0 neg]'
%     Score = -39.518246 (regressionFit = 39.518244, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 9 16 30 33 39 55 56 58 73 79
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #8, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-39.51824562633832
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.950570 (regressionFit = 1.950566, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 23.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.950570): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 23.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.926727 (regressionFit = 1.926723, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.926727): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.012.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #8: 52 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #8, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
% This clause covers 63 positive examples, of which 63 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #2 @ 13:55:24 5/11/17.  [Using 13,801,096 memory cells.]  %%%%%


% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( haswordtitle(D, E) )
%   | | | then return 0.6142580595371709;  // std dev = 4.751, 198.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=172 */
%   | | | else return 0.7377438117840313;  // std dev = 0.086, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | | then return 0.642583108881788;  // std dev = 1.329, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0.5428778384857663;  // std dev = 3.078, 57.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=45 */
%   | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | then if ( author(K, A), venue(K, J) )
%   | | | then return 0.7264261946342655;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.685397027825389;  // std dev = 1.382, 49.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=47 */
%   | | else if ( haswordauthor(B, L), haswordtitle(M, L) )
%   | | | then return 0.6936593178498907;  // std dev = 1.388, 63.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=61 */
%   | | | else return 0.7197193832872512;  // std dev = 0.015, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


% Clauses:

sameauthor(A, B, 0.6142580595371709) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     haswordtitle(D, E), 
     !. // Clause #1.

sameauthor(A, B, 0.7377438117840313) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     !. // Clause #2.

sameauthor(A, B, 0.642583108881788) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(A, E), 
     haswordvenue(F, E), 
     !. // Clause #3.

sameauthor(A, B, 0.5428778384857663) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     !. // Clause #4.

sameauthor(A, B, 0.7264261946342655) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     author(F, A), 
     venue(F, E), 
     !. // Clause #5.

sameauthor(A, B, 0.685397027825389) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     !. // Clause #6.

sameauthor(A, B, 0.6936593178498907) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordtitle(E, D), 
     !. // Clause #7.

sameauthor(A, B, 0.7197193832872512) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     !. // Clause #8.

sameauthor(A, B, -0.12544463852839138) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_sameauthor(a, b, 0.6142580595371709) :-  /* #neg=26 #pos=172 */ 
   haswordauthor(a, uniqueVar15),
   haswordauthor(b, uniqueVar15),
   haswordtitle(uniqueVar16, uniqueVar15),
   haswordauthor(b, uniqueVar17),
   haswordvenue(underscore, uniqueVar17),
   haswordtitle(uniqueVar16, uniqueVar17),
   !. // Flattened version of clause #1.

flattened_sameauthor(a, b, 0.7377438117840313) :-  /* #pos=26 */ 
   haswordauthor(a, uniqueVar18),
   haswordauthor(b, uniqueVar18),
   haswordtitle(underscore, uniqueVar18),
   haswordauthor(b, uniqueVar19),
   haswordvenue(underscore, uniqueVar19),
   !. // Flattened version of clause #2.

flattened_sameauthor(a, b, 0.642583108881788) :-  /* #neg=2 #pos=21 */ 
   haswordauthor(a, uniqueVar20),
   haswordauthor(b, uniqueVar20),
   haswordtitle(underscore, uniqueVar20),
   haswordauthor(a, uniqueVar21),
   haswordvenue(underscore, uniqueVar21),
   !. // Flattened version of clause #3.

flattened_sameauthor(a, b, 0.5428778384857663) :-  /* #neg=12 #pos=45 */ 
   haswordauthor(a, uniqueVar22),
   haswordauthor(b, uniqueVar22),
   haswordtitle(underscore, uniqueVar22),
   !. // Flattened version of clause #4.

flattened_sameauthor(a, b, 0.7264261946342655) :-  /* #pos=10 */ 
   haswordauthor(a, uniqueVar23),
   haswordauthor(b, uniqueVar23),
   haswordauthor(a, uniqueVar24),
   haswordvenue(uniqueVar25, uniqueVar24),
   author(uniqueVar26, a),
   venue(uniqueVar26, uniqueVar25),
   !. // Flattened version of clause #5.

flattened_sameauthor(a, b, 0.685397027825389) :-  /* #neg=2 #pos=47 */ 
   haswordauthor(a, uniqueVar27),
   haswordauthor(b, uniqueVar27),
   haswordauthor(a, uniqueVar28),
   haswordvenue(underscore, uniqueVar28),
   !. // Flattened version of clause #6.

flattened_sameauthor(a, b, 0.6936593178498907) :-  /* #neg=2 #pos=61 */ 
   haswordauthor(a, uniqueVar29),
   haswordauthor(b, uniqueVar29),
   haswordauthor(b, uniqueVar30),
   haswordtitle(underscore, uniqueVar30),
   !. // Flattened version of clause #7.

flattened_sameauthor(a, b, 0.7197193832872512) :-  /* #pos=106 */ 
   haswordauthor(a, uniqueVar31),
   haswordauthor(b, uniqueVar31),
   !. // Flattened version of clause #8.

flattened_sameauthor(underscore, underscore, -0.12544463852839138) :-  /* #neg=22 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   haswordtitle(uniqueVar16, uniqueVar17)
%   haswordvenue(underscore, uniqueVar21)
%   author(uniqueVar26, a)
%   haswordauthor(a, uniqueVar28)
%   haswordtitle(underscore, uniqueVar18)
%   haswordauthor(b, uniqueVar31)
%   haswordtitle(underscore, uniqueVar20)
%   haswordauthor(b, uniqueVar23)
%   haswordauthor(a, uniqueVar18)
%   haswordauthor(b, uniqueVar29)
%   haswordtitle(underscore, uniqueVar30)
%   haswordtitle(underscore, uniqueVar22)
%   haswordauthor(b, uniqueVar27)
%   haswordvenue(underscore, uniqueVar28)
%   haswordauthor(a, uniqueVar20)
%   haswordauthor(a, uniqueVar23)
%   haswordauthor(b, uniqueVar15)
%   haswordauthor(a, uniqueVar29)
%   haswordauthor(b, uniqueVar17)
%   haswordauthor(b, uniqueVar18)
%   haswordauthor(a, uniqueVar24)
%   haswordvenue(underscore, uniqueVar19)
%   haswordvenue(uniqueVar25, uniqueVar24)
%   haswordvenue(underscore, uniqueVar17)
%   haswordauthor(a, uniqueVar15)
%   haswordauthor(b, uniqueVar20)
%   haswordauthor(a, uniqueVar22)
%   haswordauthor(b, uniqueVar30)
%   haswordauthor(a, uniqueVar27)
%   haswordtitle(uniqueVar16, uniqueVar15)
%   haswordauthor(a, uniqueVar21)
%   venue(uniqueVar26, uniqueVar25)
%   haswordauthor(a, uniqueVar31)
%   haswordauthor(b, uniqueVar19)
%   haswordauthor(b, uniqueVar22)

% Saving model in: datasets/Cora/train/models/bRDNs/sameauthor.model.ckpt
% Time taken to learn 2 trees is 5.029 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.01155951840216829
Set score:0.0025
% Only 554 out of 554 converged.
% Kept 488 of the 488 positive examples.
% Kept 66 of the 66 negative examples.
% Dataset size: 554
Computing probabilities
prob time:31 milliseconds
No hidden examples for : sameauthor
Time to build dataset: 34 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.08438351598886487
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 38 116 200 201 216 258 274 343 351 406
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = sameauthor(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
% Most-general root: sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, A), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, A), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(A, _) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, B), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, B), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(_, A) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -38.597834 (regressionFit = 38.597832, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -38.597834): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -46.399907 (regressionFit = 46.399904, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -46.743649 (regressionFit = 46.743647, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -38.597834 (regressionFit = 38.597832, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, C), haswordauthor(A, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -46.413353 (regressionFit = 46.413351, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -46.747177 (regressionFit = 46.747175, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
Comparing variance: 0.07255231525640793 to score=0.0025 #egs=532.0
Comparing variance: 7.569702440626067E-18 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 532.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.072552)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.072552) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 114 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #1, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% This clause covers 532 positive examples, of which 532 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]'
%     Score = -38.597834 (regressionFit = 38.597832, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Have these 9 positive seeds: 191 196 254 281 313 405 453 470 508
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-38.59783364640902
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.058243 (regressionFit = 38.058240, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -38.058243): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.462064 (regressionFit = 38.462061, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]' score=-38.05824312450469
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -38.058244 (regressionFit = 38.058240, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.058244 (regressionFit = 38.058240, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.058244 (regressionFit = 38.058240, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.058244 (regressionFit = 38.058240, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.058244 (regressionFit = 38.058240, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.442163 (regressionFit = 38.442159, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.058244 (regressionFit = 38.058240, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]' score=-38.46206442460106
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -38.462066 (regressionFit = 38.462061, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, A).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.462066 (regressionFit = 38.462061, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, B).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.462065 (regressionFit = 38.462061, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.462065 (regressionFit = 38.462061, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.442163 (regressionFit = 38.442159, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.462065 (regressionFit = 38.462061, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.462065 (regressionFit = 38.462061, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(D, C), samevenue(D, D).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.058244 (regressionFit = 38.058240, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.462066 (regressionFit = 38.462061, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.058244 (regressionFit = 38.058240, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.462066 (regressionFit = 38.462061, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.058244 (regressionFit = 38.058240, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.260207 (regressionFit = 38.260204, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.462065 (regressionFit = 38.462061, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.553322 (regressionFit = 38.553318, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.058244 (regressionFit = 38.058240, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.273699 (regressionFit = 38.273695, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.462065 (regressionFit = 38.462061, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.566576 (regressionFit = 38.566572, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.073.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
Comparing variance: 0.11248539006144066 to score=0.0025 #egs=304.0
Comparing variance: 0.016941585551871616 to score=0.0025 #egs=228.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 304.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.112485)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.112485) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 228.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.016942)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.016942) into the LAST position (#2) in the search queue.

% Time for loop #2: 216 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #2, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% This clause covers 304 positive examples, of which 304 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]'
%     Score = -38.058243 (regressionFit = 38.058240, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Have these 7 positive seeds: 75 93 98 122 149 235 259
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #3, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-38.05824312450469
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.185281 (regressionFit = 34.185277, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34.185281): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]' score=-34.18528139162441
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -34.185283 (regressionFit = 34.185277, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.185283 (regressionFit = 34.185277, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.185282 (regressionFit = 34.185277, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.185282 (regressionFit = 34.185277, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.185282 (regressionFit = 34.185277, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.185282 (regressionFit = 34.185277, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.185282 (regressionFit = 34.185277, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.185282 (regressionFit = 34.185277, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.185283 (regressionFit = 34.185277, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.185283 (regressionFit = 34.185277, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.185282 (regressionFit = 34.185277, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.119450 (regressionFit = 34.119445, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34.119450): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.185282 (regressionFit = 34.185277, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.085841 (regressionFit = 34.085836, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34.085841): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.185282 (regressionFit = 34.185277, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.185282 (regressionFit = 34.185277, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.112.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
Comparing variance: 0.10167953209769401 to score=0.0025 #egs=224.0
Comparing variance: 0.14137025505973272 to score=0.0025 #egs=80.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 224.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.101680)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.101680) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 80.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.141370)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.141370) into position #1 in the search queue (new size=3).

% Time for loop #3: 235 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #3, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% This clause covers 224 positive examples, of which 224 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/80.0 pos, 0.0/0.0 neg]'
%     Score = -38.058243 (regressionFit = 38.058240, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Have these 3 positive seeds: 14 27 53
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #4, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-38.05824312450469
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -11.227997 (regressionFit = 11.227992, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -11.227997): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.141.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 43 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #4, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]'
%     Score = -34.085841 (regressionFit = 34.085836, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 29 31 49 50 72 154 166 174 189 200
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-34.08584065466207
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720005 (regressionFit = 22.719999, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -22.720005): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.581742 (regressionFit = 22.581736, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -22.581742): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720005 (regressionFit = 22.719999, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(E, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720005 (regressionFit = 22.719999, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]' score=-22.58174167130882
%  At # nodes expanded = 2, |OPEN| = 12.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -22.581743 (regressionFit = 22.581736, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), author(_, A).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.581743 (regressionFit = 22.581736, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), author(_, B).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.581743 (regressionFit = 22.581736, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordauthor(A, _).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.581743 (regressionFit = 22.581736, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordauthor(B, _).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.581743 (regressionFit = 22.581736, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordtitle(_, C).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.581743 (regressionFit = 22.581736, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordtitle(_, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.581743 (regressionFit = 22.581736, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordvenue(_, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.581743 (regressionFit = 22.581736, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), sametitle(D, D).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.581743 (regressionFit = 22.581736, penalties=6.7600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(F, E), haswordtitle(D, E), samevenue(F, F).  [covers 198.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(E, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]' score=-22.720005177646108
%  At # nodes expanded = 3, |OPEN| = 11.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(E, C), author(_, A).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(E, C), author(_, B).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(E, C), haswordauthor(A, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(E, C), haswordauthor(B, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(E, C), haswordtitle(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(E, C), haswordtitle(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(E, C), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(E, C), haswordvenue(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.7600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(F, E), haswordvenue(F, C), sametitle(D, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(E, C), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]' score=-22.720005277646106
%  At # nodes expanded = 4, |OPEN| = 10.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants.
%     Score = -22.720006 (regressionFit = 22.719999, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), author(_, A).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), author(_, B).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordauthor(A, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordauthor(B, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.7600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, E), haswordtitle(D, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordtitle(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordtitle(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.7600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(A, D), haswordvenue(E, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordvenue(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, E), sametitle(D, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(A, D), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]' score=-22.720005387646108
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 0 variant children.  Sending 17 items to OPEN for evaluation and possible insertion.
% Have created 17 valid-on-seeds descendants.
%     Score = -22.720006 (regressionFit = 22.719999, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), author(_, A).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), author(_, B).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordvenue(_, C), haswordtitle(D, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(_, C), haswordvenue(E, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(E, C), haswordvenue(E, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(_, C), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(E, F).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(F, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(E, C), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 8.  Pruned 0 variant children.  Sending 17 items to OPEN for evaluation and possible insertion.
% Have created 17 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.581743 (regressionFit = 22.581736, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, A), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(_, A), haswordvenue(E, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.625074 (regressionFit = 22.625067, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(F, A), title(F, D).  [covers 10.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.639005 (regressionFit = 22.638998, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 11.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.180000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, A), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 7.  Pruned 0 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.581743 (regressionFit = 22.581736, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, B), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(_, B), haswordvenue(E, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.625074 (regressionFit = 22.625067, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(F, B), title(F, D).  [covers 10.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.180000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, B), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 6.  Pruned 0 variant children.  Sending 18 items to OPEN for evaluation and possible insertion.
% Have created 18 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.581743 (regressionFit = 22.581736, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, _), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.770000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, F), haswordtitle(D, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(A, _), haswordvenue(E, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.770000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(A, F), haswordvenue(E, F).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.759395 (regressionFit = 22.759388, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 201.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, _), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 5.  Pruned 0 variant children.  Sending 18 items to OPEN for evaluation and possible insertion.
% Have created 18 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.581743 (regressionFit = 22.581736, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(B, _), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.770000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(B, F), haswordtitle(D, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(B, _), haswordvenue(E, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.770000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(B, F), haswordvenue(E, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.720006 (regressionFit = 22.719999, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(B, _), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

***** Warning: #5 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.102.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #5: 673 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #5, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
% This clause covers 198 positive examples, of which 198 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/228.0 pos, 0.0/0.0 neg]'
%     Score = -38.597834 (regressionFit = 38.597832, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 4 17 29 36 49 82 91 94 95 113
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #6, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-38.59783364640902
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.859242 (regressionFit = 3.859238, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.859242): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.856068 (regressionFit = 3.856064, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.856068): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.860977 (regressionFit = 3.860973, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.017.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
Comparing variance: 0.03250732007488592 to score=0.0025 #egs=59.0
Comparing variance: 0.011468238379351325 to score=0.0025 #egs=169.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 59.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.032507)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.032507) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 169.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.011468)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.011468) into the LAST position (#2) in the search queue.

% Time for loop #6: 106 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #6, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% This clause covers 59 positive examples, of which 59 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]'
%     Score = -3.856068 (regressionFit = 3.856064, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Have these 5 positive seeds: 1 10 28 56 58
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #7, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-3.8560681205286436
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908875 (regressionFit = 1.908870, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.908875): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]' score=-1.9088752999467822
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, A).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, B).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(A, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(E, D), sametitle(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordtitle(_, D), samevenue(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909953 (regressionFit = 1.909947, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(E, F).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(F, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908876 (regressionFit = 1.908870, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.033.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #7: 106 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #7, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
% This clause covers 51 positive examples, of which 51 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/169.0 pos, 0.0/0.0 neg]'
%     Score = -38.597834 (regressionFit = 38.597832, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 45 53 56 66 101 126 136 137 142 146
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #8, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-38.59783364640902
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.935537 (regressionFit = 1.935533, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 23.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.935537): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 23.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.924848 (regressionFit = 1.924844, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.924848): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.912186 (regressionFit = 1.912183, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.912186): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.011.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #8: 52 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #8, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% This clause covers 46 positive examples, of which 46 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #3 @ 13:55:25 5/11/17.  [Using 13,920,992 memory cells.]  %%%%%


% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( haswordtitle(D, E) )
%   | | | then return 0.48191032952960855;  // std dev = 4.751, 198.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=172 */
%   | | | else return 0.5739005202171528;  // std dev = 0.109, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | | then return 0.49973050014200104;  // std dev = 1.325, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0.42915315422602124;  // std dev = 3.078, 57.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=45 */
%   | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.5315632593874177;  // std dev = 1.382, 51.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=49 */
%   | | | else return 0.5677624978089177;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( haswordauthor(B, L), haswordvenue(M, L) )
%   | | | then return 0.5285099232197915;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return 0.5563505233588584;  // std dev = 0.026, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


% Clauses:

sameauthor(A, B, 0.48191032952960855) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     haswordtitle(D, E), 
     !. // Clause #1.

sameauthor(A, B, 0.5739005202171528) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     !. // Clause #2.

sameauthor(A, B, 0.49973050014200104) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(A, E), 
     haswordvenue(F, E), 
     !. // Clause #3.

sameauthor(A, B, 0.42915315422602124) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     !. // Clause #4.

sameauthor(A, B, 0.5315632593874177) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     haswordtitle(F, D), 
     !. // Clause #5.

sameauthor(A, B, 0.5677624978089177) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     !. // Clause #6.

sameauthor(A, B, 0.5285099232197915) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     !. // Clause #7.

sameauthor(A, B, 0.5563505233588584) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     !. // Clause #8.

sameauthor(A, B, -0.11231637819360638) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_sameauthor(a, b, 0.48191032952960855) :-  /* #neg=26 #pos=172 */ 
   haswordauthor(a, uniqueVar32),
   haswordauthor(b, uniqueVar32),
   haswordtitle(uniqueVar33, uniqueVar32),
   haswordauthor(b, uniqueVar34),
   haswordvenue(underscore, uniqueVar34),
   haswordtitle(uniqueVar33, uniqueVar34),
   !. // Flattened version of clause #1.

flattened_sameauthor(a, b, 0.5739005202171528) :-  /* #pos=26 */ 
   haswordauthor(a, uniqueVar35),
   haswordauthor(b, uniqueVar35),
   haswordtitle(underscore, uniqueVar35),
   haswordauthor(b, uniqueVar36),
   haswordvenue(underscore, uniqueVar36),
   !. // Flattened version of clause #2.

flattened_sameauthor(a, b, 0.49973050014200104) :-  /* #neg=2 #pos=21 */ 
   haswordauthor(a, uniqueVar37),
   haswordauthor(b, uniqueVar37),
   haswordtitle(underscore, uniqueVar37),
   haswordauthor(a, uniqueVar38),
   haswordvenue(underscore, uniqueVar38),
   !. // Flattened version of clause #3.

flattened_sameauthor(a, b, 0.42915315422602124) :-  /* #neg=12 #pos=45 */ 
   haswordauthor(a, uniqueVar39),
   haswordauthor(b, uniqueVar39),
   haswordtitle(underscore, uniqueVar39),
   !. // Flattened version of clause #4.

flattened_sameauthor(a, b, 0.5315632593874177) :-  /* #neg=2 #pos=49 */ 
   haswordauthor(a, uniqueVar40),
   haswordauthor(b, uniqueVar40),
   haswordauthor(a, uniqueVar41),
   haswordvenue(underscore, uniqueVar41),
   haswordtitle(underscore, uniqueVar41),
   !. // Flattened version of clause #5.

flattened_sameauthor(a, b, 0.5677624978089177) :-  /* #pos=8 */ 
   haswordauthor(a, uniqueVar42),
   haswordauthor(b, uniqueVar42),
   haswordauthor(a, uniqueVar43),
   haswordvenue(underscore, uniqueVar43),
   !. // Flattened version of clause #6.

flattened_sameauthor(a, b, 0.5285099232197915) :-  /* #neg=2 #pos=44 */ 
   haswordauthor(a, uniqueVar44),
   haswordauthor(b, uniqueVar44),
   haswordauthor(b, uniqueVar45),
   haswordvenue(underscore, uniqueVar45),
   !. // Flattened version of clause #7.

flattened_sameauthor(a, b, 0.5563505233588584) :-  /* #pos=123 */ 
   haswordauthor(a, uniqueVar46),
   haswordauthor(b, uniqueVar46),
   !. // Flattened version of clause #8.

flattened_sameauthor(underscore, underscore, -0.11231637819360638) :-  /* #neg=22 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   haswordtitle(underscore, uniqueVar41)
%   haswordauthor(a, uniqueVar38)
%   haswordauthor(b, uniqueVar34)
%   haswordvenue(underscore, uniqueVar43)
%   haswordauthor(b, uniqueVar44)
%   haswordtitle(underscore, uniqueVar39)
%   haswordauthor(b, uniqueVar45)
%   haswordauthor(b, uniqueVar46)
%   haswordauthor(a, uniqueVar35)
%   haswordauthor(a, uniqueVar40)
%   haswordauthor(a, uniqueVar41)
%   haswordauthor(b, uniqueVar35)
%   haswordvenue(underscore, uniqueVar41)
%   haswordvenue(underscore, uniqueVar36)
%   haswordauthor(b, uniqueVar40)
%   haswordauthor(a, uniqueVar37)
%   haswordauthor(b, uniqueVar42)
%   haswordauthor(a, uniqueVar44)
%   haswordvenue(underscore, uniqueVar45)
%   haswordtitle(uniqueVar33, uniqueVar32)
%   haswordauthor(b, uniqueVar37)
%   haswordvenue(underscore, uniqueVar34)
%   haswordauthor(b, uniqueVar39)
%   haswordauthor(b, uniqueVar32)
%   haswordauthor(a, uniqueVar42)
%   haswordvenue(underscore, uniqueVar38)
%   haswordauthor(a, uniqueVar43)
%   haswordtitle(underscore, uniqueVar35)
%   haswordauthor(a, uniqueVar39)
%   haswordtitle(underscore, uniqueVar37)
%   haswordtitle(uniqueVar33, uniqueVar34)
%   haswordauthor(a, uniqueVar46)
%   haswordauthor(a, uniqueVar32)
%   haswordauthor(b, uniqueVar36)

% Saving model in: datasets/Cora/train/models/bRDNs/sameauthor.model.ckpt
% Time taken to learn 3 trees is 6.729 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.011468238379351348
Set score:0.0025
% Only 554 out of 554 converged.
% Kept 488 of the 488 positive examples.
% Kept 66 of the 66 negative examples.
% Dataset size: 554
Computing probabilities
prob time:43 milliseconds
No hidden examples for : sameauthor
Time to build dataset: 47 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.077819091813738
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 26 45 47 95 97 140 183 222 233 336
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = sameauthor(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
% Most-general root: sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, A), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, A), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(A, _) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, B), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, B), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(_, A) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -38.145433 (regressionFit = 38.145431, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -38.145433): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -42.926936 (regressionFit = 42.926934, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -43.110294 (regressionFit = 43.110292, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -38.145433 (regressionFit = 38.145431, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, C), haswordauthor(A, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -42.936138 (regressionFit = 42.936136, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -43.111484 (regressionFit = 43.111482, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
Comparing variance: 0.07170193822247366 to score=0.0025 #egs=532.0
Comparing variance: -1.261617073437678E-18 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 532.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.071702)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.071702) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 105 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #1, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% This clause covers 532 positive examples, of which 532 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]'
%     Score = -38.145433 (regressionFit = 38.145431, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Have these 5 positive seeds: 10 78 412 428 521
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-38.14543306435599
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.857924 (regressionFit = 37.857921, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -37.857924): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.081089 (regressionFit = 38.081086, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]' score=-37.857924427176464
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -37.857926 (regressionFit = 37.857921, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.857926 (regressionFit = 37.857921, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.857925 (regressionFit = 37.857921, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.857925 (regressionFit = 37.857921, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.857925 (regressionFit = 37.857921, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.070510 (regressionFit = 38.070506, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.857925 (regressionFit = 37.857921, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]' score=-38.08108856089767
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -38.081090 (regressionFit = 38.081086, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, A).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.081090 (regressionFit = 38.081086, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, B).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.081090 (regressionFit = 38.081086, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.081090 (regressionFit = 38.081086, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.070510 (regressionFit = 38.070506, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.081090 (regressionFit = 38.081086, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.081089 (regressionFit = 38.081086, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(D, C), samevenue(D, D).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.857926 (regressionFit = 37.857921, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.081090 (regressionFit = 38.081086, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.857926 (regressionFit = 37.857921, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.081090 (regressionFit = 38.081086, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.857925 (regressionFit = 37.857921, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.967321 (regressionFit = 37.967317, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.081090 (regressionFit = 38.081086, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.123326 (regressionFit = 38.123322, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.857925 (regressionFit = 37.857921, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.976528 (regressionFit = 37.976524, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.081090 (regressionFit = 38.081086, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -38.129333 (regressionFit = 38.129329, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.072.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
Comparing variance: 0.11188514129813024 to score=0.0025 #egs=304.0
Comparing variance: 0.016863326458530125 to score=0.0025 #egs=228.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 304.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.111885)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.111885) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 228.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.016863)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.016863) into the LAST position (#2) in the search queue.

% Time for loop #2: 197 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #2, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% This clause covers 304 positive examples, of which 304 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]'
%     Score = -37.857924 (regressionFit = 37.857921, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 28 55 62 88 181 187 191 218 241 257
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #3, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-37.857924427176464
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.004501 (regressionFit = 34.004497, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34.004501): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]' score=-34.00450149141753
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -34.004503 (regressionFit = 34.004497, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.004503 (regressionFit = 34.004497, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.004503 (regressionFit = 34.004497, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.004503 (regressionFit = 34.004497, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.004503 (regressionFit = 34.004497, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.004503 (regressionFit = 34.004497, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.004502 (regressionFit = 34.004497, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.004502 (regressionFit = 34.004497, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.004503 (regressionFit = 34.004497, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.004503 (regressionFit = 34.004497, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.835290 (regressionFit = 33.835285, penalties=4.950000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, B), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.835290): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, B), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.004503 (regressionFit = 34.004497, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.968425 (regressionFit = 33.968420, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.004503 (regressionFit = 34.004497, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.955386 (regressionFit = 33.955381, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.004503 (regressionFit = 34.004497, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -34.004502 (regressionFit = 34.004497, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, B), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, B), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.112.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, B), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
Comparing variance: -1.3322676295501878E-16 to score=0.0025 #egs=10.0
Comparing variance: 0.11508600269142348 to score=0.0025 #egs=294.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 294.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.115086)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.115086) into position #1 in the search queue (new size=2).

% Time for loop #3: 264 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #3, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, B), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
% This clause covers 10 positive examples, of which 10 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/294.0 pos, 0.0/0.0 neg]'
%     Score = -37.857924 (regressionFit = 37.857921, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 71 74 87 106 115 154 175 191 196 249
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #4, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-37.857924427176464
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.834243 (regressionFit = 33.834239, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.834243): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]' score=-33.83424344406457
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -33.834245 (regressionFit = 33.834239, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.834245 (regressionFit = 33.834239, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.834244 (regressionFit = 33.834239, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.834244 (regressionFit = 33.834239, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.834244 (regressionFit = 33.834239, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.834244 (regressionFit = 33.834239, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.834244 (regressionFit = 33.834239, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.834244 (regressionFit = 33.834239, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 179.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.834245 (regressionFit = 33.834239, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.741777 (regressionFit = 33.741772, penalties=4.950000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 5.0/294.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.741777): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 5.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.834245 (regressionFit = 33.834239, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.834244 (regressionFit = 33.834239, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.807776 (regressionFit = 33.807771, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.834244 (regressionFit = 33.834239, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.797293 (regressionFit = 33.797288, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.834244 (regressionFit = 33.834239, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.834244 (regressionFit = 33.834239, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 5.0/294.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 5.0/294.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.115.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 5.0/294.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 245 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #4, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 5.0/294.0 pos, 0.0/0.0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/228.0 pos, 0.0/0.0 neg]'
%     Score = -38.145433 (regressionFit = 38.145431, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 5 13 27 65 103 114 131 139 184 199
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-38.14543306435599
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.843265 (regressionFit = 3.843261, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.843265): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.841037 (regressionFit = 3.841033, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.841037): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.844297 (regressionFit = 3.844293, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.841562 (regressionFit = 3.841558, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.017.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
Comparing variance: 0.0324406411205624 to score=0.0025 #egs=59.0
Comparing variance: 0.011402576817233124 to score=0.0025 #egs=169.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 59.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.032441)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.032441) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 169.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.011403)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.011403) into the LAST position (#2) in the search queue.

% Time for loop #5: 69 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #5, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% This clause covers 59 positive examples, of which 59 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]'
%     Score = -3.841037 (regressionFit = 3.841033, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Have these 7 positive seeds: 0 12 13 15 18 21 57
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #6, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-3.8410372582255796
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908846 (regressionFit = 1.908841, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.908846): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]' score=-1.908845973845911
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.908847 (regressionFit = 1.908841, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, A).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908847 (regressionFit = 1.908841, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, B).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908847 (regressionFit = 1.908841, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(A, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908847 (regressionFit = 1.908841, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908847 (regressionFit = 1.908841, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908847 (regressionFit = 1.908841, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908847 (regressionFit = 1.908841, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(E, D), sametitle(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908847 (regressionFit = 1.908841, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordtitle(_, D), samevenue(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908847 (regressionFit = 1.908841, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908847 (regressionFit = 1.908841, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908847 (regressionFit = 1.908841, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908847 (regressionFit = 1.908841, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908847 (regressionFit = 1.908841, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908847 (regressionFit = 1.908841, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(E, F).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(F, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.908847 (regressionFit = 1.908841, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.032.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #6: 98 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #6, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
% This clause covers 51 positive examples, of which 51 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/169.0 pos, 0.0/0.0 neg]'
%     Score = -38.145433 (regressionFit = 38.145431, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Have these 5 positive seeds: 71 80 113 121 144
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #7, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-38.14543306435599
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.924921 (regressionFit = 1.924917, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 23.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.924921): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 23.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.919356 (regressionFit = 1.919352, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.919356): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.912165 (regressionFit = 1.912161, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.912165): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.011.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #7: 51 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #7, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% This clause covers 46 positive examples, of which 46 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #4 @ 13:55:27 5/11/17.  [Using 13,971,400 memory cells.]  %%%%%


% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( author(E, B), title(E, D) )
%   | | then return 0.4942492053911084;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( author(F, A), title(F, D) )
%   | | | then return 0.49424920539110834;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3563136431473618;  // std dev = 5.809, 289.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=249 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.39947900812804216;  // std dev = 1.382, 51.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=49 */
%   | | | else return 0.4267870648186737;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | then return 0.3971686662962299;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return 0.4182469498921977;  // std dev = 0.026, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


% Clauses:

sameauthor(A, B, 0.4942492053911084) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     author(E, B), 
     title(E, D), 
     !. // Clause #1.

sameauthor(A, B, 0.49424920539110834) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     author(E, A), 
     title(E, D), 
     !. // Clause #2.

sameauthor(A, B, 0.3563136431473618) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     !. // Clause #3.

sameauthor(A, B, 0.39947900812804216) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     haswordtitle(F, D), 
     !. // Clause #4.

sameauthor(A, B, 0.4267870648186737) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     !. // Clause #5.

sameauthor(A, B, 0.3971686662962299) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     !. // Clause #6.

sameauthor(A, B, 0.4182469498921977) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     !. // Clause #7.

sameauthor(A, B, -0.10159632948783635) :- !. // Clause #8.


% The flattened versions of these clauses:

flattened_sameauthor(a, b, 0.4942492053911084) :-  /* #pos=10 */ 
   haswordauthor(a, uniqueVar47),
   haswordauthor(b, uniqueVar47),
   haswordtitle(uniqueVar48, uniqueVar47),
   author(uniqueVar49, b),
   title(uniqueVar49, uniqueVar48),
   !. // Flattened version of clause #1.

flattened_sameauthor(a, b, 0.49424920539110834) :-  /* #pos=5 */ 
   haswordauthor(a, uniqueVar50),
   haswordauthor(b, uniqueVar50),
   haswordtitle(uniqueVar51, uniqueVar50),
   author(uniqueVar52, a),
   title(uniqueVar52, uniqueVar51),
   !. // Flattened version of clause #2.

flattened_sameauthor(a, b, 0.3563136431473618) :-  /* #neg=40 #pos=249 */ 
   haswordauthor(a, uniqueVar53),
   haswordauthor(b, uniqueVar53),
   haswordtitle(underscore, uniqueVar53),
   !. // Flattened version of clause #3.

flattened_sameauthor(a, b, 0.39947900812804216) :-  /* #neg=2 #pos=49 */ 
   haswordauthor(a, uniqueVar54),
   haswordauthor(b, uniqueVar54),
   haswordauthor(a, uniqueVar55),
   haswordvenue(underscore, uniqueVar55),
   haswordtitle(underscore, uniqueVar55),
   !. // Flattened version of clause #4.

flattened_sameauthor(a, b, 0.4267870648186737) :-  /* #pos=8 */ 
   haswordauthor(a, uniqueVar56),
   haswordauthor(b, uniqueVar56),
   haswordauthor(a, uniqueVar57),
   haswordvenue(underscore, uniqueVar57),
   !. // Flattened version of clause #5.

flattened_sameauthor(a, b, 0.3971686662962299) :-  /* #neg=2 #pos=44 */ 
   haswordauthor(a, uniqueVar58),
   haswordauthor(b, uniqueVar58),
   haswordauthor(b, uniqueVar59),
   haswordvenue(underscore, uniqueVar59),
   !. // Flattened version of clause #6.

flattened_sameauthor(a, b, 0.4182469498921977) :-  /* #pos=123 */ 
   haswordauthor(a, uniqueVar60),
   haswordauthor(b, uniqueVar60),
   !. // Flattened version of clause #7.

flattened_sameauthor(underscore, underscore, -0.10159632948783635) :-  /* #neg=22 */ 
   !. // Flattened version of clause #8.


% The unique flattened literals:
%   haswordauthor(b, uniqueVar53)
%   haswordtitle(uniqueVar48, uniqueVar47)
%   haswordvenue(underscore, uniqueVar59)
%   haswordvenue(underscore, uniqueVar55)
%   haswordauthor(b, uniqueVar54)
%   author(uniqueVar49, b)
%   title(uniqueVar52, uniqueVar51)
%   haswordauthor(a, uniqueVar54)
%   haswordauthor(a, uniqueVar60)
%   haswordauthor(b, uniqueVar56)
%   haswordauthor(b, uniqueVar50)
%   haswordauthor(a, uniqueVar53)
%   haswordvenue(underscore, uniqueVar57)
%   haswordauthor(a, uniqueVar57)
%   title(uniqueVar49, uniqueVar48)
%   haswordauthor(a, uniqueVar50)
%   haswordtitle(uniqueVar51, uniqueVar50)
%   haswordtitle(underscore, uniqueVar55)
%   haswordauthor(a, uniqueVar56)
%   author(uniqueVar52, a)
%   haswordauthor(b, uniqueVar59)
%   haswordauthor(b, uniqueVar47)
%   haswordauthor(a, uniqueVar58)
%   haswordauthor(a, uniqueVar47)
%   haswordtitle(underscore, uniqueVar53)
%   haswordauthor(b, uniqueVar60)
%   haswordauthor(a, uniqueVar55)
%   haswordauthor(b, uniqueVar58)

% Saving model in: datasets/Cora/train/models/bRDNs/sameauthor.model.ckpt
% Time taken to learn 4 trees is 7.944 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.011402576817233112
Set score:0.0025
% Only 554 out of 554 converged.
% Kept 488 of the 488 positive examples.
% Kept 66 of the 66 negative examples.
% Dataset size: 554
Computing probabilities
prob time:84 milliseconds
No hidden examples for : sameauthor
Time to build dataset: 87 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.07415350156546187
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 120 148 153 161 172 215 254 278 287 348
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = sameauthor(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
% Most-general root: sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, A), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, A), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(A, _) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, B), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, B), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(_, A) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -37.970434 (regressionFit = 37.970432, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -37.970434): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -40.947325 (regressionFit = 40.947322, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -41.080198 (regressionFit = 41.080195, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -37.970434 (regressionFit = 37.970432, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, C), haswordauthor(A, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -40.954151 (regressionFit = 40.954149, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -41.081017 (regressionFit = 41.081014, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
Comparing variance: 0.07137299222659237 to score=0.0025 #egs=532.0
Comparing variance: 6.308085367188389E-18 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 532.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.071373)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.071373) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 115 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #1, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% This clause covers 532 positive examples, of which 532 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]'
%     Score = -37.970434 (regressionFit = 37.970432, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 33 70 119 121 204 213 238 342 350 382
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-37.97043379454714
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.759914 (regressionFit = 37.759911, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -37.759914): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.918681 (regressionFit = 37.918678, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]' score=-37.75991403073075
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -37.759915 (regressionFit = 37.759911, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.759915 (regressionFit = 37.759911, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.759915 (regressionFit = 37.759911, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.759915 (regressionFit = 37.759911, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.759915 (regressionFit = 37.759911, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.910317 (regressionFit = 37.910313, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.759915 (regressionFit = 37.759911, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]' score=-37.9186812908504
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -37.918682 (regressionFit = 37.918678, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, A).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.918682 (regressionFit = 37.918678, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, B).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.918682 (regressionFit = 37.918678, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.918682 (regressionFit = 37.918678, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.910317 (regressionFit = 37.910313, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.918682 (regressionFit = 37.918678, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(D, C), samevenue(D, D).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.759915 (regressionFit = 37.759911, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.918682 (regressionFit = 37.918678, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.759915 (regressionFit = 37.759911, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.918682 (regressionFit = 37.918678, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.759915 (regressionFit = 37.759911, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.840889 (regressionFit = 37.840885, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.918682 (regressionFit = 37.918678, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.956930 (regressionFit = 37.956926, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.759915 (regressionFit = 37.759911, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.847738 (regressionFit = 37.847734, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.918682 (regressionFit = 37.918678, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.962028 (regressionFit = 37.962024, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.071.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
Comparing variance: 0.11157892328902308 to score=0.0025 #egs=304.0
Comparing variance: 0.016841746977490045 to score=0.0025 #egs=228.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 304.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.111579)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.111579) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 228.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.016842)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.016842) into the LAST position (#2) in the search queue.

% Time for loop #2: 214 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #2, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% This clause covers 304 positive examples, of which 304 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]'
%     Score = -37.759914 (regressionFit = 37.759911, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 18 34 36 43 57 87 96 98 135 148
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #3, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-37.75991403073075
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.915775 (regressionFit = 33.915771, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.915775): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]' score=-33.915775405179154
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -33.915777 (regressionFit = 33.915771, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.915777 (regressionFit = 33.915771, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.915776 (regressionFit = 33.915771, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.915776 (regressionFit = 33.915771, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.915776 (regressionFit = 33.915771, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.915776 (regressionFit = 33.915771, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.915776 (regressionFit = 33.915771, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.915776 (regressionFit = 33.915771, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.915777 (regressionFit = 33.915771, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.915777 (regressionFit = 33.915771, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.915776 (regressionFit = 33.915771, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.879971 (regressionFit = 33.879966, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.879971): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.915776 (regressionFit = 33.915771, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.868080 (regressionFit = 33.868075, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.868080): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.915776 (regressionFit = 33.915771, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.915776 (regressionFit = 33.915771, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.112.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
Comparing variance: 0.10086132039819436 to score=0.0025 #egs=224.0
Comparing variance: 0.14093923846539164 to score=0.0025 #egs=80.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 224.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.100861)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.100861) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 80.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.140939)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.140939) into position #1 in the search queue (new size=3).

% Time for loop #3: 229 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #3, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% This clause covers 224 positive examples, of which 224 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/80.0 pos, 0.0/0.0 neg]'
%     Score = -37.759914 (regressionFit = 37.759911, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 1 17 19 28 29 34 36 46 53 59
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #4, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-37.75991403073075
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -11.229738 (regressionFit = 11.229732, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -11.229738): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.141.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 49 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #4, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]'
%     Score = -33.868080 (regressionFit = 33.868075, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Have these 6 positive seeds: 29 94 117 137 143 214
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-33.868079906426864
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.465811 (regressionFit = 22.465805, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -22.465811): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563863 (regressionFit = 22.563857, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]' score=-22.46581100414693
%  At # nodes expanded = 2, |OPEN| = 10.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -22.465812 (regressionFit = 22.465805, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), author(_, A).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.465812 (regressionFit = 22.465805, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), author(_, B).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.465812 (regressionFit = 22.465805, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordauthor(A, _).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.465812 (regressionFit = 22.465805, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordauthor(B, _).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.465812 (regressionFit = 22.465805, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordtitle(_, C).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.465812 (regressionFit = 22.465805, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordtitle(_, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563864 (regressionFit = 22.563857, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.465812 (regressionFit = 22.465805, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordvenue(_, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.465812 (regressionFit = 22.465805, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), sametitle(D, D).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.465812 (regressionFit = 22.465805, penalties=6.7600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(F, E), haswordtitle(D, E), samevenue(F, F).  [covers 198.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]' score=-22.56386287434906
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -22.563864 (regressionFit = 22.563857, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), author(_, A).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563864 (regressionFit = 22.563857, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), author(_, B).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563864 (regressionFit = 22.563857, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563864 (regressionFit = 22.563857, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563864 (regressionFit = 22.563857, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordvenue(_, C), haswordtitle(D, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563864 (regressionFit = 22.563857, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563864 (regressionFit = 22.563857, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563864 (regressionFit = 22.563857, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563864 (regressionFit = 22.563857, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563864 (regressionFit = 22.563857, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563864 (regressionFit = 22.563857, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(_, C), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563864 (regressionFit = 22.563857, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(E, F).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563864 (regressionFit = 22.563857, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(F, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563864 (regressionFit = 22.563857, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(E, C), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 8.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.465812 (regressionFit = 22.465805, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, A), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563864 (regressionFit = 22.563857, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.504565 (regressionFit = 22.504558, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(F, A), title(F, D).  [covers 10.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.180000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, A), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 7.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.465812 (regressionFit = 22.465805, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, B), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563864 (regressionFit = 22.563857, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.504565 (regressionFit = 22.504558, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(F, B), title(F, D).  [covers 10.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.180000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, B), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 6.  Pruned 0 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.465812 (regressionFit = 22.465805, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, _), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.770000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, F), haswordtitle(D, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563864 (regressionFit = 22.563857, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.585445 (regressionFit = 22.585438, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 201.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, _), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 5.  Pruned 0 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.465812 (regressionFit = 22.465805, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(B, _), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.770000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(B, F), haswordtitle(D, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563864 (regressionFit = 22.563857, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(B, _), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 4.  Pruned 0 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.465812 (regressionFit = 22.465805, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(_, C), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.465812 (regressionFit = 22.465805, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(E, C), haswordtitle(E, D).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563864 (regressionFit = 22.563857, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(_, C), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(F, C), sametitle(D, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(F, C), sametitle(F, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(E, C), sametitle(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordtitle(_, C), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 3.  Pruned 0 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.465812 (regressionFit = 22.465805, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.465812 (regressionFit = 22.465805, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(E, D), haswordtitle(E, C).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563864 (regressionFit = 22.563857, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(_, E), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.465812 (regressionFit = 22.465805, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(F, E), sametitle(D, F).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.465812 (regressionFit = 22.465805, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(F, E), sametitle(F, D).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(E, D), sametitle(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordtitle(_, D), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

***** Warning: #6 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.101.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #5: 787 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #5, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
% This clause covers 198 positive examples, of which 198 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/228.0 pos, 0.0/0.0 neg]'
%     Score = -37.970434 (regressionFit = 37.970432, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Have these 9 positive seeds: 6 60 132 136 154 183 206 209 226
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #6, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-37.97043379454714
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.838886 (regressionFit = 3.838882, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.838886): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.836794 (regressionFit = 3.836791, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.836794): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.839601 (regressionFit = 3.839597, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.837850 (regressionFit = 3.837847, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.017.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
Comparing variance: 0.03242741891358355 to score=0.0025 #egs=59.0
Comparing variance: 0.011382087714095247 to score=0.0025 #egs=169.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 59.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.032427)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.032427) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 169.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.011382)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.011382) into the LAST position (#2) in the search queue.

% Time for loop #6: 73 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #6, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% This clause covers 59 positive examples, of which 59 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]'
%     Score = -3.836794 (regressionFit = 3.836791, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Have these 9 positive seeds: 0 8 26 31 33 34 39 48 56
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #7, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-3.836794489583526
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911147 (regressionFit = 1.911142, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.911147): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909779 (regressionFit = 1.909774, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.909779): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911147 (regressionFit = 1.911142, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]' score=-1.9097793806307641
%  At # nodes expanded = 2, |OPEN| = 8.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.909780 (regressionFit = 1.909774, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, A).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909780 (regressionFit = 1.909774, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, B).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909780 (regressionFit = 1.909774, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(A, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909780 (regressionFit = 1.909774, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909780 (regressionFit = 1.909774, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909780 (regressionFit = 1.909774, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909780 (regressionFit = 1.909774, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(E, D), sametitle(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909780 (regressionFit = 1.909774, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordtitle(_, D), samevenue(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]' score=-1.9111470498898704
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), author(_, A).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), author(_, B).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordauthor(A, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordauthor(B, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordvenue(_, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.750000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, D), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]' score=-1.9111471598898704
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -1.911148 (regressionFit = 1.911142, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, A).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, B).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(B, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, C), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(E, F).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(F, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, C), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909780 (regressionFit = 1.909774, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.903540 (regressionFit = 1.903534, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.903540): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 4.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909780 (regressionFit = 1.909774, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909727 (regressionFit = 1.909721, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 3.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909780 (regressionFit = 1.909774, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909780 (regressionFit = 1.909774, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 2.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909780 (regressionFit = 1.909774, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.903144 (regressionFit = 1.903138, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.903144): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904450 (regressionFit = 1.904445, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909780 (regressionFit = 1.909774, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.911148 (regressionFit = 1.911142, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(E, F).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(F, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

***** Warning: #7 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.032.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #7: 121 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #7, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]
% This clause covers 11 positive examples, of which 11 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/169.0 pos, 0.0/0.0 neg]'
%     Score = -37.970434 (regressionFit = 37.970432, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Have these 9 positive seeds: 24 28 47 58 106 114 120 136 138
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #8, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-37.97043379454714
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.921642 (regressionFit = 1.921638, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 23.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.921642): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 23.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.912155 (regressionFit = 1.912151, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.912155): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.011.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #8: 54 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #8, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% This clause covers 46 positive examples, of which 46 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #5 @ 13:55:29 5/11/17.  [Using 13,989,384 memory cells.]  %%%%%


% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( haswordtitle(D, E) )
%   | | | then return 0.27297460133054335;  // std dev = 4.739, 198.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=172 */
%   | | | else return 0.3473500898252632;  // std dev = 0.101, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | | then return 0.2894349605209356;  // std dev = 1.325, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0.23679649740067318;  // std dev = 3.078, 57.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=45 */
%   | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | then if ( haswordauthor(B, K), haswordtitle(L, K) )
%   | | | then return 0.3350309584063773;  // std dev = 0.032, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3014693299163489;  // std dev = 1.379, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | else if ( haswordauthor(B, M), haswordvenue(N, M) )
%   | | | then return 0.3027405538734759;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return 0.3212110362425906;  // std dev = 0.023, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


% Clauses:

sameauthor(A, B, 0.27297460133054335) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     haswordtitle(D, E), 
     !. // Clause #1.

sameauthor(A, B, 0.3473500898252632) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     !. // Clause #2.

sameauthor(A, B, 0.2894349605209356) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(A, E), 
     haswordvenue(F, E), 
     !. // Clause #3.

sameauthor(A, B, 0.23679649740067318) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     !. // Clause #4.

sameauthor(A, B, 0.3350309584063773) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     haswordauthor(B, F), 
     haswordtitle(G, F), 
     !. // Clause #5.

sameauthor(A, B, 0.3014693299163489) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     !. // Clause #6.

sameauthor(A, B, 0.3027405538734759) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     !. // Clause #7.

sameauthor(A, B, 0.3212110362425906) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     !. // Clause #8.

sameauthor(A, B, -0.09269127618926093) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_sameauthor(a, b, 0.27297460133054335) :-  /* #neg=26 #pos=172 */ 
   haswordauthor(a, uniqueVar61),
   haswordauthor(b, uniqueVar61),
   haswordtitle(uniqueVar62, uniqueVar61),
   haswordauthor(b, uniqueVar63),
   haswordvenue(underscore, uniqueVar63),
   haswordtitle(uniqueVar62, uniqueVar63),
   !. // Flattened version of clause #1.

flattened_sameauthor(a, b, 0.3473500898252632) :-  /* #pos=26 */ 
   haswordauthor(a, uniqueVar64),
   haswordauthor(b, uniqueVar64),
   haswordtitle(underscore, uniqueVar64),
   haswordauthor(b, uniqueVar65),
   haswordvenue(underscore, uniqueVar65),
   !. // Flattened version of clause #2.

flattened_sameauthor(a, b, 0.2894349605209356) :-  /* #neg=2 #pos=21 */ 
   haswordauthor(a, uniqueVar66),
   haswordauthor(b, uniqueVar66),
   haswordtitle(underscore, uniqueVar66),
   haswordauthor(a, uniqueVar67),
   haswordvenue(underscore, uniqueVar67),
   !. // Flattened version of clause #3.

flattened_sameauthor(a, b, 0.23679649740067318) :-  /* #neg=12 #pos=45 */ 
   haswordauthor(a, uniqueVar68),
   haswordauthor(b, uniqueVar68),
   haswordtitle(underscore, uniqueVar68),
   !. // Flattened version of clause #4.

flattened_sameauthor(a, b, 0.3350309584063773) :-  /* #pos=11 */ 
   haswordauthor(a, uniqueVar69),
   haswordauthor(b, uniqueVar69),
   haswordauthor(a, uniqueVar70),
   haswordvenue(underscore, uniqueVar70),
   haswordauthor(b, uniqueVar71),
   haswordtitle(underscore, uniqueVar71),
   !. // Flattened version of clause #5.

flattened_sameauthor(a, b, 0.3014693299163489) :-  /* #neg=2 #pos=46 */ 
   haswordauthor(a, uniqueVar72),
   haswordauthor(b, uniqueVar72),
   haswordauthor(a, uniqueVar73),
   haswordvenue(underscore, uniqueVar73),
   !. // Flattened version of clause #6.

flattened_sameauthor(a, b, 0.3027405538734759) :-  /* #neg=2 #pos=44 */ 
   haswordauthor(a, uniqueVar74),
   haswordauthor(b, uniqueVar74),
   haswordauthor(b, uniqueVar75),
   haswordvenue(underscore, uniqueVar75),
   !. // Flattened version of clause #7.

flattened_sameauthor(a, b, 0.3212110362425906) :-  /* #pos=123 */ 
   haswordauthor(a, uniqueVar76),
   haswordauthor(b, uniqueVar76),
   !. // Flattened version of clause #8.

flattened_sameauthor(underscore, underscore, -0.09269127618926093) :-  /* #neg=22 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   haswordauthor(b, uniqueVar68)
%   haswordauthor(b, uniqueVar76)
%   haswordauthor(a, uniqueVar64)
%   haswordtitle(underscore, uniqueVar64)
%   haswordtitle(underscore, uniqueVar71)
%   haswordauthor(b, uniqueVar64)
%   haswordauthor(b, uniqueVar72)
%   haswordauthor(a, uniqueVar76)
%   haswordvenue(underscore, uniqueVar63)
%   haswordauthor(a, uniqueVar66)
%   haswordauthor(b, uniqueVar65)
%   haswordvenue(underscore, uniqueVar73)
%   haswordauthor(a, uniqueVar73)
%   haswordtitle(underscore, uniqueVar68)
%   haswordauthor(a, uniqueVar67)
%   haswordauthor(b, uniqueVar75)
%   haswordauthor(a, uniqueVar70)
%   haswordauthor(a, uniqueVar72)
%   haswordauthor(b, uniqueVar66)
%   haswordauthor(b, uniqueVar71)
%   haswordauthor(b, uniqueVar69)
%   haswordauthor(b, uniqueVar74)
%   haswordtitle(uniqueVar62, uniqueVar63)
%   haswordvenue(underscore, uniqueVar75)
%   haswordvenue(underscore, uniqueVar67)
%   haswordauthor(a, uniqueVar61)
%   haswordvenue(underscore, uniqueVar65)
%   haswordtitle(uniqueVar62, uniqueVar61)
%   haswordvenue(underscore, uniqueVar70)
%   haswordauthor(a, uniqueVar68)
%   haswordauthor(a, uniqueVar69)
%   haswordtitle(underscore, uniqueVar66)
%   haswordauthor(b, uniqueVar61)
%   haswordauthor(a, uniqueVar74)
%   haswordauthor(b, uniqueVar63)

% Saving model in: datasets/Cora/train/models/bRDNs/sameauthor.model.ckpt
% Time taken to learn 5 trees is 9.852 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.011382087714095254
Set score:0.0025
% Only 554 out of 554 converged.
% Kept 488 of the 488 positive examples.
% Kept 66 of the 66 negative examples.
% Dataset size: 554
Computing probabilities
prob time:98 milliseconds
No hidden examples for : sameauthor
Time to build dataset: 101 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.07211582352302232
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 48 163 181 214 241 264 312 330 414 519
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = sameauthor(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
% Most-general root: sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, A), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, A), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(A, _) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, B), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, B), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(_, A) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -37.897624 (regressionFit = 37.897622, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -37.897624): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -39.831926 (regressionFit = 39.831924, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -39.949943 (regressionFit = 39.949941, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -37.897624 (regressionFit = 37.897622, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, C), haswordauthor(A, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -39.835315 (regressionFit = 39.835313, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -39.950879 (regressionFit = 39.950877, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
Comparing variance: 0.07123613112641816 to score=0.0025 #egs=532.0
Comparing variance: 1.0092936587501423E-17 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 532.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.071236)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.071236) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 114 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #1, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% This clause covers 532 positive examples, of which 532 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]'
%     Score = -37.897624 (regressionFit = 37.897622, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 79 122 202 250 270 285 293 313 347 389
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-37.897623689254466
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.707426 (regressionFit = 37.707423, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -37.707426): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.851251 (regressionFit = 37.851248, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]' score=-37.70742612239271
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -37.707427 (regressionFit = 37.707423, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.707427 (regressionFit = 37.707423, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.707427 (regressionFit = 37.707423, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.707427 (regressionFit = 37.707423, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.707427 (regressionFit = 37.707423, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.843525 (regressionFit = 37.843521, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.707427 (regressionFit = 37.707423, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]' score=-37.851250964704754
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -37.851252 (regressionFit = 37.851248, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, A).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.851252 (regressionFit = 37.851248, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, B).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.851252 (regressionFit = 37.851248, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.851252 (regressionFit = 37.851248, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.843525 (regressionFit = 37.843521, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.851252 (regressionFit = 37.851248, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.851252 (regressionFit = 37.851248, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(D, C), samevenue(D, D).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.707427 (regressionFit = 37.707423, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.851252 (regressionFit = 37.851248, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.707427 (regressionFit = 37.707423, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.851252 (regressionFit = 37.851248, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.707427 (regressionFit = 37.707423, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.779930 (regressionFit = 37.779926, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.851252 (regressionFit = 37.851248, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.883583 (regressionFit = 37.883579, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.707427 (regressionFit = 37.707423, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.783348 (regressionFit = 37.783344, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.851252 (regressionFit = 37.851248, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.886177 (regressionFit = 37.886173, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.071.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
Comparing variance: 0.11141553879370833 to score=0.0025 #egs=304.0
Comparing variance: 0.01682938284695339 to score=0.0025 #egs=228.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 304.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.111416)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.111416) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 228.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.016829)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.016829) into the LAST position (#2) in the search queue.

% Time for loop #2: 209 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #2, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% This clause covers 304 positive examples, of which 304 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]'
%     Score = -37.707426 (regressionFit = 37.707423, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Have these 7 positive seeds: 43 51 53 57 69 143 272
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #3, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-37.70742612239271
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.866439 (regressionFit = 33.866435, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.866439): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]' score=-33.86643935434095
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -33.866440 (regressionFit = 33.866435, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.866440 (regressionFit = 33.866435, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.866440 (regressionFit = 33.866435, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.866440 (regressionFit = 33.866435, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.866440 (regressionFit = 33.866435, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.866440 (regressionFit = 33.866435, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.866440 (regressionFit = 33.866435, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.866440 (regressionFit = 33.866435, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.866440 (regressionFit = 33.866435, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.866440 (regressionFit = 33.866435, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.837838 (regressionFit = 33.837833, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.837838): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.866440 (regressionFit = 33.866435, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.834828 (regressionFit = 33.834822, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.834828): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.866440 (regressionFit = 33.866435, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.866440 (regressionFit = 33.866435, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.111.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
Comparing variance: 0.10074201962988134 to score=0.0025 #egs=224.0
Comparing variance: 0.1408576262045616 to score=0.0025 #egs=80.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 224.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.100742)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.100742) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 80.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.140858)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.140858) into position #1 in the search queue (new size=3).

% Time for loop #3: 229 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #3, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% This clause covers 224 positive examples, of which 224 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/80.0 pos, 0.0/0.0 neg]'
%     Score = -37.707426 (regressionFit = 37.707423, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 13 16 27 32 33 37 38 39 52 55
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #4, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-37.70742612239271
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -11.235282 (regressionFit = 11.235277, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -11.235282): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.141.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 51 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #4, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]'
%     Score = -33.834828 (regressionFit = 33.834822, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Have these 6 positive seeds: 60 175 187 194 205 209
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-33.83482755345835
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549941 (regressionFit = 22.549936, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -22.549941): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549942 (regressionFit = 22.549936, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]' score=-22.549941498452046
%  At # nodes expanded = 2, |OPEN| = 10.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -22.549943 (regressionFit = 22.549936, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), author(_, A).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), author(_, B).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordauthor(A, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordauthor(B, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordtitle(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordtitle(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordvenue(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549942 (regressionFit = 22.549936, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, E), sametitle(D, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549942 (regressionFit = 22.549936, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(A, D), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]' score=-22.54994160845205
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 0 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -22.549943 (regressionFit = 22.549936, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), author(_, A).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), author(_, B).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(_, C), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549942 (regressionFit = 22.549936, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(E, F).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549942 (regressionFit = 22.549936, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(F, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(E, C), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 8.  Pruned 0 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.180000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, A), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 7.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.435082 (regressionFit = 22.435075, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 8.0/224.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -22.435082): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 8.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.180000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, B), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 6.  Pruned 0 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.770000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, F), haswordtitle(D, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.563490 (regressionFit = 22.563483, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 201.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, _), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 5.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(B, _), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 4.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(_, C), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(F, C), sametitle(D, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(F, C), sametitle(F, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(E, C), sametitle(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordtitle(_, C), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 3.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.549943 (regressionFit = 22.549936, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(_, E), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.471855 (regressionFit = 22.471848, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(F, E), sametitle(D, F).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.471855 (regressionFit = 22.471848, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(F, E), sametitle(F, D).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(E, D), sametitle(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordtitle(_, D), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

***** Warning: #8 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 8.0/224.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 8.0/224.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.101.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 8.0/224.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #5: 565 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #5, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 8.0/224.0 pos, 0.0/0.0 neg]
% This clause covers 8 positive examples, of which 8 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/228.0 pos, 0.0/0.0 neg]'
%     Score = -37.897624 (regressionFit = 37.897622, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 10 32 35 43 49 54 70 71 80 83
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #6, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-37.897623689254466
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.836078 (regressionFit = 3.836074, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.836078): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.834008 (regressionFit = 3.834004, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.834008): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.836499 (regressionFit = 3.836495, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.017.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
Comparing variance: 0.032394164346985284 to score=0.0025 #egs=59.0
Comparing variance: 0.011377207368882512 to score=0.0025 #egs=169.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 59.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.032394)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.032394) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 169.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.011377)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.011377) into the LAST position (#2) in the search queue.

% Time for loop #6: 73 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #6, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% This clause covers 59 positive examples, of which 59 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]'
%     Score = -3.834008 (regressionFit = 3.834004, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 1 7 16 23 26 29 31 32 33 38
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #7, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-3.834007691813276
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909127 (regressionFit = 1.909122, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.909127): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907941 (regressionFit = 1.907936, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.907941): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909127 (regressionFit = 1.909122, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]' score=-1.9079413403826573
%  At # nodes expanded = 2, |OPEN| = 8.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.907942 (regressionFit = 1.907936, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, A).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907942 (regressionFit = 1.907936, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, B).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907942 (regressionFit = 1.907936, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(A, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907942 (regressionFit = 1.907936, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907942 (regressionFit = 1.907936, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, C).  [covers 2.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907942 (regressionFit = 1.907936, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907942 (regressionFit = 1.907936, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(E, D), sametitle(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907942 (regressionFit = 1.907936, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordtitle(_, D), samevenue(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]' score=-1.9091269950856073
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), author(_, A).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), author(_, B).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordauthor(A, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordauthor(B, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordvenue(_, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.750000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, D), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]' score=-1.9091271050856073
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -1.909128 (regressionFit = 1.909122, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, A).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, B).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(B, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, D).  [covers 2.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, C), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(E, F).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(F, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, C), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907942 (regressionFit = 1.907936, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.900290 (regressionFit = 1.900284, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.900290): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 4.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907942 (regressionFit = 1.907936, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907870 (regressionFit = 1.907864, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 3.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907942 (regressionFit = 1.907936, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907942 (regressionFit = 1.907936, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 2.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907942 (regressionFit = 1.907936, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904304 (regressionFit = 1.904299, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.903646 (regressionFit = 1.903641, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907942 (regressionFit = 1.907936, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.909128 (regressionFit = 1.909122, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(E, F).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(F, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

***** Warning: #9 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.032.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #7: 135 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #7, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
% This clause covers 10 positive examples, of which 10 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/169.0 pos, 0.0/0.0 neg]'
%     Score = -37.897624 (regressionFit = 37.897622, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 35 56 73 79 89 90 112 147 149 152
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #8, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-37.897623689254466
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.920875 (regressionFit = 1.920871, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 23.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.920875): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 23.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.916628 (regressionFit = 1.916624, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.916628): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.912172 (regressionFit = 1.912168, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.912172): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.011.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #8: 54 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #8, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% This clause covers 46 positive examples, of which 46 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #6 @ 13:55:30 5/11/17.  [Using 14,063,712 memory cells.]  %%%%%


% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( author(G, B), venue(G, F) )
%   | | | then return 0.34247312791388507;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.21209182099618934;  // std dev = 4.737, 216.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=190 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return 0.2243414256534896;  // std dev = 1.327, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0.17924107865883804;  // std dev = 3.078, 57.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=45 */
%   | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | then if ( author(L, A), venue(L, K) )
%   | | | then return 0.2724485261437381;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.23610158646683113;  // std dev = 1.378, 49.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=47 */
%   | | else if ( haswordauthor(B, M), haswordvenue(N, M) )
%   | | | then return 0.23773738013899257;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return 0.25551399901739086;  // std dev = 0.020, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else return -0.08518475138839682;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


% Clauses:

sameauthor(A, B, 0.34247312791388507) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     author(G, B), 
     venue(G, F), 
     !. // Clause #1.

sameauthor(A, B, 0.21209182099618934) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     !. // Clause #2.

sameauthor(A, B, 0.2243414256534896) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(A, E), 
     haswordvenue(F, E), 
     !. // Clause #3.

sameauthor(A, B, 0.17924107865883804) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     !. // Clause #4.

sameauthor(A, B, 0.2724485261437381) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     author(F, A), 
     venue(F, E), 
     !. // Clause #5.

sameauthor(A, B, 0.23610158646683113) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     !. // Clause #6.

sameauthor(A, B, 0.23773738013899257) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     !. // Clause #7.

sameauthor(A, B, 0.25551399901739086) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     !. // Clause #8.

sameauthor(A, B, -0.08518475138839682) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_sameauthor(a, b, 0.34247312791388507) :-  /* #pos=8 */ 
   haswordauthor(a, uniqueVar77),
   haswordauthor(b, uniqueVar77),
   haswordtitle(underscore, uniqueVar77),
   haswordauthor(b, uniqueVar78),
   haswordvenue(uniqueVar79, uniqueVar78),
   author(uniqueVar80, b),
   venue(uniqueVar80, uniqueVar79),
   !. // Flattened version of clause #1.

flattened_sameauthor(a, b, 0.21209182099618934) :-  /* #neg=26 #pos=190 */ 
   haswordauthor(a, uniqueVar81),
   haswordauthor(b, uniqueVar81),
   haswordtitle(underscore, uniqueVar81),
   haswordauthor(b, uniqueVar82),
   haswordvenue(underscore, uniqueVar82),
   !. // Flattened version of clause #2.

flattened_sameauthor(a, b, 0.2243414256534896) :-  /* #neg=2 #pos=21 */ 
   haswordauthor(a, uniqueVar83),
   haswordauthor(b, uniqueVar83),
   haswordtitle(underscore, uniqueVar83),
   haswordauthor(a, uniqueVar84),
   haswordvenue(underscore, uniqueVar84),
   !. // Flattened version of clause #3.

flattened_sameauthor(a, b, 0.17924107865883804) :-  /* #neg=12 #pos=45 */ 
   haswordauthor(a, uniqueVar85),
   haswordauthor(b, uniqueVar85),
   haswordtitle(underscore, uniqueVar85),
   !. // Flattened version of clause #4.

flattened_sameauthor(a, b, 0.2724485261437381) :-  /* #pos=10 */ 
   haswordauthor(a, uniqueVar86),
   haswordauthor(b, uniqueVar86),
   haswordauthor(a, uniqueVar87),
   haswordvenue(uniqueVar88, uniqueVar87),
   author(uniqueVar89, a),
   venue(uniqueVar89, uniqueVar88),
   !. // Flattened version of clause #5.

flattened_sameauthor(a, b, 0.23610158646683113) :-  /* #neg=2 #pos=47 */ 
   haswordauthor(a, uniqueVar90),
   haswordauthor(b, uniqueVar90),
   haswordauthor(a, uniqueVar91),
   haswordvenue(underscore, uniqueVar91),
   !. // Flattened version of clause #6.

flattened_sameauthor(a, b, 0.23773738013899257) :-  /* #neg=2 #pos=44 */ 
   haswordauthor(a, uniqueVar92),
   haswordauthor(b, uniqueVar92),
   haswordauthor(b, uniqueVar93),
   haswordvenue(underscore, uniqueVar93),
   !. // Flattened version of clause #7.

flattened_sameauthor(a, b, 0.25551399901739086) :-  /* #pos=123 */ 
   haswordauthor(a, uniqueVar94),
   haswordauthor(b, uniqueVar94),
   !. // Flattened version of clause #8.

flattened_sameauthor(underscore, underscore, -0.08518475138839682) :-  /* #neg=22 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   haswordtitle(underscore, uniqueVar77)
%   haswordauthor(a, uniqueVar84)
%   haswordtitle(underscore, uniqueVar81)
%   haswordtitle(underscore, uniqueVar83)
%   haswordauthor(b, uniqueVar90)
%   haswordauthor(a, uniqueVar77)
%   haswordvenue(uniqueVar79, uniqueVar78)
%   haswordauthor(a, uniqueVar83)
%   author(uniqueVar80, b)
%   venue(uniqueVar89, uniqueVar88)
%   haswordauthor(a, uniqueVar92)
%   haswordvenue(underscore, uniqueVar84)
%   haswordvenue(underscore, uniqueVar93)
%   haswordauthor(b, uniqueVar81)
%   haswordauthor(a, uniqueVar85)
%   haswordauthor(a, uniqueVar91)
%   haswordvenue(underscore, uniqueVar91)
%   venue(uniqueVar80, uniqueVar79)
%   haswordauthor(a, uniqueVar81)
%   haswordauthor(b, uniqueVar92)
%   haswordauthor(a, uniqueVar86)
%   haswordauthor(b, uniqueVar85)
%   haswordauthor(b, uniqueVar94)
%   haswordvenue(underscore, uniqueVar82)
%   haswordvenue(uniqueVar88, uniqueVar87)
%   haswordtitle(underscore, uniqueVar85)
%   haswordauthor(b, uniqueVar77)
%   haswordauthor(b, uniqueVar82)
%   haswordauthor(a, uniqueVar90)
%   haswordauthor(a, uniqueVar94)
%   haswordauthor(b, uniqueVar83)
%   haswordauthor(b, uniqueVar86)
%   haswordauthor(a, uniqueVar87)
%   haswordauthor(b, uniqueVar78)
%   author(uniqueVar89, a)
%   haswordauthor(b, uniqueVar93)

% Saving model in: datasets/Cora/train/models/bRDNs/sameauthor.model.ckpt
% Time taken to learn 6 trees is 11.597 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.011377207368882508
Set score:0.0025
% Only 554 out of 554 converged.
% Kept 488 of the 488 positive examples.
% Kept 66 of the 66 negative examples.
% Dataset size: 554
Computing probabilities
prob time:167 milliseconds
No hidden examples for : sameauthor
Time to build dataset: 171 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.07092170617583
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 7 61 71 107 165 177 293 299 325 331
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = sameauthor(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
% Most-general root: sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, A), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, A), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(A, _) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, B), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, B), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(_, A) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -37.862140 (regressionFit = 37.862138, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -37.862140): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -39.171125 (regressionFit = 39.171122, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -39.284418 (regressionFit = 39.284416, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -37.862140 (regressionFit = 37.862138, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, C), haswordauthor(A, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -39.177343 (regressionFit = 39.177341, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -39.286967 (regressionFit = 39.286965, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
Comparing variance: 0.07116943311566891 to score=0.0025 #egs=532.0
Comparing variance: 0.0 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 532.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.071169)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.071169) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 113 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #1, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% This clause covers 532 positive examples, of which 532 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]'
%     Score = -37.862140 (regressionFit = 37.862138, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Have these 8 positive seeds: 12 111 270 324 343 395 496 516
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-37.86214034753586
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.674402 (regressionFit = 37.674399, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -37.674402): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.803818 (regressionFit = 37.803815, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]' score=-37.67440175584302
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -37.674403 (regressionFit = 37.674399, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.674403 (regressionFit = 37.674399, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.674403 (regressionFit = 37.674399, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.674403 (regressionFit = 37.674399, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.674403 (regressionFit = 37.674399, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.794845 (regressionFit = 37.794841, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.674403 (regressionFit = 37.674399, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]' score=-37.80381835107732
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -37.803819 (regressionFit = 37.803815, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, A).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.803819 (regressionFit = 37.803815, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, B).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.803819 (regressionFit = 37.803815, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.803819 (regressionFit = 37.803815, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.794845 (regressionFit = 37.794841, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.803819 (regressionFit = 37.803815, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(D, C), samevenue(D, D).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.674403 (regressionFit = 37.674399, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.803819 (regressionFit = 37.803815, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.674403 (regressionFit = 37.674399, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.803819 (regressionFit = 37.803815, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.674403 (regressionFit = 37.674399, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.743991 (regressionFit = 37.743987, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.803819 (regressionFit = 37.803815, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.842792 (regressionFit = 37.842788, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.674403 (regressionFit = 37.674399, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.750294 (regressionFit = 37.750290, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.803819 (regressionFit = 37.803815, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.847641 (regressionFit = 37.847637, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.071.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
Comparing variance: 0.11131184530915145 to score=0.0025 #egs=304.0
Comparing variance: 0.016822797113425356 to score=0.0025 #egs=228.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 304.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.111312)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.111312) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 228.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.016823)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.016823) into the LAST position (#2) in the search queue.

% Time for loop #2: 199 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #2, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% This clause covers 304 positive examples, of which 304 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]'
%     Score = -37.674402 (regressionFit = 37.674399, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 45 53 91 209 211 217 220 222 230 232
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #3, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-37.67440175584302
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.838182 (regressionFit = 33.838178, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.838182): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]' score=-33.83818171473113
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -33.838183 (regressionFit = 33.838178, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.838183 (regressionFit = 33.838178, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.838183 (regressionFit = 33.838178, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.838183 (regressionFit = 33.838178, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.838183 (regressionFit = 33.838178, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.838183 (regressionFit = 33.838178, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.838183 (regressionFit = 33.838178, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.838183 (regressionFit = 33.838178, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.838183 (regressionFit = 33.838178, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.838183 (regressionFit = 33.838178, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.838183 (regressionFit = 33.838178, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.816776 (regressionFit = 33.816771, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.816776): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.838183 (regressionFit = 33.838178, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.812078 (regressionFit = 33.812073, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.812078): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.838183 (regressionFit = 33.838178, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.838183 (regressionFit = 33.838178, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.111.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
Comparing variance: 0.10064284692454463 to score=0.0025 #egs=224.0
Comparing variance: 0.1408509456460892 to score=0.0025 #egs=80.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 224.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.100643)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.100643) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 80.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.140851)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.140851) into position #1 in the search queue (new size=3).

% Time for loop #3: 238 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #3, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
% This clause covers 224 positive examples, of which 224 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/80.0 pos, 0.0/0.0 neg]'
%     Score = -37.674402 (regressionFit = 37.674399, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 3 5 25 34 36 47 54 60 61 66
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #4, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-37.67440175584302
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -11.240700 (regressionFit = 11.240695, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -11.240700): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 80.0/80.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 80.0/80.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 80.0/80.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.141.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 62 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #4, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 23.0/80.0 pos, 0.0/0.0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]'
%     Score = -33.812078 (regressionFit = 33.812073, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 4 5 30 47 58 98 134 154 178 183
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-33.812078422785135
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519656 (regressionFit = 22.519650, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -22.519656): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.428011 (regressionFit = 22.428005, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -22.428011): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519656 (regressionFit = 22.519650, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]' score=-22.428010509242498
%  At # nodes expanded = 2, |OPEN| = 11.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -22.428012 (regressionFit = 22.428005, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), author(_, A).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.428012 (regressionFit = 22.428005, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), author(_, B).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=6.7600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordauthor(A, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.428012 (regressionFit = 22.428005, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordauthor(A, _).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.428012 (regressionFit = 22.428005, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordauthor(B, _).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.428012 (regressionFit = 22.428005, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordtitle(_, C).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.428012 (regressionFit = 22.428005, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordtitle(_, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.428012 (regressionFit = 22.428005, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), haswordvenue(_, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.428012 (regressionFit = 22.428005, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E), sametitle(D, D).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.428011 (regressionFit = 22.428005, penalties=6.7600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(F, E), haswordtitle(D, E), samevenue(F, F).  [covers 198.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]' score=-22.519655742069528
%  At # nodes expanded = 3, |OPEN| = 10.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -22.519657 (regressionFit = 22.519650, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), author(_, A).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), author(_, B).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordauthor(A, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordauthor(B, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=6.7600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, E), haswordtitle(D, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordtitle(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordtitle(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, D), haswordvenue(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, E), sametitle(D, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=6.86E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(A, D), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]' score=-22.51965585206953
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -22.519657 (regressionFit = 22.519650, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), author(_, A).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), author(_, B).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(_, C), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(E, F).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(F, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordvenue(E, C), samevenue(E, E).  [covers 189.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 8.  Pruned 0 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.428012 (regressionFit = 22.428005, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, A), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.443690 (regressionFit = 22.443683, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(F, A), title(F, D).  [covers 10.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.180000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, A), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 7.  Pruned 0 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.428012 (regressionFit = 22.428005, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, B), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.443690 (regressionFit = 22.443683, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(F, B), title(F, D).  [covers 10.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.180000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), author(_, B), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 6.  Pruned 0 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.428012 (regressionFit = 22.428005, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, _), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.770000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, F), haswordtitle(D, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.539767 (regressionFit = 22.539760, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 201.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(A, _), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 5.  Pruned 0 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.428012 (regressionFit = 22.428005, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(B, _), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.770000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(B, F), haswordtitle(D, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.980000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordauthor(B, _), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #5, bodyLen=6] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 4.  Pruned 0 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), author(_, A).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.1800000000000016E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), author(_, B).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=6.970000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(A, D).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(A, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordauthor(B, _).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.428012 (regressionFit = 22.428005, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(_, C), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.428012 (regressionFit = 22.428005, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(E, C), haswordtitle(E, D).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordtitle(_, C).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordtitle(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -22.519657 (regressionFit = 22.519650, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.080000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(_, C), haswordvenue(_, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(_, C), sametitle(D, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(F, C), sametitle(D, F).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(F, C), sametitle(F, D).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D), haswordtitle(E, C), sametitle(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.97E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(E, D), haswordtitle(_, C), samevenue(E, E).  [covers 224.0/224.0 pos, 0.0/0.0 neg]

***** Warning: #10 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.101.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #5: 1.181 seconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #5, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordvenue(_, E), haswordtitle(D, E).  [covers 198.0/224.0 pos, 0.0/0.0 neg]
% This clause covers 198 positive examples, of which 198 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/228.0 pos, 0.0/0.0 neg]'
%     Score = -37.862140 (regressionFit = 37.862138, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Have these 5 positive seeds: 130 142 152 186 193
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #6, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-37.86214034753586
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.834300 (regressionFit = 3.834296, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.834300): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.832367 (regressionFit = 3.832363, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.832367): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #6, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.017.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
Comparing variance: 0.032366549016599834 to score=0.0025 #egs=59.0
Comparing variance: 0.011377138919966728 to score=0.0025 #egs=169.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 59.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.032367)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.032367) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 169.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.011377)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.011377) into the LAST position (#2) in the search queue.

% Time for loop #6: 80 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #6, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% This clause covers 59 positive examples, of which 59 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]'
%     Score = -3.832367 (regressionFit = 3.832363, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 3 9 11 13 21 29 38 39 41 58
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #7, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-3.832366819453767
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907180 (regressionFit = 1.907175, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.907180): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905274 (regressionFit = 1.905269, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.905274): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907180 (regressionFit = 1.907175, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]' score=-1.905274486168619
%  At # nodes expanded = 2, |OPEN| = 8.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.905276 (regressionFit = 1.905269, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, A).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905276 (regressionFit = 1.905269, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, B).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905275 (regressionFit = 1.905269, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(A, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905275 (regressionFit = 1.905269, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905275 (regressionFit = 1.905269, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, C).  [covers 2.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905275 (regressionFit = 1.905269, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905275 (regressionFit = 1.905269, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(E, D), sametitle(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905275 (regressionFit = 1.905269, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordtitle(_, D), samevenue(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]' score=-1.9071798991882365
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), author(_, A).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), author(_, B).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordauthor(A, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordauthor(B, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordvenue(_, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.750000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, D), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]' score=-1.9071800091882365
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -1.907181 (regressionFit = 1.907175, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, A).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, B).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(B, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordtitle(_, D).  [covers 2.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, C), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(E, F).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(F, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, C), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905276 (regressionFit = 1.905269, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.901912 (regressionFit = 1.901906, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.901912): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 4.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905276 (regressionFit = 1.905269, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906016 (regressionFit = 1.906010, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 3.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905275 (regressionFit = 1.905269, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905275 (regressionFit = 1.905269, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 2.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905275 (regressionFit = 1.905269, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.901171 (regressionFit = 1.901165, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.901171): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.900894 (regressionFit = 1.900889, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.900894): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #7, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905275 (regressionFit = 1.905269, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907181 (regressionFit = 1.907175, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(E, F).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(F, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

***** Warning: #11 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.032.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #7: 120 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #7, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
% This clause covers 13 positive examples, of which 13 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/169.0 pos, 0.0/0.0 neg]'
%     Score = -37.862140 (regressionFit = 37.862138, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 8 37 57 58 81 84 85 99 115 117
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #8, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-37.86214034753586
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #8, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.916334 (regressionFit = 1.916331, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.916334): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.912207 (regressionFit = 1.912203, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.912207): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.011.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #8: 52 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #8, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% This clause covers 46 positive examples, of which 46 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #7 @ 13:55:33 5/11/17.  [Using 14,081,984 memory cells.]  %%%%%


% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( haswordtitle(D, E) )
%   | | | then return 0.16234348395482717;  // std dev = 4.735, 198.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=172 */
%   | | | else return 0.23338639461136051;  // std dev = 0.079, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | | then return 0.17841992063233392;  // std dev = 1.329, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0.13754423748262135;  // std dev = 3.078, 57.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=45 */
%   | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | then if ( haswordauthor(B, K), haswordvenue(L, K) )
%   | | | then return 0.21946319265384548;  // std dev = 0.022, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.19010185222130005;  // std dev = 1.379, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | else if ( haswordauthor(B, M), haswordvenue(N, M) )
%   | | | then return 0.1922623536087925;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return 0.20999980327240927;  // std dev = 0.018, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


% Clauses:

sameauthor(A, B, 0.16234348395482717) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     haswordtitle(D, E), 
     !. // Clause #1.

sameauthor(A, B, 0.23338639461136051) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     !. // Clause #2.

sameauthor(A, B, 0.17841992063233392) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(A, E), 
     haswordvenue(F, E), 
     !. // Clause #3.

sameauthor(A, B, 0.13754423748262135) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     !. // Clause #4.

sameauthor(A, B, 0.21946319265384548) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     haswordauthor(B, F), 
     haswordvenue(G, F), 
     !. // Clause #5.

sameauthor(A, B, 0.19010185222130005) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     !. // Clause #6.

sameauthor(A, B, 0.1922623536087925) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     !. // Clause #7.

sameauthor(A, B, 0.20999980327240927) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     !. // Clause #8.

sameauthor(A, B, -0.07877675473109179) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_sameauthor(a, b, 0.16234348395482717) :-  /* #neg=26 #pos=172 */ 
   haswordauthor(a, uniqueVar95),
   haswordauthor(b, uniqueVar95),
   haswordtitle(uniqueVar96, uniqueVar95),
   haswordauthor(b, uniqueVar97),
   haswordvenue(underscore, uniqueVar97),
   haswordtitle(uniqueVar96, uniqueVar97),
   !. // Flattened version of clause #1.

flattened_sameauthor(a, b, 0.23338639461136051) :-  /* #pos=26 */ 
   haswordauthor(a, uniqueVar98),
   haswordauthor(b, uniqueVar98),
   haswordtitle(underscore, uniqueVar98),
   haswordauthor(b, uniqueVar99),
   haswordvenue(underscore, uniqueVar99),
   !. // Flattened version of clause #2.

flattened_sameauthor(a, b, 0.17841992063233392) :-  /* #neg=2 #pos=21 */ 
   haswordauthor(a, uniqueVar100),
   haswordauthor(b, uniqueVar100),
   haswordtitle(underscore, uniqueVar100),
   haswordauthor(a, uniqueVar101),
   haswordvenue(underscore, uniqueVar101),
   !. // Flattened version of clause #3.

flattened_sameauthor(a, b, 0.13754423748262135) :-  /* #neg=12 #pos=45 */ 
   haswordauthor(a, uniqueVar102),
   haswordauthor(b, uniqueVar102),
   haswordtitle(underscore, uniqueVar102),
   !. // Flattened version of clause #4.

flattened_sameauthor(a, b, 0.21946319265384548) :-  /* #pos=13 */ 
   haswordauthor(a, uniqueVar103),
   haswordauthor(b, uniqueVar103),
   haswordauthor(a, uniqueVar104),
   haswordvenue(underscore, uniqueVar104),
   haswordauthor(b, uniqueVar105),
   haswordvenue(underscore, uniqueVar105),
   !. // Flattened version of clause #5.

flattened_sameauthor(a, b, 0.19010185222130005) :-  /* #neg=2 #pos=44 */ 
   haswordauthor(a, uniqueVar106),
   haswordauthor(b, uniqueVar106),
   haswordauthor(a, uniqueVar107),
   haswordvenue(underscore, uniqueVar107),
   !. // Flattened version of clause #6.

flattened_sameauthor(a, b, 0.1922623536087925) :-  /* #neg=2 #pos=44 */ 
   haswordauthor(a, uniqueVar108),
   haswordauthor(b, uniqueVar108),
   haswordauthor(b, uniqueVar109),
   haswordvenue(underscore, uniqueVar109),
   !. // Flattened version of clause #7.

flattened_sameauthor(a, b, 0.20999980327240927) :-  /* #pos=123 */ 
   haswordauthor(a, uniqueVar110),
   haswordauthor(b, uniqueVar110),
   !. // Flattened version of clause #8.

flattened_sameauthor(underscore, underscore, -0.07877675473109179) :-  /* #neg=22 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   haswordvenue(underscore, uniqueVar107)
%   haswordauthor(b, uniqueVar108)
%   haswordvenue(underscore, uniqueVar97)
%   haswordauthor(b, uniqueVar102)
%   haswordauthor(b, uniqueVar95)
%   haswordauthor(b, uniqueVar105)
%   haswordauthor(a, uniqueVar108)
%   haswordauthor(b, uniqueVar100)
%   haswordauthor(a, uniqueVar95)
%   haswordauthor(b, uniqueVar106)
%   haswordauthor(b, uniqueVar109)
%   haswordauthor(b, uniqueVar99)
%   haswordauthor(a, uniqueVar103)
%   haswordtitle(uniqueVar96, uniqueVar95)
%   haswordauthor(a, uniqueVar101)
%   haswordauthor(a, uniqueVar106)
%   haswordvenue(underscore, uniqueVar101)
%   haswordauthor(b, uniqueVar103)
%   haswordtitle(uniqueVar96, uniqueVar97)
%   haswordauthor(b, uniqueVar110)
%   haswordauthor(b, uniqueVar97)
%   haswordauthor(a, uniqueVar100)
%   haswordauthor(a, uniqueVar102)
%   haswordauthor(a, uniqueVar104)
%   haswordauthor(a, uniqueVar98)
%   haswordvenue(underscore, uniqueVar105)
%   haswordtitle(underscore, uniqueVar98)
%   haswordauthor(a, uniqueVar110)
%   haswordvenue(underscore, uniqueVar109)
%   haswordauthor(b, uniqueVar98)
%   haswordvenue(underscore, uniqueVar99)
%   haswordvenue(underscore, uniqueVar104)
%   haswordauthor(a, uniqueVar107)
%   haswordtitle(underscore, uniqueVar100)
%   haswordtitle(underscore, uniqueVar102)

% Saving model in: datasets/Cora/train/models/bRDNs/sameauthor.model.ckpt
% Time taken to learn 7 trees is 14.115 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.011377138919966737
Set score:0.0025
% Only 554 out of 554 converged.
% Kept 488 of the 488 positive examples.
% Kept 66 of the 66 negative examples.
% Dataset size: 554
Computing probabilities
prob time:204 milliseconds
No hidden examples for : sameauthor
Time to build dataset: 209 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.07018978540597483
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 84 134 194 203 314 324 353 386 410 484
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = sameauthor(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
% Most-general root: sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, A), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, A), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(A, _) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, B), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, B), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(_, A) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -37.846556 (regressionFit = 37.846554, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -37.846556): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -38.766710 (regressionFit = 38.766707, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -38.877347 (regressionFit = 38.877344, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -37.846556 (regressionFit = 37.846554, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, C), haswordauthor(A, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -38.771354 (regressionFit = 38.771352, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -38.878521 (regressionFit = 38.878519, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
Comparing variance: 0.0711401385780773 to score=0.0025 #egs=532.0
Comparing variance: -1.8924256101565167E-18 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 532.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.071140)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.071140) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 121 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #1, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% This clause covers 532 positive examples, of which 532 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]'
%     Score = -37.846556 (regressionFit = 37.846554, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 33 44 88 115 179 182 188 215 287 296
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-37.84655565353713
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.659400 (regressionFit = 37.659397, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -37.659400): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.790324 (regressionFit = 37.790321, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]' score=-37.659400427688595
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -37.659402 (regressionFit = 37.659397, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.659402 (regressionFit = 37.659397, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.659401 (regressionFit = 37.659397, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.659401 (regressionFit = 37.659397, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.659401 (regressionFit = 37.659397, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.782047 (regressionFit = 37.782042, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.659401 (regressionFit = 37.659397, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]' score=-37.79032409221235
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -37.790325 (regressionFit = 37.790321, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, A).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.790325 (regressionFit = 37.790321, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, B).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.790325 (regressionFit = 37.790321, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.790325 (regressionFit = 37.790321, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.782047 (regressionFit = 37.782042, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.790325 (regressionFit = 37.790321, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.790325 (regressionFit = 37.790321, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(D, C), samevenue(D, D).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.659402 (regressionFit = 37.659397, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.790325 (regressionFit = 37.790321, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.659402 (regressionFit = 37.659397, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.790325 (regressionFit = 37.790321, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.659401 (regressionFit = 37.659397, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.728602 (regressionFit = 37.728598, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.790325 (regressionFit = 37.790321, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.826912 (regressionFit = 37.826908, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.659401 (regressionFit = 37.659397, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.733328 (regressionFit = 37.733324, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.790325 (regressionFit = 37.790321, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.828843 (regressionFit = 37.828840, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.071.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
Comparing variance: 0.11126339259130374 to score=0.0025 #egs=304.0
Comparing variance: 0.016821605438299376 to score=0.0025 #egs=228.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 304.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.111263)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.111263) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 228.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.016822)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.016822) into the LAST position (#2) in the search queue.

% Time for loop #2: 196 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #2, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% This clause covers 304 positive examples, of which 304 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]'
%     Score = -37.659400 (regressionFit = 37.659397, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 60 64 92 172 203 218 251 282 283 285
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #3, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-37.659400427688595
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823084 (regressionFit = 33.823080, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.823084): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]' score=-33.82308400609885
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -33.823085 (regressionFit = 33.823080, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823085 (regressionFit = 33.823080, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823085 (regressionFit = 33.823080, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823085 (regressionFit = 33.823080, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823085 (regressionFit = 33.823080, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823085 (regressionFit = 33.823080, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823085 (regressionFit = 33.823080, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823085 (regressionFit = 33.823080, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823085 (regressionFit = 33.823080, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823085 (regressionFit = 33.823080, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.708795 (regressionFit = 33.708790, penalties=4.950000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, B), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.708795): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, B), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823085 (regressionFit = 33.823080, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.802344 (regressionFit = 33.802339, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823085 (regressionFit = 33.823080, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.802021 (regressionFit = 33.802016, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823085 (regressionFit = 33.823080, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823085 (regressionFit = 33.823080, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, B), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, B), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.111.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, B), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
Comparing variance: 0.0 to score=0.0025 #egs=10.0
Comparing variance: 0.11465574888261328 to score=0.0025 #egs=294.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 294.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.114656)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.114656) into position #1 in the search queue (new size=2).

% Time for loop #3: 254 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #3, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, B), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
% This clause covers 10 positive examples, of which 10 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/294.0 pos, 0.0/0.0 neg]'
%     Score = -37.659400 (regressionFit = 37.659397, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Have these 3 positive seeds: 74 169 220
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #4, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-37.659400427688595
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.708487 (regressionFit = 33.708483, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.708487): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]' score=-33.708486674140396
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -33.708488 (regressionFit = 33.708483, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.708488 (regressionFit = 33.708483, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.708488 (regressionFit = 33.708483, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.708488 (regressionFit = 33.708483, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.708488 (regressionFit = 33.708483, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.708488 (regressionFit = 33.708483, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.708488 (regressionFit = 33.708483, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.708488 (regressionFit = 33.708483, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 179.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.708488 (regressionFit = 33.708483, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.708488 (regressionFit = 33.708483, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.708488 (regressionFit = 33.708483, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.696547 (regressionFit = 33.696542, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.696547): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.708488 (regressionFit = 33.708483, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.696303 (regressionFit = 33.696298, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.696303): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.708488 (regressionFit = 33.708483, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.708488 (regressionFit = 33.708483, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.115.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 209 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #4, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
% This clause covers 214 positive examples, of which 214 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/228.0 pos, 0.0/0.0 neg]'
%     Score = -37.846556 (regressionFit = 37.846554, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 60 67 100 102 165 177 190 200 216 217
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-37.84655565353713
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.834005 (regressionFit = 3.834001, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.834005): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.831953 (regressionFit = 3.831949, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.831953): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.834648 (regressionFit = 3.834644, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.833114 (regressionFit = 3.833110, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.017.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
Comparing variance: 0.032355945862275776 to score=0.0025 #egs=59.0
Comparing variance: 0.011378394140440918 to score=0.0025 #egs=169.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 59.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.032356)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.032356) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 169.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.011378)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.011378) into the LAST position (#2) in the search queue.

% Time for loop #5: 74 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #5, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% This clause covers 59 positive examples, of which 59 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]'
%     Score = -3.831953 (regressionFit = 3.831949, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 4 7 23 24 31 33 34 50 51 54
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #6, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-3.8319533656087863
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907019 (regressionFit = 1.907014, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.907019): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904835 (regressionFit = 1.904830, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.904835): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907019 (regressionFit = 1.907014, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]' score=-1.904834724630358
%  At # nodes expanded = 2, |OPEN| = 8.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.904836 (regressionFit = 1.904830, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, A).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904836 (regressionFit = 1.904830, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, B).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904836 (regressionFit = 1.904830, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904836 (regressionFit = 1.904830, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904836 (regressionFit = 1.904830, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904836 (regressionFit = 1.904830, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(E, D), sametitle(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904836 (regressionFit = 1.904830, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordtitle(_, D), samevenue(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]' score=-1.9070188348175972
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), author(_, A).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), author(_, B).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordauthor(A, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordauthor(B, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordvenue(_, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.750000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, D), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]' score=-1.9070189448175972
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -1.907020 (regressionFit = 1.907014, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, A).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, B).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(B, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, C), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(E, F).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(F, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, C), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904836 (regressionFit = 1.904830, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 4.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904836 (regressionFit = 1.904830, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905362 (regressionFit = 1.905356, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 3.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904836 (regressionFit = 1.904830, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904836 (regressionFit = 1.904830, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 2.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904836 (regressionFit = 1.904830, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.901411 (regressionFit = 1.901405, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.901411): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.901952 (regressionFit = 1.901946, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904836 (regressionFit = 1.904830, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.907020 (regressionFit = 1.907014, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(E, F).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(F, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

***** Warning: #12 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.032.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #6: 105 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #6, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]
% This clause covers 11 positive examples, of which 11 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/169.0 pos, 0.0/0.0 neg]'
%     Score = -37.846556 (regressionFit = 37.846554, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 13 25 88 93 95 98 107 123 125 137
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #7, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-37.84655565353713
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.921089 (regressionFit = 1.921085, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 23.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.921089): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 23.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.916190 (regressionFit = 1.916186, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.916190): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.912249 (regressionFit = 1.912245, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.912249): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.011.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #7: 53 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #7, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% This clause covers 46 positive examples, of which 46 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #8 @ 13:55:34 5/11/17.  [Using 14,120,968 memory cells.]  %%%%%


% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( author(E, B), title(E, D) )
%   | | then return 0.23782097133326108;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | | then return 0.1326266930699474;  // std dev = 4.736, 214.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=188 */
%   | | | else return 0.11797987134929366;  // std dev = 3.357, 80.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=66 */
%   | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | then if ( haswordauthor(B, J), haswordtitle(K, J) )
%   | | | then return 0.18732229024435074;  // std dev = 0.027, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.15818912288737516;  // std dev = 1.379, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | else if ( haswordauthor(B, L), haswordvenue(M, L) )
%   | | | then return 0.15939436784474256;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return 0.1772744832958837;  // std dev = 0.016, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


% Clauses:

sameauthor(A, B, 0.23782097133326108) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     author(E, B), 
     title(E, D), 
     !. // Clause #1.

sameauthor(A, B, 0.1326266930699474) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     !. // Clause #2.

sameauthor(A, B, 0.11797987134929366) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     !. // Clause #3.

sameauthor(A, B, 0.18732229024435074) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     haswordauthor(B, F), 
     haswordtitle(G, F), 
     !. // Clause #4.

sameauthor(A, B, 0.15818912288737516) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     !. // Clause #5.

sameauthor(A, B, 0.15939436784474256) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     !. // Clause #6.

sameauthor(A, B, 0.1772744832958837) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     !. // Clause #7.

sameauthor(A, B, -0.07324622576333704) :- !. // Clause #8.


% The flattened versions of these clauses:

flattened_sameauthor(a, b, 0.23782097133326108) :-  /* #pos=10 */ 
   haswordauthor(a, uniqueVar111),
   haswordauthor(b, uniqueVar111),
   haswordtitle(uniqueVar112, uniqueVar111),
   author(uniqueVar113, b),
   title(uniqueVar113, uniqueVar112),
   !. // Flattened version of clause #1.

flattened_sameauthor(a, b, 0.1326266930699474) :-  /* #neg=26 #pos=188 */ 
   haswordauthor(a, uniqueVar114),
   haswordauthor(b, uniqueVar114),
   haswordtitle(underscore, uniqueVar114),
   haswordauthor(b, uniqueVar115),
   haswordvenue(underscore, uniqueVar115),
   !. // Flattened version of clause #2.

flattened_sameauthor(a, b, 0.11797987134929366) :-  /* #neg=14 #pos=66 */ 
   haswordauthor(a, uniqueVar116),
   haswordauthor(b, uniqueVar116),
   haswordtitle(underscore, uniqueVar116),
   !. // Flattened version of clause #3.

flattened_sameauthor(a, b, 0.18732229024435074) :-  /* #pos=11 */ 
   haswordauthor(a, uniqueVar117),
   haswordauthor(b, uniqueVar117),
   haswordauthor(a, uniqueVar118),
   haswordvenue(underscore, uniqueVar118),
   haswordauthor(b, uniqueVar119),
   haswordtitle(underscore, uniqueVar119),
   !. // Flattened version of clause #4.

flattened_sameauthor(a, b, 0.15818912288737516) :-  /* #neg=2 #pos=46 */ 
   haswordauthor(a, uniqueVar120),
   haswordauthor(b, uniqueVar120),
   haswordauthor(a, uniqueVar121),
   haswordvenue(underscore, uniqueVar121),
   !. // Flattened version of clause #5.

flattened_sameauthor(a, b, 0.15939436784474256) :-  /* #neg=2 #pos=44 */ 
   haswordauthor(a, uniqueVar122),
   haswordauthor(b, uniqueVar122),
   haswordauthor(b, uniqueVar123),
   haswordvenue(underscore, uniqueVar123),
   !. // Flattened version of clause #6.

flattened_sameauthor(a, b, 0.1772744832958837) :-  /* #pos=123 */ 
   haswordauthor(a, uniqueVar124),
   haswordauthor(b, uniqueVar124),
   !. // Flattened version of clause #7.

flattened_sameauthor(underscore, underscore, -0.07324622576333704) :-  /* #neg=22 */ 
   !. // Flattened version of clause #8.


% The unique flattened literals:
%   title(uniqueVar113, uniqueVar112)
%   haswordauthor(a, uniqueVar124)
%   haswordauthor(b, uniqueVar119)
%   haswordauthor(b, uniqueVar122)
%   haswordauthor(b, uniqueVar114)
%   haswordtitle(underscore, uniqueVar116)
%   haswordvenue(underscore, uniqueVar123)
%   author(uniqueVar113, b)
%   haswordvenue(underscore, uniqueVar115)
%   haswordauthor(b, uniqueVar111)
%   haswordtitle(underscore, uniqueVar114)
%   haswordauthor(b, uniqueVar116)
%   haswordauthor(b, uniqueVar115)
%   haswordauthor(a, uniqueVar122)
%   haswordauthor(a, uniqueVar114)
%   haswordauthor(b, uniqueVar120)
%   haswordtitle(uniqueVar112, uniqueVar111)
%   haswordauthor(b, uniqueVar117)
%   haswordvenue(underscore, uniqueVar121)
%   haswordvenue(underscore, uniqueVar118)
%   haswordauthor(b, uniqueVar123)
%   haswordtitle(underscore, uniqueVar119)
%   haswordauthor(a, uniqueVar116)
%   haswordauthor(a, uniqueVar121)
%   haswordauthor(a, uniqueVar118)
%   haswordauthor(a, uniqueVar120)
%   haswordauthor(a, uniqueVar111)
%   haswordauthor(b, uniqueVar124)
%   haswordauthor(a, uniqueVar117)

% Saving model in: datasets/Cora/train/models/bRDNs/sameauthor.model.ckpt
% Time taken to learn 8 trees is 15.627 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.011378394140440923
Set score:0.0025
% Only 554 out of 554 converged.
% Kept 488 of the 488 positive examples.
% Kept 66 of the 66 negative examples.
% Dataset size: 554
Computing probabilities
prob time:203 milliseconds
No hidden examples for : sameauthor
Time to build dataset: 207 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06972493248988924
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 30 77 96 121 128 141 150 230 240 261
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = sameauthor(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
% Most-general root: sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, A), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, A), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(A, _) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, B), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, B), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(_, A) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -37.846053 (regressionFit = 37.846051, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -37.846053): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -38.508699 (regressionFit = 38.508697, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -38.617995 (regressionFit = 38.617993, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -37.846053 (regressionFit = 37.846051, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, C), haswordauthor(A, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -38.511435 (regressionFit = 38.511433, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -38.618402 (regressionFit = 38.618400, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
Comparing variance: 0.07113919369024148 to score=0.0025 #egs=532.0
Comparing variance: -3.784851220313033E-18 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 532.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.071139)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.071139) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 158 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #1, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% This clause covers 532 positive examples, of which 532 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]'
%     Score = -37.846053 (regressionFit = 37.846051, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 6 70 152 176 177 192 197 210 267 477
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-37.84605297320847
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.657532 (regressionFit = 37.657529, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -37.657532): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.780952 (regressionFit = 37.780949, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]' score=-37.657532264001226
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -37.657533 (regressionFit = 37.657529, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.657533 (regressionFit = 37.657529, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.657533 (regressionFit = 37.657529, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.657533 (regressionFit = 37.657529, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.657533 (regressionFit = 37.657529, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.771863 (regressionFit = 37.771859, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.657533 (regressionFit = 37.657529, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]' score=-37.78095183274776
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -37.780953 (regressionFit = 37.780949, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, A).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.780953 (regressionFit = 37.780949, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, B).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.780953 (regressionFit = 37.780949, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.780953 (regressionFit = 37.780949, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.771863 (regressionFit = 37.771859, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.780953 (regressionFit = 37.780949, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.780953 (regressionFit = 37.780949, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(D, C), samevenue(D, D).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.657533 (regressionFit = 37.657529, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.780953 (regressionFit = 37.780949, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.657533 (regressionFit = 37.657529, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.780953 (regressionFit = 37.780949, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.657533 (regressionFit = 37.657529, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.726924 (regressionFit = 37.726920, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.780953 (regressionFit = 37.780949, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.825456 (regressionFit = 37.825452, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.657533 (regressionFit = 37.657529, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.729716 (regressionFit = 37.729712, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.780953 (regressionFit = 37.780949, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.826066 (regressionFit = 37.826062, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.071.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
Comparing variance: 0.11125671987900518 to score=0.0025 #egs=304.0
Comparing variance: 0.01682230868764757 to score=0.0025 #egs=228.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 304.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.111257)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.111257) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 228.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.016822)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.016822) into the LAST position (#2) in the search queue.

% Time for loop #2: 286 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #2, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% This clause covers 304 positive examples, of which 304 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]'
%     Score = -37.657532 (regressionFit = 37.657529, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 13 33 39 47 53 124 165 170 182 194
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #3, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-37.657532264001226
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.821970 (regressionFit = 33.821965, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.821970): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]' score=-33.82196957175663
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -33.821971 (regressionFit = 33.821965, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.821971 (regressionFit = 33.821965, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.821971 (regressionFit = 33.821965, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.821971 (regressionFit = 33.821965, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.821971 (regressionFit = 33.821965, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.821971 (regressionFit = 33.821965, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.821970 (regressionFit = 33.821965, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.821970 (regressionFit = 33.821965, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.821971 (regressionFit = 33.821965, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.721905 (regressionFit = 33.721900, penalties=4.950000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.721905): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.821971 (regressionFit = 33.821965, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.821971 (regressionFit = 33.821965, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.801178 (regressionFit = 33.801173, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.821971 (regressionFit = 33.821965, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.802864 (regressionFit = 33.802859, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.821971 (regressionFit = 33.821965, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.821970 (regressionFit = 33.821965, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.111.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
Comparing variance: 7.395371273875018E-5 to score=0.0025 #egs=10.0
Comparing variance: 0.11469782634672004 to score=0.0025 #egs=294.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 294.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.114698)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.114698) into position #1 in the search queue (new size=2).

% Time for loop #3: 262 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #3, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
% This clause covers 10 positive examples, of which 10 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/294.0 pos, 0.0/0.0 neg]'
%     Score = -37.657532 (regressionFit = 37.657529, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 20 33 49 90 95 124 135 138 185 197
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #4, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-37.657532264001226
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.719788 (regressionFit = 33.719784, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.719788): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]' score=-33.71978776199868
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -33.719789 (regressionFit = 33.719784, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.719789 (regressionFit = 33.719784, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.719789 (regressionFit = 33.719784, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.719789 (regressionFit = 33.719784, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.719789 (regressionFit = 33.719784, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.719789 (regressionFit = 33.719784, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.719789 (regressionFit = 33.719784, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 179.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.719789 (regressionFit = 33.719784, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.719789 (regressionFit = 33.719784, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.719789 (regressionFit = 33.719784, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.709009 (regressionFit = 33.709004, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.709009): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.719789 (regressionFit = 33.719784, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.710295 (regressionFit = 33.710290, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.719789 (regressionFit = 33.719784, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.719789 (regressionFit = 33.719784, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.115.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 248 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #4, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
% This clause covers 214 positive examples, of which 214 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/228.0 pos, 0.0/0.0 neg]'
%     Score = -37.846053 (regressionFit = 37.846051, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Have these 6 positive seeds: 2 39 61 118 153 212
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-37.84605297320847
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.834615 (regressionFit = 3.834612, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 5.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.834615): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 5.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 5.0/228.0 pos, 0.0/0.0 neg]' score=-3.834614985033716
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -3.834616 (regressionFit = 3.834612, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, A).  [covers 5.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.834616 (regressionFit = 3.834612, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, B).  [covers 5.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.834616 (regressionFit = 3.834612, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 5.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.834616 (regressionFit = 3.834612, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 5.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.834616 (regressionFit = 3.834612, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 5.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.834616 (regressionFit = 3.834612, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(D, C), samevenue(D, D).  [covers 5.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.834616 (regressionFit = 3.834612, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordvenue(_, C).  [covers 5.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.834616 (regressionFit = 3.834612, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordvenue(_, C).  [covers 5.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.834106 (regressionFit = 3.834102, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.834106): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.834616 (regressionFit = 3.834612, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 5.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.831982 (regressionFit = 3.831978, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.831982): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.834518 (regressionFit = 3.834514, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.834616 (regressionFit = 3.834612, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 5.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.833130 (regressionFit = 3.833126, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.017.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
Comparing variance: 0.03235233284516412 to score=0.0025 #egs=59.0
Comparing variance: 0.011379827226023253 to score=0.0025 #egs=169.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 59.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.032352)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.032352) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 169.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.011380)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.011380) into the LAST position (#2) in the search queue.

% Time for loop #5: 74 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #5, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% This clause covers 59 positive examples, of which 59 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]'
%     Score = -3.831982 (regressionFit = 3.831978, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 7 10 12 16 19 30 33 36 41 43
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #6, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-3.831982389062613
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906669 (regressionFit = 1.906664, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.906669): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904599 (regressionFit = 1.904594, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.904599): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906669 (regressionFit = 1.906664, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]' score=-1.9045989187813959
%  At # nodes expanded = 2, |OPEN| = 8.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.904600 (regressionFit = 1.904594, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, A).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904600 (regressionFit = 1.904594, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, B).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904600 (regressionFit = 1.904594, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(A, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904600 (regressionFit = 1.904594, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904600 (regressionFit = 1.904594, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904600 (regressionFit = 1.904594, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904600 (regressionFit = 1.904594, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(E, D), sametitle(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904600 (regressionFit = 1.904594, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordtitle(_, D), samevenue(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]' score=-1.9066686465863005
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), author(_, A).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), author(_, B).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordauthor(A, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordauthor(B, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, D), haswordvenue(_, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.750000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, D), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]' score=-1.9066687565863005
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -1.906670 (regressionFit = 1.906664, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, A).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, B).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(B, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, C), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(E, F).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(F, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, C), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904600 (regressionFit = 1.904594, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.899510 (regressionFit = 1.899504, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.899510): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 4.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904600 (regressionFit = 1.904594, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905150 (regressionFit = 1.905144, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 3.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904600 (regressionFit = 1.904594, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904600 (regressionFit = 1.904594, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 2.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904600 (regressionFit = 1.904594, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.902568 (regressionFit = 1.902562, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 11.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.901992 (regressionFit = 1.901986, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 0 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.860000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904600 (regressionFit = 1.904594, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.906670 (regressionFit = 1.906664, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(E, F).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(F, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

***** Warning: #13 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.032.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #6: 122 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #6, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
% This clause covers 10 positive examples, of which 10 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/169.0 pos, 0.0/0.0 neg]'
%     Score = -37.846053 (regressionFit = 37.846051, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 4 8 28 51 65 74 94 111 112 113
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #7, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-37.84605297320847
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.916100 (regressionFit = 1.916097, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.916100): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.912292 (regressionFit = 1.912288, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.912292): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.011.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #7: 49 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #7, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 46.0/169.0 pos, 0.0/0.0 neg]
% This clause covers 46 positive examples, of which 46 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #9 @ 13:55:36 5/11/17.  [Using 14,148,224 memory cells.]  %%%%%


% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( author(E, A), title(E, D) )
%   | | then return 0.20602182475755398;  // std dev = 0.027, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | | then return 0.10819463946017165;  // std dev = 4.744, 214.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=188 */
%   | | | else return 0.09374590286938231;  // std dev = 3.347, 80.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=66 */
%   | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | then if ( author(J, A), venue(J, I) )
%   | | | then return 0.16677833979385062;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.13334424018735366;  // std dev = 1.378, 49.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=47 */
%   | | else if ( haswordauthor(B, K), haswordvenue(L, K) )
%   | | | then return 0.13483321589401936;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return 0.15287916019445782;  // std dev = 0.014, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


% Clauses:

sameauthor(A, B, 0.20602182475755398) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     author(E, A), 
     title(E, D), 
     !. // Clause #1.

sameauthor(A, B, 0.10819463946017165) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(A, E), 
     haswordvenue(F, E), 
     !. // Clause #2.

sameauthor(A, B, 0.09374590286938231) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     !. // Clause #3.

sameauthor(A, B, 0.16677833979385062) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     author(F, A), 
     venue(F, E), 
     !. // Clause #4.

sameauthor(A, B, 0.13334424018735366) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     !. // Clause #5.

sameauthor(A, B, 0.13483321589401936) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     !. // Clause #6.

sameauthor(A, B, 0.15287916019445782) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     !. // Clause #7.

sameauthor(A, B, -0.06842697784420275) :- !. // Clause #8.


% The flattened versions of these clauses:

flattened_sameauthor(a, b, 0.20602182475755398) :-  /* #pos=10 */ 
   haswordauthor(a, uniqueVar125),
   haswordauthor(b, uniqueVar125),
   haswordtitle(uniqueVar126, uniqueVar125),
   author(uniqueVar127, a),
   title(uniqueVar127, uniqueVar126),
   !. // Flattened version of clause #1.

flattened_sameauthor(a, b, 0.10819463946017165) :-  /* #neg=26 #pos=188 */ 
   haswordauthor(a, uniqueVar128),
   haswordauthor(b, uniqueVar128),
   haswordtitle(underscore, uniqueVar128),
   haswordauthor(a, uniqueVar129),
   haswordvenue(underscore, uniqueVar129),
   !. // Flattened version of clause #2.

flattened_sameauthor(a, b, 0.09374590286938231) :-  /* #neg=14 #pos=66 */ 
   haswordauthor(a, uniqueVar130),
   haswordauthor(b, uniqueVar130),
   haswordtitle(underscore, uniqueVar130),
   !. // Flattened version of clause #3.

flattened_sameauthor(a, b, 0.16677833979385062) :-  /* #pos=10 */ 
   haswordauthor(a, uniqueVar131),
   haswordauthor(b, uniqueVar131),
   haswordauthor(a, uniqueVar132),
   haswordvenue(uniqueVar133, uniqueVar132),
   author(uniqueVar134, a),
   venue(uniqueVar134, uniqueVar133),
   !. // Flattened version of clause #4.

flattened_sameauthor(a, b, 0.13334424018735366) :-  /* #neg=2 #pos=47 */ 
   haswordauthor(a, uniqueVar135),
   haswordauthor(b, uniqueVar135),
   haswordauthor(a, uniqueVar136),
   haswordvenue(underscore, uniqueVar136),
   !. // Flattened version of clause #5.

flattened_sameauthor(a, b, 0.13483321589401936) :-  /* #neg=2 #pos=44 */ 
   haswordauthor(a, uniqueVar137),
   haswordauthor(b, uniqueVar137),
   haswordauthor(b, uniqueVar138),
   haswordvenue(underscore, uniqueVar138),
   !. // Flattened version of clause #6.

flattened_sameauthor(a, b, 0.15287916019445782) :-  /* #pos=123 */ 
   haswordauthor(a, uniqueVar139),
   haswordauthor(b, uniqueVar139),
   !. // Flattened version of clause #7.

flattened_sameauthor(underscore, underscore, -0.06842697784420275) :-  /* #neg=22 */ 
   !. // Flattened version of clause #8.


% The unique flattened literals:
%   haswordvenue(underscore, uniqueVar129)
%   haswordauthor(a, uniqueVar128)
%   haswordauthor(a, uniqueVar139)
%   haswordvenue(underscore, uniqueVar136)
%   haswordtitle(uniqueVar126, uniqueVar125)
%   haswordtitle(underscore, uniqueVar128)
%   haswordauthor(b, uniqueVar137)
%   haswordauthor(b, uniqueVar130)
%   haswordauthor(a, uniqueVar136)
%   venue(uniqueVar134, uniqueVar133)
%   haswordvenue(underscore, uniqueVar138)
%   haswordauthor(a, uniqueVar129)
%   author(uniqueVar127, a)
%   haswordauthor(b, uniqueVar139)
%   haswordauthor(a, uniqueVar135)
%   haswordauthor(a, uniqueVar130)
%   haswordauthor(b, uniqueVar128)
%   haswordauthor(a, uniqueVar125)
%   title(uniqueVar127, uniqueVar126)
%   haswordauthor(b, uniqueVar135)
%   haswordvenue(uniqueVar133, uniqueVar132)
%   haswordauthor(b, uniqueVar125)
%   haswordauthor(a, uniqueVar131)
%   haswordauthor(a, uniqueVar132)
%   author(uniqueVar134, a)
%   haswordauthor(b, uniqueVar131)
%   haswordauthor(a, uniqueVar137)
%   haswordtitle(underscore, uniqueVar130)
%   haswordauthor(b, uniqueVar138)

% Saving model in: datasets/Cora/train/models/bRDNs/sameauthor.model.ckpt
% Time taken to learn 9 trees is 17.353 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.011379827226023254
Set score:0.0025
% Only 554 out of 554 converged.
% Kept 488 of the 488 positive examples.
% Kept 66 of the 66 negative examples.
% Dataset size: 554
Computing probabilities
prob time:341 milliseconds
No hidden examples for : sameauthor
Time to build dataset: 345 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06940789267253214
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 7 positive seeds: 62 141 269 342 385 546 547
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = sameauthor(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
% Most-general root: sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'sameauthor(_, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, A), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, A), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(A, _) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, B), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(_, A), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, B), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- author(_, A), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(B, A), venue(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(_, A) :- author(B, A), samebib(B, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), author(_, B).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -37.846524 (regressionFit = 37.846522, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -37.846524): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), haswordauthor(B, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -38.332614 (regressionFit = 38.332612, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -38.439929 (regressionFit = 38.439926, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), author(_, A).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -37.846524 (regressionFit = 37.846522, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, C), haswordauthor(A, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 554.0/554.0 pos, 0.0/0.0 neg]
%     Score = -38.337231 (regressionFit = 38.337229, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 394.0/554.0 pos, 0.0/0.0 neg]
%     Score = -38.441715 (regressionFit = 38.441713, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 292.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
Comparing variance: 0.07114007905431388 to score=0.0025 #egs=532.0
Comparing variance: 1.261617073437678E-18 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 532.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.071140)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.071140) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 124 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #1, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/554.0 pos, 0.0/0.0 neg]
% This clause covers 532 positive examples, of which 532 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]'
%     Score = -37.846524 (regressionFit = 37.846522, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Have these 9 positive seeds: 35 81 226 237 276 303 336 484 503
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-37.84652398689499
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.658441 (regressionFit = 37.658438, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -37.658441): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.774248 (regressionFit = 37.774245, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]' score=-37.65844118796485
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -37.658442 (regressionFit = 37.658438, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.658442 (regressionFit = 37.658438, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.658442 (regressionFit = 37.658438, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.658442 (regressionFit = 37.658438, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.658442 (regressionFit = 37.658438, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.764380 (regressionFit = 37.764376, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.658442 (regressionFit = 37.658438, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]' score=-37.77424797348163
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -37.774249 (regressionFit = 37.774245, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, A).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.774249 (regressionFit = 37.774245, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, B).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.774249 (regressionFit = 37.774245, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.774249 (regressionFit = 37.774245, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.764380 (regressionFit = 37.764376, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.774249 (regressionFit = 37.774245, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.774249 (regressionFit = 37.774245, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(D, C), samevenue(D, D).  [covers 194.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.658442 (regressionFit = 37.658438, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.774249 (regressionFit = 37.774245, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.658442 (regressionFit = 37.658438, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.774249 (regressionFit = 37.774245, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.658442 (regressionFit = 37.658438, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.726400 (regressionFit = 37.726396, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.774249 (regressionFit = 37.774245, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.823952 (regressionFit = 37.823948, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.658442 (regressionFit = 37.658438, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.731123 (regressionFit = 37.731119, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 378.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.774249 (regressionFit = 37.774245, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 194.0/532.0 pos, 0.0/0.0 neg]
%     Score = -37.826474 (regressionFit = 37.826470, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 283.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.071.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
Comparing variance: 0.11126054062796842 to score=0.0025 #egs=304.0
Comparing variance: 0.01682120086430895 to score=0.0025 #egs=228.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 304.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.111261)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.111261) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 228.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.016821)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/532.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.016821) into the LAST position (#2) in the search queue.

% Time for loop #2: 240 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #2, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/532.0 pos, 0.0/0.0 neg]
% This clause covers 304 positive examples, of which 304 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]'
%     Score = -37.658441 (regressionFit = 37.658438, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 2 51 77 97 115 135 151 161 172 211
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #3, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-37.65844118796485
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823104 (regressionFit = 33.823100, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.823104): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]' score=-33.82310445853838
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -33.823106 (regressionFit = 33.823100, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823106 (regressionFit = 33.823100, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823105 (regressionFit = 33.823100, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823105 (regressionFit = 33.823100, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823105 (regressionFit = 33.823100, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823105 (regressionFit = 33.823100, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823105 (regressionFit = 33.823100, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823105 (regressionFit = 33.823100, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823106 (regressionFit = 33.823100, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.747530 (regressionFit = 33.747525, penalties=4.950000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.747530): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823106 (regressionFit = 33.823100, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.748494 (regressionFit = 33.748489, penalties=4.950000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, B), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823105 (regressionFit = 33.823100, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.805025 (regressionFit = 33.805020, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823105 (regressionFit = 33.823100, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.804655 (regressionFit = 33.804650, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 224.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823105 (regressionFit = 33.823100, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 304.0/304.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%     Score = -33.823105 (regressionFit = 33.823100, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 189.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.111.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
Comparing variance: 5.727440823642404E-5 to score=0.0025 #egs=10.0
Comparing variance: 0.11478555113261618 to score=0.0025 #egs=294.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 294.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.114786)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/304.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.114786) into position #1 in the search queue (new size=2).

% Time for loop #3: 310 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #3, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 10.0/304.0 pos, 0.0/0.0 neg]
% This clause covers 10 positive examples, of which 10 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 304.0/294.0 pos, 0.0/0.0 neg]'
%     Score = -37.658441 (regressionFit = 37.658438, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Have these 9 positive seeds: 29 39 150 153 175 254 267 273 276
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #4, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-37.65844118796485
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.744426 (regressionFit = 33.744422, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.744426): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]' score=-33.74442614301414
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -33.744427 (regressionFit = 33.744422, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.744427 (regressionFit = 33.744422, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.744427 (regressionFit = 33.744422, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.744427 (regressionFit = 33.744422, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.744427 (regressionFit = 33.744422, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.744427 (regressionFit = 33.744422, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.744427 (regressionFit = 33.744422, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.744427 (regressionFit = 33.744422, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 179.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.744427 (regressionFit = 33.744422, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.744427 (regressionFit = 33.744422, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.744427 (regressionFit = 33.744422, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.735896 (regressionFit = 33.735891, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.735896): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.744427 (regressionFit = 33.744422, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.735606 (regressionFit = 33.735601, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33.735606): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.744427 (regressionFit = 33.744422, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 294.0/294.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 294.0/294.0 pos, 0.0/0.0 neg]
%     Score = -33.744427 (regressionFit = 33.744422, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 179.0/294.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.115.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 257 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #4, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 214.0/294.0 pos, 0.0/0.0 neg]
% This clause covers 214 positive examples, of which 214 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 532.0/228.0 pos, 0.0/0.0 neg]'
%     Score = -37.846524 (regressionFit = 37.846522, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 10 15 66 73 80 84 131 141 146 155
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-37.84652398689499
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.833647 (regressionFit = 3.833643, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.833647): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.831616 (regressionFit = 3.831612, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.831616): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.834356 (regressionFit = 3.834352, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 74.0/228.0 pos, 0.0/0.0 neg]
%     Score = -3.833055 (regressionFit = 3.833051, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.017.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
Comparing variance: 0.032342559062200224 to score=0.0025 #egs=59.0
Comparing variance: 0.011381073251047575 to score=0.0025 #egs=169.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 59.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.032343)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.032343) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 169.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.011381)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/228.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.011381) into the LAST position (#2) in the search queue.

% Time for loop #5: 102 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #5, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/228.0 pos, 0.0/0.0 neg]
% This clause covers 59 positive examples, of which 59 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]'
%     Score = -3.831616 (regressionFit = 3.831612, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 3 12 16 19 22 23 26 30 34 35
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #6, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-3.8316163140968533
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.903279 (regressionFit = 1.903274, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.903279): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905839 (regressionFit = 1.905834, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]' score=-1.9032787011719214
%  At # nodes expanded = 2, |OPEN| = 7.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.903280 (regressionFit = 1.903274, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, A).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.903280 (regressionFit = 1.903274, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), author(_, B).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.903280 (regressionFit = 1.903274, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(A, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.903280 (regressionFit = 1.903274, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.903280 (regressionFit = 1.903274, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.903280 (regressionFit = 1.903274, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.903280 (regressionFit = 1.903274, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordtitle(E, D), sametitle(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.903280 (regressionFit = 1.903274, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordtitle(_, D), samevenue(E, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]' score=-1.9058389587897877
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -1.905840 (regressionFit = 1.905834, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, A).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905840 (regressionFit = 1.905834, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), author(_, B).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905840 (regressionFit = 1.905834, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(A, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905840 (regressionFit = 1.905834, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordauthor(B, _).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905840 (regressionFit = 1.905834, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905840 (regressionFit = 1.905834, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, C), haswordvenue(_, D).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905840 (regressionFit = 1.905834, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, C), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905840 (regressionFit = 1.905834, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(E, F).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905840 (regressionFit = 1.905834, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, C), samevenue(F, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905840 (regressionFit = 1.905834, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, C), samevenue(E, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.903280 (regressionFit = 1.903274, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905840 (regressionFit = 1.905834, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, A), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.900805 (regressionFit = 1.900799, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.900805): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, A), venue(F, E).  [covers 10.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, A), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, A), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.903280 (regressionFit = 1.903274, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905840 (regressionFit = 1.905834, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(_, B), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.904411 (regressionFit = 1.904405, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(F, B), venue(F, E).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), venue(E, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), author(E, B), samebib(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), author(_, B), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.903280 (regressionFit = 1.903274, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.903280 (regressionFit = 1.903274, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905840 (regressionFit = 1.905834, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(A, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.903280 (regressionFit = 1.903274, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905840 (regressionFit = 1.905834, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.900523 (regressionFit = 1.900517, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.900523): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordauthor(B, _), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.903280 (regressionFit = 1.903274, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905840 (regressionFit = 1.905834, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(_, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(E, F).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), haswordvenue(F, D), samevenue(F, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E).  [covers 59.0/59.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), author(_, A).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), author(_, B).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), haswordauthor(A, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), haswordauthor(B, _).  [covers 59.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.903280 (regressionFit = 1.903274, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), haswordtitle(_, D).  [covers 51.0/59.0 pos, 0.0/0.0 neg]
%     Score = -1.905840 (regressionFit = 1.905834, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), haswordvenue(_, C).  [covers 5.0/59.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(E, D), samevenue(E, E), haswordvenue(_, D).  [covers 59.0/59.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.032.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #6: 157 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #6, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 13.0/59.0 pos, 0.0/0.0 neg]
% This clause covers 13 positive examples, of which 13 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 228.0/169.0 pos, 0.0/0.0 neg]'
%     Score = -37.846524 (regressionFit = 37.846522, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Have these 7 positive seeds: 58 62 76 77 83 159 164
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #7, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-37.84652398689499
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.921537 (regressionFit = 1.921533, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 23.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.921537): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 23.0/169.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 169.0/169.0 pos, 0.0/0.0 neg]
%     Score = -1.916030 (regressionFit = 1.916026, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.916030): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.011.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #7: 57 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #7, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 63.0/169.0 pos, 0.0/0.0 neg]
% This clause covers 63 positive examples, of which 63 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #10 @ 13:55:38 5/11/17.  [Using 14,177,936 memory cells.]  %%%%%


% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( author(E, A), title(E, D) )
%   | | then return 0.17436411092059528;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | | then return 0.08970213128804166;  // std dev = 4.738, 214.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=188 */
%   | | | else return 0.07574026659441778;  // std dev = 3.359, 80.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=66 */
%   | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | then if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | then return 0.1415436727889379;  // std dev = 0.019, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.11399217983287105;  // std dev = 1.378, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | else if ( haswordauthor(B, L), haswordtitle(M, L) )
%   | | | then return 0.12059362188573336;  // std dev = 1.384, 63.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=61 */
%   | | | else return 0.13425577463591265;  // std dev = 0.038, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else return -0.06419184008202622;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


% Clauses:

sameauthor(A, B, 0.17436411092059528) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     author(E, A), 
     title(E, D), 
     !. // Clause #1.

sameauthor(A, B, 0.08970213128804166) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     !. // Clause #2.

sameauthor(A, B, 0.07574026659441778) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     !. // Clause #3.

sameauthor(A, B, 0.1415436727889379) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     haswordauthor(B, F), 
     haswordvenue(G, F), 
     !. // Clause #4.

sameauthor(A, B, 0.11399217983287105) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     !. // Clause #5.

sameauthor(A, B, 0.12059362188573336) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordtitle(E, D), 
     !. // Clause #6.

sameauthor(A, B, 0.13425577463591265) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     !. // Clause #7.

sameauthor(A, B, -0.06419184008202622) :- !. // Clause #8.


% The flattened versions of these clauses:

flattened_sameauthor(a, b, 0.17436411092059528) :-  /* #pos=10 */ 
   haswordauthor(a, uniqueVar140),
   haswordauthor(b, uniqueVar140),
   haswordtitle(uniqueVar141, uniqueVar140),
   author(uniqueVar142, a),
   title(uniqueVar142, uniqueVar141),
   !. // Flattened version of clause #1.

flattened_sameauthor(a, b, 0.08970213128804166) :-  /* #neg=26 #pos=188 */ 
   haswordauthor(a, uniqueVar143),
   haswordauthor(b, uniqueVar143),
   haswordtitle(underscore, uniqueVar143),
   haswordauthor(b, uniqueVar144),
   haswordvenue(underscore, uniqueVar144),
   !. // Flattened version of clause #2.

flattened_sameauthor(a, b, 0.07574026659441778) :-  /* #neg=14 #pos=66 */ 
   haswordauthor(a, uniqueVar145),
   haswordauthor(b, uniqueVar145),
   haswordtitle(underscore, uniqueVar145),
   !. // Flattened version of clause #3.

flattened_sameauthor(a, b, 0.1415436727889379) :-  /* #pos=13 */ 
   haswordauthor(a, uniqueVar146),
   haswordauthor(b, uniqueVar146),
   haswordauthor(a, uniqueVar147),
   haswordvenue(underscore, uniqueVar147),
   haswordauthor(b, uniqueVar148),
   haswordvenue(underscore, uniqueVar148),
   !. // Flattened version of clause #4.

flattened_sameauthor(a, b, 0.11399217983287105) :-  /* #neg=2 #pos=44 */ 
   haswordauthor(a, uniqueVar149),
   haswordauthor(b, uniqueVar149),
   haswordauthor(a, uniqueVar150),
   haswordvenue(underscore, uniqueVar150),
   !. // Flattened version of clause #5.

flattened_sameauthor(a, b, 0.12059362188573336) :-  /* #neg=2 #pos=61 */ 
   haswordauthor(a, uniqueVar151),
   haswordauthor(b, uniqueVar151),
   haswordauthor(b, uniqueVar152),
   haswordtitle(underscore, uniqueVar152),
   !. // Flattened version of clause #6.

flattened_sameauthor(a, b, 0.13425577463591265) :-  /* #pos=106 */ 
   haswordauthor(a, uniqueVar153),
   haswordauthor(b, uniqueVar153),
   !. // Flattened version of clause #7.

flattened_sameauthor(underscore, underscore, -0.06419184008202622) :-  /* #neg=22 */ 
   !. // Flattened version of clause #8.


% The unique flattened literals:
%   haswordauthor(b, uniqueVar148)
%   haswordauthor(a, uniqueVar146)
%   haswordauthor(a, uniqueVar149)
%   haswordauthor(a, uniqueVar147)
%   title(uniqueVar142, uniqueVar141)
%   haswordvenue(underscore, uniqueVar144)
%   haswordtitle(uniqueVar141, uniqueVar140)
%   haswordvenue(underscore, uniqueVar150)
%   haswordauthor(b, uniqueVar149)
%   haswordauthor(b, uniqueVar153)
%   haswordauthor(b, uniqueVar146)
%   haswordtitle(underscore, uniqueVar143)
%   haswordauthor(b, uniqueVar151)
%   haswordtitle(underscore, uniqueVar152)
%   haswordauthor(a, uniqueVar153)
%   author(uniqueVar142, a)
%   haswordauthor(a, uniqueVar145)
%   haswordvenue(underscore, uniqueVar147)
%   haswordauthor(b, uniqueVar140)
%   haswordauthor(a, uniqueVar151)
%   haswordauthor(b, uniqueVar143)
%   haswordauthor(a, uniqueVar150)
%   haswordauthor(b, uniqueVar144)
%   haswordauthor(b, uniqueVar145)
%   haswordauthor(a, uniqueVar140)
%   haswordvenue(underscore, uniqueVar148)
%   haswordauthor(a, uniqueVar143)
%   haswordauthor(b, uniqueVar152)
%   haswordtitle(underscore, uniqueVar145)

% Saving model in: datasets/Cora/train/models/bRDNs/sameauthor.model.ckpt
% Saving model in: datasets/Cora/train/models/bRDNs/sameauthor.model


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for sameauthor.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).
stepLength_tree4(1.0).
stepLength_tree5(1.0).
stepLength_tree6(1.0).
stepLength_tree7(1.0).
stepLength_tree8(1.0).
stepLength_tree9(1.0).
stepLength_tree10(1.0).

logPrior(-1.8).
sameauthor(D, E, Total) :- // A general accessor. 
   sameauthor(D, E, 1000000, Total), !.
sameauthor(D, E, Total) :- waitHere("This should not fail", sameauthor(D, E, Total)).

sameauthor(D, E, TreesToUse, Total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(LogPrior),
   getScore_sameauthor_tree1(D, E, TreesToUse, Total1),
   getScore_sameauthor_tree2(D, E, TreesToUse, Total2),
   getScore_sameauthor_tree3(D, E, TreesToUse, Total3),
   getScore_sameauthor_tree4(D, E, TreesToUse, Total4),
   getScore_sameauthor_tree5(D, E, TreesToUse, Total5),
   getScore_sameauthor_tree6(D, E, TreesToUse, Total6),
   getScore_sameauthor_tree7(D, E, TreesToUse, Total7),
   getScore_sameauthor_tree8(D, E, TreesToUse, Total8),
   getScore_sameauthor_tree9(D, E, TreesToUse, Total9),
   getScore_sameauthor_tree10(D, E, TreesToUse, Total10),
   Total is LogPrior + Total1 + Total2 + Total3 + Total4 + Total5 + Total6 + Total7 + Total8 + Total9 + Total10,
   !.
sameauthor(D, E, TreesToUse, Total) :- waitHere("This should not fail", sameauthor(D, E, TreesToUse, Total)).

getScore_sameauthor_tree1(D, E, TreesToUse, 0.0) :- 1 > TreesToUse, !.
getScore_sameauthor_tree1(D, E, TreesToUse, Total1) :- sameauthor_tree1(D, E, Total), stepLength_tree1(StepLen), Total1 is Total * StepLen.

getScore_sameauthor_tree2(D, E, TreesToUse, 0.0) :- 2 > TreesToUse, !.
getScore_sameauthor_tree2(D, E, TreesToUse, Total2) :- sameauthor_tree2(D, E, Total), stepLength_tree2(StepLen), Total2 is Total * StepLen.

getScore_sameauthor_tree3(D, E, TreesToUse, 0.0) :- 3 > TreesToUse, !.
getScore_sameauthor_tree3(D, E, TreesToUse, Total3) :- sameauthor_tree3(D, E, Total), stepLength_tree3(StepLen), Total3 is Total * StepLen.

getScore_sameauthor_tree4(D, E, TreesToUse, 0.0) :- 4 > TreesToUse, !.
getScore_sameauthor_tree4(D, E, TreesToUse, Total4) :- sameauthor_tree4(D, E, Total), stepLength_tree4(StepLen), Total4 is Total * StepLen.

getScore_sameauthor_tree5(D, E, TreesToUse, 0.0) :- 5 > TreesToUse, !.
getScore_sameauthor_tree5(D, E, TreesToUse, Total5) :- sameauthor_tree5(D, E, Total), stepLength_tree5(StepLen), Total5 is Total * StepLen.

getScore_sameauthor_tree6(D, E, TreesToUse, 0.0) :- 6 > TreesToUse, !.
getScore_sameauthor_tree6(D, E, TreesToUse, Total6) :- sameauthor_tree6(D, E, Total), stepLength_tree6(StepLen), Total6 is Total * StepLen.

getScore_sameauthor_tree7(D, E, TreesToUse, 0.0) :- 7 > TreesToUse, !.
getScore_sameauthor_tree7(D, E, TreesToUse, Total7) :- sameauthor_tree7(D, E, Total), stepLength_tree7(StepLen), Total7 is Total * StepLen.

getScore_sameauthor_tree8(D, E, TreesToUse, 0.0) :- 8 > TreesToUse, !.
getScore_sameauthor_tree8(D, E, TreesToUse, Total8) :- sameauthor_tree8(D, E, Total), stepLength_tree8(StepLen), Total8 is Total * StepLen.

getScore_sameauthor_tree9(D, E, TreesToUse, 0.0) :- 9 > TreesToUse, !.
getScore_sameauthor_tree9(D, E, TreesToUse, Total9) :- sameauthor_tree9(D, E, Total), stepLength_tree9(StepLen), Total9 is Total * StepLen.

getScore_sameauthor_tree10(D, E, TreesToUse, 0.0) :- 10 > TreesToUse, !.
getScore_sameauthor_tree10(D, E, TreesToUse, Total10) :- sameauthor_tree10(D, E, Total), stepLength_tree10(StepLen), Total10 is Total * StepLen.

flattenedLiteralsInThisSetOfTrees(sameauthor, 320, [
   haswordauthor(a, uniqueVar146),
   haswordvenue(underscore, uniqueVar144),
   haswordauthor(a, uniqueVar40),
   haswordauthor(b, uniqueVar95),
   haswordauthor(b, uniqueVar35),
   haswordauthor(a, uniqueVar60),
   haswordauthor(b, uniqueVar130),
   haswordvenue(underscore, uniqueVar150),
   haswordvenue(underscore, uniqueVar84),
   haswordauthor(b, uniqueVar81),
   haswordauthor(a, uniqueVar57),
   haswordtitle(underscore, uniqueVar55),
   haswordauthor(b, uniqueVar97),
   haswordauthor(a, uniqueVar100),
   haswordauthor(b, uniqueVar17),
   haswordauthor(b, uniqueVar6),
   haswordauthor(a, uniqueVar86),
   haswordvenue(underscore, uniqueVar105),
   title(uniqueVar127, uniqueVar126),
   haswordauthor(b, uniqueVar47),
   haswordauthor(a, uniqueVar42),
   haswordauthor(a, uniqueVar110),
   haswordauthor(a, uniqueVar69),
   haswordauthor(a, uniqueVar94),
   haswordauthor(a, uniqueVar74),
   haswordtitle(uniqueVar2, uniqueVar3),
   haswordtitle(underscore, uniqueVar100),
   haswordauthor(a, uniqueVar149),
   haswordtitle(underscore, uniqueVar18),
   haswordauthor(b, uniqueVar31),
   haswordauthor(b, uniqueVar45),
   haswordauthor(b, uniqueVar46),
   haswordauthor(b, uniqueVar68),
   haswordauthor(b, uniqueVar1),
   title(uniqueVar52, uniqueVar51),
   haswordauthor(b, uniqueVar137),
   haswordauthor(a, uniqueVar54),
   haswordtitle(uniqueVar141, uniqueVar140),
   author(uniqueVar80, b),
   haswordtitle(underscore, uniqueVar30),
   venue(uniqueVar89, uniqueVar88),
   haswordvenue(underscore, uniqueVar28),
   haswordvenue(underscore, uniqueVar3),
   haswordvenue(underscore, uniqueVar11),
   haswordauthor(b, uniqueVar114),
   haswordauthor(a, uniqueVar37),
   haswordauthor(a, uniqueVar101),
   haswordauthor(b, uniqueVar12),
   haswordauthor(b, uniqueVar103),
   haswordauthor(a, uniqueVar50),
   haswordauthor(a, uniqueVar11),
   haswordtitle(uniqueVar33, uniqueVar32),
   haswordauthor(b, uniqueVar66),
   haswordauthor(b, uniqueVar71),
   haswordauthor(b, uniqueVar144),
   haswordvenue(underscore, uniqueVar121),
   haswordauthor(b, uniqueVar125),
   haswordauthor(a, uniqueVar131),
   haswordauthor(b, uniqueVar32),
   haswordauthor(a, uniqueVar14),
   haswordauthor(a, uniqueVar121),
   haswordtitle(underscore, uniqueVar37),
   haswordauthor(b, uniqueVar83),
   haswordauthor(b, uniqueVar36),
   haswordauthor(a, uniqueVar111),
   haswordauthor(b, uniqueVar22),
   haswordauthor(b, uniqueVar148),
   haswordauthor(a, uniqueVar84),
   haswordvenue(underscore, uniqueVar129),
   haswordauthor(b, uniqueVar102),
   haswordvenue(underscore, uniqueVar136),
   haswordauthor(b, uniqueVar119),
   haswordauthor(a, uniqueVar64),
   haswordauthor(a, uniqueVar108),
   haswordauthor(b, uniqueVar56),
   haswordauthor(b, uniqueVar153),
   haswordtitle(underscore, uniqueVar71),
   venue(uniqueVar134, uniqueVar133),
   haswordauthor(b, uniqueVar72),
   haswordvenue(underscore, uniqueVar63),
   haswordauthor(a, uniqueVar85),
   haswordauthor(a, uniqueVar23),
   haswordauthor(b, uniqueVar65),
   haswordvenue(underscore, uniqueVar57),
   haswordtitle(underscore, uniqueVar143),
   haswordtitle(underscore, uniqueVar68),
   haswordtitle(underscore, uniqueVar152),
   author(uniqueVar142, a),
   haswordauthor(b, uniqueVar18),
   haswordauthor(b, uniqueVar75),
   haswordauthor(a, uniqueVar72),
   haswordauthor(b, uniqueVar92),
   haswordvenue(uniqueVar25, uniqueVar24),
   author(uniqueVar52, a),
   haswordvenue(underscore, uniqueVar17),
   haswordauthor(a, uniqueVar22),
   haswordauthor(b, uniqueVar145),
   haswordauthor(b, uniqueVar120),
   haswordauthor(b, uniqueVar123),
   haswordauthor(b, uniqueVar10),
   haswordvenue(underscore, uniqueVar99),
   haswordtitle(underscore, uniqueVar119),
   haswordvenue(underscore, uniqueVar104),
   haswordauthor(a, uniqueVar132),
   haswordauthor(b, uniqueVar152),
   haswordtitle(underscore, uniqueVar66),
   author(uniqueVar134, a),
   haswordauthor(a, uniqueVar87),
   haswordauthor(a, uniqueVar4),
   haswordauthor(a, uniqueVar117),
   haswordauthor(b, uniqueVar138),
   haswordvenue(underscore, uniqueVar21),
   author(uniqueVar26, a),
   haswordauthor(b, uniqueVar53),
   haswordtitle(uniqueVar48, uniqueVar47),
   haswordvenue(underscore, uniqueVar43),
   haswordtitle(underscore, uniqueVar81),
   haswordauthor(a, uniqueVar128),
   haswordtitle(underscore, uniqueVar39),
   haswordauthor(a, uniqueVar41),
   author(uniqueVar49, b),
   haswordauthor(a, uniqueVar124),
   haswordauthor(b, uniqueVar149),
   haswordvenue(underscore, uniqueVar138),
   haswordauthor(a, uniqueVar76),
   haswordauthor(b, uniqueVar106),
   author(uniqueVar113, b),
   haswordtitle(uniqueVar96, uniqueVar95),
   haswordauthor(a, uniqueVar67),
   haswordtitle(uniqueVar96, uniqueVar97),
   haswordauthor(a, uniqueVar29),
   haswordvenue(underscore, uniqueVar147),
   haswordvenue(underscore, uniqueVar19),
   haswordauthor(b, uniqueVar116),
   haswordauthor(b, uniqueVar140),
   haswordauthor(a, uniqueVar98),
   haswordauthor(a, uniqueVar122),
   haswordauthor(a, uniqueVar151),
   haswordauthor(b, uniqueVar143),
   haswordauthor(b, uniqueVar39),
   haswordvenue(underscore, uniqueVar75),
   haswordtitle(uniqueVar16, uniqueVar15),
   haswordauthor(a, uniqueVar107),
   venue(uniqueVar26, uniqueVar25),
   haswordtitle(underscore, uniqueVar53),
   haswordauthor(a, uniqueVar1),
   haswordauthor(a, uniqueVar8),
   haswordauthor(a, uniqueVar55),
   haswordtitle(underscore, uniqueVar145),
   haswordauthor(b, uniqueVar63),
   haswordtitle(underscore, uniqueVar102),
   haswordvenue(underscore, uniqueVar5),
   haswordauthor(b, uniqueVar13),
   haswordtitle(underscore, uniqueVar77),
   haswordvenue(underscore, uniqueVar107),
   haswordtitle(underscore, uniqueVar20),
   title(uniqueVar142, uniqueVar141),
   haswordauthor(a, uniqueVar35),
   haswordtitle(uniqueVar126, uniqueVar125),
   haswordauthor(a, uniqueVar83),
   haswordauthor(a, uniqueVar136),
   haswordauthor(b, uniqueVar100),
   haswordauthor(b, uniqueVar40),
   haswordauthor(a, uniqueVar129),
   haswordauthor(b, uniqueVar146),
   haswordauthor(a, uniqueVar6),
   haswordauthor(a, uniqueVar95),
   haswordtitle(underscore, uniqueVar116),
   haswordauthor(b, uniqueVar99),
   haswordvenue(underscore, uniqueVar73),
   haswordauthor(a, uniqueVar81),
   haswordvenue(underscore, uniqueVar101),
   haswordauthor(b, uniqueVar42),
   haswordauthor(a, uniqueVar130),
   haswordauthor(b, uniqueVar111),
   haswordauthor(a, uniqueVar125),
   haswordauthor(a, uniqueVar104),
   haswordauthor(b, uniqueVar37),
   haswordauthor(b, uniqueVar115),
   haswordauthor(b, uniqueVar59),
   haswordauthor(a, uniqueVar114),
   haswordtitle(uniqueVar62, uniqueVar63),
   haswordvenue(underscore, uniqueVar67),
   haswordvenue(uniqueVar88, uniqueVar87),
   haswordvenue(underscore, uniqueVar118),
   haswordvenue(underscore, uniqueVar38),
   haswordtitle(underscore, uniqueVar85),
   haswordvenue(underscore, uniqueVar70),
   haswordauthor(a, uniqueVar116),
   haswordauthor(b, uniqueVar82),
   haswordauthor(b, uniqueVar60),
   haswordauthor(b, uniqueVar61),
   haswordauthor(b, uniqueVar19),
   haswordauthor(a, uniqueVar32),
   haswordauthor(b, uniqueVar58),
   haswordauthor(a, uniqueVar137),
   haswordtitle(underscore, uniqueVar130),
   haswordtitle(uniqueVar16, uniqueVar17),
   haswordvenue(underscore, uniqueVar59),
   haswordauthor(a, uniqueVar28),
   haswordauthor(b, uniqueVar44),
   haswordtitle(underscore, uniqueVar83),
   haswordauthor(b, uniqueVar90),
   haswordauthor(b, uniqueVar54),
   title(uniqueVar113, uniqueVar112),
   haswordauthor(a, uniqueVar77),
   haswordauthor(b, uniqueVar9),
   haswordauthor(a, uniqueVar3),
   haswordauthor(b, uniqueVar50),
   haswordauthor(b, uniqueVar29),
   haswordtitle(underscore, uniqueVar22),
   haswordauthor(b, uniqueVar27),
   haswordauthor(a, uniqueVar92),
   haswordvenue(underscore, uniqueVar123),
   haswordauthor(a, uniqueVar20),
   haswordauthor(a, uniqueVar103),
   author(uniqueVar127, a),
   haswordauthor(b, uniqueVar139),
   haswordauthor(a, uniqueVar91),
   haswordvenue(underscore, uniqueVar91),
   venue(uniqueVar80, uniqueVar79),
   haswordauthor(b, uniqueVar151),
   title(uniqueVar49, uniqueVar48),
   haswordtitle(uniqueVar51, uniqueVar50),
   haswordauthor(a, uniqueVar24),
   haswordtitle(underscore, uniqueVar114),
   haswordauthor(a, uniqueVar15),
   haswordauthor(b, uniqueVar74),
   haswordauthor(b, uniqueVar135),
   haswordauthor(b, uniqueVar30),
   haswordauthor(b, uniqueVar4),
   haswordtitle(uniqueVar112, uniqueVar111),
   haswordauthor(b, uniqueVar117),
   haswordvenue(underscore, uniqueVar148),
   haswordvenue(underscore, uniqueVar65),
   haswordtitle(uniqueVar62, uniqueVar61),
   haswordtitle(underscore, uniqueVar6),
   haswordtitle(uniqueVar33, uniqueVar34),
   haswordauthor(b, uniqueVar124),
   haswordtitle(underscore, uniqueVar41),
   haswordauthor(a, uniqueVar38),
   haswordauthor(b, uniqueVar34),
   haswordauthor(b, uniqueVar108),
   haswordvenue(underscore, uniqueVar97),
   haswordauthor(b, uniqueVar23),
   haswordauthor(a, uniqueVar18),
   haswordvenue(uniqueVar79, uniqueVar78),
   haswordauthor(b, uniqueVar105),
   haswordtitle(underscore, uniqueVar128),
   haswordauthor(a, uniqueVar7),
   haswordtitle(uniqueVar2, uniqueVar1),
   haswordauthor(b, uniqueVar64),
   haswordauthor(b, uniqueVar122),
   haswordauthor(a, uniqueVar73),
   haswordvenue(underscore, uniqueVar115),
   haswordauthor(a, uniqueVar153),
   haswordvenue(underscore, uniqueVar45),
   haswordauthor(a, uniqueVar56),
   haswordtitle(underscore, uniqueVar4),
   haswordauthor(a, uniqueVar102),
   haswordvenue(underscore, uniqueVar9),
   haswordauthor(a, uniqueVar70),
   haswordvenue(underscore, uniqueVar13),
   haswordauthor(b, uniqueVar14),
   haswordauthor(a, uniqueVar140),
   haswordauthor(a, uniqueVar27),
   haswordvenue(underscore, uniqueVar109),
   haswordauthor(a, uniqueVar21),
   haswordauthor(b, uniqueVar98),
   haswordauthor(a, uniqueVar143),
   haswordauthor(b, uniqueVar7),
   haswordauthor(a, uniqueVar39),
   haswordauthor(a, uniqueVar90),
   haswordauthor(a, uniqueVar118),
   haswordauthor(a, uniqueVar5),
   haswordauthor(a, uniqueVar46),
   haswordauthor(b, uniqueVar131),
   haswordauthor(b, uniqueVar78),
   author(uniqueVar89, a),
   haswordauthor(b, uniqueVar93),
   haswordvenue(underscore, uniqueVar55),
   haswordauthor(a, uniqueVar139),
   haswordauthor(a, uniqueVar147),
   haswordauthor(b, uniqueVar76),
   haswordvenue(underscore, uniqueVar41),
   haswordvenue(underscore, uniqueVar36),
   haswordtitle(underscore, uniqueVar64),
   haswordauthor(b, uniqueVar109),
   haswordauthor(a, uniqueVar66),
   haswordvenue(underscore, uniqueVar93),
   haswordauthor(a, uniqueVar53),
   haswordauthor(a, uniqueVar106),
   haswordauthor(a, uniqueVar135),
   haswordauthor(b, uniqueVar15),
   haswordauthor(a, uniqueVar44),
   haswordauthor(b, uniqueVar110),
   haswordauthor(a, uniqueVar145),
   haswordauthor(b, uniqueVar128),
   haswordauthor(b, uniqueVar85),
   haswordauthor(b, uniqueVar94),
   haswordtitle(underscore, uniqueVar98),
   haswordvenue(underscore, uniqueVar34),
   haswordauthor(b, uniqueVar69),
   haswordauthor(a, uniqueVar150),
   haswordauthor(b, uniqueVar20),
   haswordauthor(a, uniqueVar58),
   haswordvenue(underscore, uniqueVar82),
   haswordauthor(a, uniqueVar10),
   haswordauthor(a, uniqueVar61),
   haswordvenue(uniqueVar133, uniqueVar132),
   haswordauthor(a, uniqueVar12),
   haswordauthor(a, uniqueVar43),
   haswordauthor(a, uniqueVar68),
   haswordauthor(a, uniqueVar31),
   haswordauthor(a, uniqueVar47),
   haswordtitle(underscore, uniqueVar35),
   haswordauthor(b, uniqueVar77),
   haswordauthor(b, uniqueVar86),
   haswordauthor(a, uniqueVar120),
   haswordvenue(underscore, uniqueVar8)]).
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:7.623608574055753
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 118 286 494 596 1233 1265 1544 1993 2064 2144
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = sameauthor(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  sameauthor(_, _).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
% Most-general root: sameauthor(_, _).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'sameauthor(_, _).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- author(_, A).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- author(_, A).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- author(_, A).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(_, A), author(_, A).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, A), author(_, B).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- author(_, A), haswordauthor(A, _).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, A), haswordauthor(B, _).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- author(B, A), venue(B, _).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(A, _) :- author(B, A), samebib(B, B).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- author(_, A).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- author(_, B), author(_, A).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(_, A), author(_, A).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- author(_, B), haswordauthor(A, _).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- author(_, A), haswordauthor(A, _).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- author(B, A), venue(B, _).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  sameauthor(_, A) :- author(B, A), samebib(B, B).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'sameauthor(A, _) :- haswordauthor(A, _).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), author(_, A).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), author(_, B).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -38,254.393207 (regressionFit = 38,254.393205, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 5,320.0/5,540.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -38,254.393207): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 5,320.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, _), haswordauthor(B, _).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -41,986.179210 (regressionFit = 41,986.179207, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 3,940.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -42,226.894790 (regressionFit = 42,226.894787, penalties=2.24E-6) for clause:  sameauthor(A, _) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 2,920.0/5,540.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'sameauthor(_, A) :- haswordauthor(A, _).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), author(_, A).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.3400000000000005E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), author(_, A).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -38,254.393207 (regressionFit = 38,254.393205, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, C), haswordauthor(A, C).  [covers 5,320.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  sameauthor(A, B) :- haswordauthor(B, _), haswordauthor(A, _).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, _), haswordauthor(A, _).  [covers 5,540.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -41,992.460028 (regressionFit = 41,992.460026, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordtitle(_, B).  [covers 3,940.0/5,540.0 pos, 0.0/0.0 neg]
%     Score = -42,229.664320 (regressionFit = 42,229.664318, penalties=2.24E-6) for clause:  sameauthor(_, A) :- haswordauthor(A, B), haswordvenue(_, B).  [covers 2,920.0/5,540.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 5,320.0/5,540.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 5,320.0/5,540.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 5,320.0/5,540.0 pos, 0.0/0.0 neg]
Comparing variance: 7.190675414528498 to score=0.0025 #egs=5320.0
Comparing variance: -2.5837917664003644E-15 to score=0.0025 #egs=220.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 5,320.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-7.190675)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 5,320.0/5,540.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -7.190675) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 1.267 seconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #1, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 5,320.0/5,540.0 pos, 0.0/0.0 neg]
% This clause covers 5320 positive examples, of which 5320 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]'
%     Score = -38,254.393207 (regressionFit = 38,254.393205, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 266 510 806 916 1942 2043 2077 2553 2579 3367
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]' score=-38254.39320722161
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -37,863.816532 (regressionFit = 37,863.816529, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 3,040.0/5,320.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -37,863.816532): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 3,040.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -38,142.473234 (regressionFit = 38,142.473231, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 1,940.0/5,320.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 3,040.0/5,320.0 pos, 0.0/0.0 neg]' score=-37863.816531772085
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -37,863.816533 (regressionFit = 37,863.816529, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 3,040.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -37,863.816533 (regressionFit = 37,863.816529, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 3,040.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -37,863.816533 (regressionFit = 37,863.816529, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 3,040.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -37,863.816533 (regressionFit = 37,863.816529, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 3,040.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -37,863.816533 (regressionFit = 37,863.816529, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 3,040.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -38,126.856839 (regressionFit = 38,126.856835, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 1,890.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -37,863.816533 (regressionFit = 37,863.816529, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 3,040.0/5,320.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C).  [covers 1,940.0/5,320.0 pos, 0.0/0.0 neg]' score=-38142.473233774625
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -38,142.473235 (regressionFit = 38,142.473231, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, A).  [covers 1,940.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -38,142.473235 (regressionFit = 38,142.473231, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), author(_, B).  [covers 1,940.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -38,142.473235 (regressionFit = 38,142.473231, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 1,940.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -38,142.473235 (regressionFit = 38,142.473231, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 1,940.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -38,126.856839 (regressionFit = 38,126.856835, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 1,890.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -38,142.473235 (regressionFit = 38,142.473231, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 1,940.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -38,142.473235 (regressionFit = 38,142.473231, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordvenue(D, C), samevenue(D, D).  [covers 1,940.0/5,320.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -37,863.816533 (regressionFit = 37,863.816529, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordtitle(_, C).  [covers 3,040.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -38,142.473235 (regressionFit = 38,142.473231, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordvenue(_, C).  [covers 1,940.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -37,863.816533 (regressionFit = 37,863.816529, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordtitle(_, C).  [covers 3,040.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -38,142.473235 (regressionFit = 38,142.473231, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordvenue(_, C).  [covers 1,940.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -37,863.816533 (regressionFit = 37,863.816529, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 3,040.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -38,010.566795 (regressionFit = 38,010.566791, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 3,780.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -38,142.473235 (regressionFit = 38,142.473231, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 1,940.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -38,218.811840 (regressionFit = 38,218.811836, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 2,830.0/5,320.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -37,863.816533 (regressionFit = 37,863.816529, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 3,040.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -38,016.908638 (regressionFit = 38,016.908634, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 3,780.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -38,142.473235 (regressionFit = 38,142.473231, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 1,940.0/5,320.0 pos, 0.0/0.0 neg]
%     Score = -38,225.149573 (regressionFit = 38,225.149569, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 2,830.0/5,320.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 3,040.0/5,320.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 3,040.0/5,320.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -7.191.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 3,040.0/5,320.0 pos, 0.0/0.0 neg]
Comparing variance: 11.188487863153238 to score=0.0025 #egs=3040.0
Comparing variance: 1.6889532564676524 to score=0.0025 #egs=2280.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 3,040.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-11.188488)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 3,040.0/5,320.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -11.188488) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 2,280.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-1.688953)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 5,320.0/5,320.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -1.688953) into the LAST position (#2) in the search queue.

% Time for loop #2: 2.176 seconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #2, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 3,040.0/5,320.0 pos, 0.0/0.0 neg]
% This clause covers 3040 positive examples, of which 3040 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]'
%     Score = -37,863.816532 (regressionFit = 37,863.816529, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 239 319 833 1265 1297 1766 1819 2211 2355 2660
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #3, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]' score=-37863.816531772085
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -34,009.607030 (regressionFit = 34,009.607026, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 1,890.0/3,040.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -34,009.607030): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 1,890.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 1,890.0/3,040.0 pos, 0.0/0.0 neg]' score=-34009.607029702005
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -34,009.607031 (regressionFit = 34,009.607026, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 1,890.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -34,009.607031 (regressionFit = 34,009.607026, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 1,890.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -34,009.607031 (regressionFit = 34,009.607026, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 1,890.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -34,009.607031 (regressionFit = 34,009.607026, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 1,890.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -34,009.607031 (regressionFit = 34,009.607026, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 1,890.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -34,009.607031 (regressionFit = 34,009.607026, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 1,890.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -34,009.607031 (regressionFit = 34,009.607026, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 1,890.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -34,009.607031 (regressionFit = 34,009.607026, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 1,890.0/3,040.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -34,009.607031 (regressionFit = 34,009.607026, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 1,890.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -33,883.197785 (regressionFit = 33,883.197780, penalties=4.950000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 100.0/3,040.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33,883.197785): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 100.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -34,009.607031 (regressionFit = 34,009.607026, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 1,890.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -33,885.308463 (regressionFit = 33,885.308458, penalties=4.950000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, B), title(E, D).  [covers 100.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -34,009.607031 (regressionFit = 34,009.607026, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 1,890.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -33,961.852777 (regressionFit = 33,961.852772, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 2,240.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -34,009.607031 (regressionFit = 34,009.607026, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 1,890.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -33,952.246597 (regressionFit = 33,952.246592, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 2,240.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -34,009.607031 (regressionFit = 34,009.607026, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 1,890.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%     Score = -34,009.607031 (regressionFit = 34,009.607026, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 1,890.0/3,040.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 100.0/3,040.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 100.0/3,040.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -11.188.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 100.0/3,040.0 pos, 0.0/0.0 neg]
Comparing variance: 2.6139194289498846E-4 to score=0.0025 #egs=100.0
Comparing variance: 11.524888313335635 to score=0.0025 #egs=2940.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 2,940.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-11.524888)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 3,040.0/3,040.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -11.524888) into position #1 in the search queue (new size=2).

% Time for loop #3: 2.872 seconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #3, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(E, A), title(E, D).  [covers 100.0/3,040.0 pos, 0.0/0.0 neg]
% This clause covers 100 positive examples, of which 100 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 3,040.0/2,940.0 pos, 0.0/0.0 neg]'
%     Score = -37,863.816532 (regressionFit = 37,863.816529, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]

% Have these 9 positive seeds: 531 772 1496 1653 2047 2067 2146 2431 2741
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #4, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]' score=-37863.816531772085
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -33,883.129233 (regressionFit = 33,883.129228, penalties=4.150000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 1,790.0/2,940.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33,883.129233): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 1,790.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 1,790.0/2,940.0 pos, 0.0/0.0 neg]' score=-33883.129232639214
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -33,883.129234 (regressionFit = 33,883.129228, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, A).  [covers 1,790.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -33,883.129234 (regressionFit = 33,883.129228, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), author(_, B).  [covers 1,790.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -33,883.129234 (regressionFit = 33,883.129228, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(A, _).  [covers 1,790.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -33,883.129234 (regressionFit = 33,883.129228, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordauthor(B, _).  [covers 1,790.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -33,883.129234 (regressionFit = 33,883.129228, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordtitle(_, C).  [covers 1,790.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -33,883.129234 (regressionFit = 33,883.129228, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(_, C), haswordvenue(_, C).  [covers 1,790.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -33,883.129234 (regressionFit = 33,883.129228, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordvenue(_, C), sametitle(D, D).  [covers 1,790.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -33,883.129234 (regressionFit = 33,883.129228, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordvenue(D, C), samevenue(D, D).  [covers 1,790.0/2,940.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, A).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), author(_, B).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(A, _).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordauthor(B, _).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordtitle(_, C).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -33,883.129234 (regressionFit = 33,883.129228, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, A), haswordvenue(_, C).  [covers 1,790.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), venue(D, _).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, A), samebib(D, D).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, A), sametitle(D, D).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, A).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), author(_, B).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(A, _).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordauthor(B, _).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordtitle(_, C).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -33,883.129234 (regressionFit = 33,883.129228, penalties=5.2600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(_, B), haswordvenue(_, C).  [covers 1,790.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.160000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), venue(D, _).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), author(D, B), samebib(D, D).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), author(_, B), sametitle(D, D).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, A).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), author(_, B).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, E), haswordtitle(D, E).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordtitle(_, C).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -33,883.129234 (regressionFit = 33,883.129228, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, _), haswordvenue(_, C).  [covers 1,790.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -33,847.978677 (regressionFit = 33,847.978672, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 2,140.0/2,940.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33,847.978677): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 2,140.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(A, _), sametitle(D, D).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, A).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), author(_, B).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.75E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, E), haswordtitle(D, E).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordtitle(_, C).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -33,883.129234 (regressionFit = 33,883.129228, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, _), haswordvenue(_, C).  [covers 1,790.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -33,839.888323 (regressionFit = 33,839.888318, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 2,140.0/2,940.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -33,839.888323): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 2,140.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordauthor(B, _), sametitle(D, D).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, A).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), author(_, B).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(A, _).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordauthor(B, _).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordtitle(_, C).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -33,883.129234 (regressionFit = 33,883.129228, penalties=5.1600000000000006E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(_, C), haswordvenue(_, C).  [covers 1,790.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(_, C), sametitle(D, D).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(D, E).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), haswordtitle(E, C), sametitle(E, D).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordtitle(D, C), sametitle(D, D).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #4, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, A).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), author(_, B).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(A, _).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordauthor(B, _).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordtitle(_, C).  [covers 2,940.0/2,940.0 pos, 0.0/0.0 neg]
%     Score = -33,883.129234 (regressionFit = 33,883.129228, penalties=5.050000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(D, C), sametitle(D, D), haswordvenue(_, C).  [covers 1,790.0/2,940.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 2,140.0/2,940.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 2,140.0/2,940.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -11.525.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 2,140.0/2,940.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 2.222 seconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #4, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordtitle(_, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 2,140.0/2,940.0 pos, 0.0/0.0 neg]
% This clause covers 2140 positive examples, of which 2140 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 5,320.0/2,280.0 pos, 0.0/0.0 neg]'
%     Score = -38,254.393207 (regressionFit = 38,254.393205, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]

% Have these 4 positive seeds: 542 653 1104 1335
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]' score=-38254.39320722161
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%     Score = -3,849.251603 (regressionFit = 3,849.251599, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 740.0/2,280.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3,849.251603): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 740.0/2,280.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 740.0/2,280.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 740.0/2,280.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -1.689.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 740.0/2,280.0 pos, 0.0/0.0 neg]
Comparing variance: 2.6019656255176735 to score=0.0025 #egs=740.0
Comparing variance: 1.2492188544579232 to score=0.0025 #egs=1540.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 740.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-2.601966)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 740.0/2,280.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -2.601966) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 1,540.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-1.249219)
%         ILP node to extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 2,280.0/2,280.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -1.249219) into the LAST position (#2) in the search queue.

% Time for loop #5: 724 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #5, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 740.0/2,280.0 pos, 0.0/0.0 neg]
% This clause covers 740 positive examples, of which 740 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 740.0/740.0 pos, 0.0/0.0 neg]'
%     Score = -3,849.251603 (regressionFit = 3,849.251599, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 740.0/740.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 15 183 316 320 335 371 495 546 554 651
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #6, bodyLen=4] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D).  [covers 740.0/740.0 pos, 0.0/0.0 neg]' score=-3849.2516026982803
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), author(_, A).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), author(_, B).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(A, _).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.960000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -1,914.406382 (regressionFit = 1,914.406377, penalties=5.060000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 510.0/740.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1,914.406382): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 510.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.85E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(E, D), sametitle(E, E).  [covers 740.0/740.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 510.0/740.0 pos, 0.0/0.0 neg]' score=-1914.406381805022
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1,914.406383 (regressionFit = 1,914.406377, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordvenue(_, D), author(_, A).  [covers 510.0/740.0 pos, 0.0/0.0 neg]
%     Score = -1,914.406383 (regressionFit = 1,914.406377, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordvenue(_, D), author(_, B).  [covers 510.0/740.0 pos, 0.0/0.0 neg]
%     Score = -1,914.406383 (regressionFit = 1,914.406377, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordvenue(_, D), haswordauthor(A, _).  [covers 510.0/740.0 pos, 0.0/0.0 neg]
%     Score = -1,914.406383 (regressionFit = 1,914.406377, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordvenue(_, D), haswordauthor(B, _).  [covers 510.0/740.0 pos, 0.0/0.0 neg]
%     Score = -1,914.406383 (regressionFit = 1,914.406377, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordvenue(_, D), haswordtitle(_, D).  [covers 510.0/740.0 pos, 0.0/0.0 neg]
%     Score = -1,914.406383 (regressionFit = 1,914.406377, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordvenue(_, D), haswordvenue(_, D).  [covers 510.0/740.0 pos, 0.0/0.0 neg]
%     Score = -1,914.406383 (regressionFit = 1,914.406377, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(E, D), haswordvenue(_, D), sametitle(E, E).  [covers 510.0/740.0 pos, 0.0/0.0 neg]
%     Score = -1,914.406383 (regressionFit = 1,914.406377, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordvenue(E, D), samevenue(E, E).  [covers 510.0/740.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), author(_, A).  [covers 740.0/740.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), author(_, A), author(_, A).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), author(_, A), author(_, B).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), author(_, A), haswordauthor(A, _).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), author(_, A), haswordauthor(B, _).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), author(_, A), haswordtitle(_, D).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -1,914.406383 (regressionFit = 1,914.406377, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), author(_, A), haswordvenue(_, D).  [covers 510.0/740.0 pos, 0.0/0.0 neg]
%     Score = -1,920.459949 (regressionFit = 1,920.459944, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(E, D), author(F, A), title(F, E).  [covers 60.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), author(E, A), venue(E, _).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), author(E, A), samebib(E, E).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(E, D), author(_, A), sametitle(E, E).  [covers 740.0/740.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), author(_, B).  [covers 740.0/740.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), author(_, B), author(_, A).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), author(_, B), author(_, B).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), author(_, B), haswordauthor(A, _).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), author(_, B), haswordauthor(B, _).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), author(_, B), haswordtitle(_, D).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -1,914.406383 (regressionFit = 1,914.406377, penalties=6.170000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), author(_, B), haswordvenue(_, D).  [covers 510.0/740.0 pos, 0.0/0.0 neg]
%     Score = -1,920.756475 (regressionFit = 1,920.756469, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(E, D), author(F, B), title(F, E).  [covers 40.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.07E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), author(E, B), venue(E, _).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), author(E, B), samebib(E, E).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(E, D), author(_, B), sametitle(E, E).  [covers 740.0/740.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(A, _).  [covers 740.0/740.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(A, _), author(_, A).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(A, _), author(_, B).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(A, _), haswordauthor(A, _).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(A, E), haswordauthor(B, E).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(A, _), haswordauthor(B, _).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -1,916.342431 (regressionFit = 1,916.342425, penalties=5.660000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(E, D), haswordauthor(A, F), haswordtitle(E, F).  [covers 100.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(A, _), haswordtitle(_, D).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -1,914.910574 (regressionFit = 1,914.910568, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(A, E), haswordtitle(_, E).  [covers 140.0/740.0 pos, 0.0/0.0 neg]
%     Score = -1,914.406383 (regressionFit = 1,914.406377, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(A, _), haswordvenue(_, D).  [covers 510.0/740.0 pos, 0.0/0.0 neg]
%     Score = -1,919.275767 (regressionFit = 1,919.275761, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(A, E), haswordvenue(_, E).  [covers 110.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(E, D), haswordauthor(A, _), sametitle(E, E).  [covers 740.0/740.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 740.0/740.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(B, _), author(_, A).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(B, _), author(_, B).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(B, E), haswordauthor(A, E).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(B, _), haswordauthor(A, _).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(B, _), haswordauthor(B, _).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(B, _), haswordtitle(_, D).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.87E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(B, E), haswordtitle(_, E).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -1,914.406383 (regressionFit = 1,914.406377, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(B, _), haswordvenue(_, D).  [covers 510.0/740.0 pos, 0.0/0.0 neg]
%     Score = -1,914.406383 (regressionFit = 1,914.406377, penalties=5.9700000000000004E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordauthor(B, E), haswordvenue(_, E).  [covers 510.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(E, D), haswordauthor(B, _), sametitle(E, E).  [covers 740.0/740.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 740.0/740.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordtitle(_, D), author(_, A).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordtitle(_, D), author(_, B).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordtitle(_, D), haswordauthor(A, _).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordtitle(_, D), haswordauthor(B, _).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.970000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordtitle(_, D), haswordtitle(_, D).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -1,914.406383 (regressionFit = 1,914.406377, penalties=6.070000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 510.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(E, D), haswordtitle(_, D), sametitle(E, E).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(E, D), haswordtitle(F, D), sametitle(E, F).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.760000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(E, D), haswordtitle(F, D), sametitle(F, E).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordtitle(E, D), sametitle(E, E).  [covers 740.0/740.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #6, bodyLen=5] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(E, D), sametitle(E, E).  [covers 740.0/740.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(E, D), sametitle(E, E), author(_, A).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(E, D), sametitle(E, E), author(_, B).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(E, D), sametitle(E, E), haswordauthor(A, _).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(E, D), sametitle(E, E), haswordauthor(B, _).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.8600000000000015E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(E, D), sametitle(E, E), haswordtitle(_, D).  [covers 740.0/740.0 pos, 0.0/0.0 neg]
%     Score = -1,914.406383 (regressionFit = 1,914.406377, penalties=5.9600000000000005E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(E, D), sametitle(E, E), haswordvenue(_, D).  [covers 510.0/740.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 510.0/740.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 510.0/740.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -2.602.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 510.0/740.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #6: 2.674 seconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #6, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordtitle(_, D), haswordvenue(_, D).  [covers 510.0/740.0 pos, 0.0/0.0 neg]
% This clause covers 510 positive examples, of which 510 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 2,280.0/1,540.0 pos, 0.0/0.0 neg]'
%     Score = -38,254.393207 (regressionFit = 38,254.393205, penalties=1.93E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 248 337 390 410 413 538 672 907 1010 1155
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #7, bodyLen=2] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]' score=-38254.39320722161
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.04E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, A).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), author(_, B).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(A, _).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, A), haswordauthor(B, _).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), venue(D, _).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, A), samebib(D, D).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, A).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), author(_, B).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(A, _).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(_, B), haswordauthor(B, _).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), venue(D, _).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.940000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), author(D, B), samebib(D, D).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, A).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), author(_, B).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(A, _).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordauthor(B, D).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, _), haswordauthor(B, _).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -1,908.480041 (regressionFit = 1,908.480037, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 600.0/1,540.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1,908.480041): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordtitle(_, D).  [covers 600.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -1,905.232602 (regressionFit = 1,905.232599, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 480.0/1,540.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1,905.232602): sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 480.0/1,540.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #7, bodyLen=3] 'sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, A).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), author(_, B).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordauthor(A, D).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(A, _).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, _), haswordauthor(B, _).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -1,920.977310 (regressionFit = 1,920.977306, penalties=3.95E-6) for clause:  sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(B, D), haswordvenue(_, D).  [covers 80.0/1,540.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 480.0/1,540.0 pos, 0.0/0.0 neg]

% The best node found: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 480.0/1,540.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -1.249.
% Will extend: sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 480.0/1,540.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #7: 518 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 12

% On cycle #7, the best clause found is:
%      sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C), haswordauthor(A, D), haswordvenue(_, D).  [covers 480.0/1,540.0 pos, 0.0/0.0 neg]
% This clause covers 480 positive examples, of which 480 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:55:51 5/11/17.  [Using 14,095,592 memory cells.]  %%%%%


% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( author(E, A), title(E, D) )
%   | | then return 4.282657871490724;  // std dev = 0.162, 100.000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | | then return 3.1983087599992217;  // std dev = 150.117, 2,140.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=1,880 */
%   | | | else return 2.9256734623297054;  // std dev = 106.324, 800.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=660 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return 3.5899457260839465;  // std dev = 43.748, 510.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=490 */
%   | | | else return 3.8539508434174246;  // std dev = 0.739, 230.000 (wgt'ed) examples reached here.  /* #pos=230 */
%   | | else if ( haswordauthor(A, K), haswordvenue(L, K) )
%   | | | then return 3.564741138103386;  // std dev = 43.640, 480.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=460 */
%   | | | else return 3.8017844490710186;  // std dev = 0.909, 1,060.000 (wgt'ed) examples reached here.  /* #pos=1,060 */
%   else return -0.9437262371086408;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */


% Clauses:

sameauthor(A, B, 4.282657871490724) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     author(E, A), 
     title(E, D), 
     !. // Clause #1.

sameauthor(A, B, 3.1983087599992217) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     !. // Clause #2.

sameauthor(A, B, 2.9256734623297054) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     !. // Clause #3.

sameauthor(A, B, 3.5899457260839465) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordtitle(E, D), 
     haswordvenue(F, D), 
     !. // Clause #4.

sameauthor(A, B, 3.8539508434174246) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordtitle(E, D), 
     !. // Clause #5.

sameauthor(A, B, 3.564741138103386) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     !. // Clause #6.

sameauthor(A, B, 3.8017844490710186) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     !. // Clause #7.

sameauthor(A, B, -0.9437262371086408) :- !. // Clause #8.


% The flattened versions of these clauses:

flattened_sameauthor(a, b, 4.282657871490724) :-  /* #pos=100 */ 
   haswordauthor(a, uniqueVar154),
   haswordauthor(b, uniqueVar154),
   haswordtitle(uniqueVar155, uniqueVar154),
   author(uniqueVar156, a),
   title(uniqueVar156, uniqueVar155),
   !. // Flattened version of clause #1.

flattened_sameauthor(a, b, 3.1983087599992217) :-  /* #neg=260 #pos=1,880 */ 
   haswordauthor(a, uniqueVar157),
   haswordauthor(b, uniqueVar157),
   haswordtitle(underscore, uniqueVar157),
   haswordauthor(b, uniqueVar158),
   haswordvenue(underscore, uniqueVar158),
   !. // Flattened version of clause #2.

flattened_sameauthor(a, b, 2.9256734623297054) :-  /* #neg=140 #pos=660 */ 
   haswordauthor(a, uniqueVar159),
   haswordauthor(b, uniqueVar159),
   haswordtitle(underscore, uniqueVar159),
   !. // Flattened version of clause #3.

flattened_sameauthor(a, b, 3.5899457260839465) :-  /* #neg=20 #pos=490 */ 
   haswordauthor(a, uniqueVar160),
   haswordauthor(b, uniqueVar160),
   haswordauthor(b, uniqueVar161),
   haswordtitle(underscore, uniqueVar161),
   haswordvenue(underscore, uniqueVar161),
   !. // Flattened version of clause #4.

flattened_sameauthor(a, b, 3.8539508434174246) :-  /* #pos=230 */ 
   haswordauthor(a, uniqueVar162),
   haswordauthor(b, uniqueVar162),
   haswordauthor(b, uniqueVar163),
   haswordtitle(underscore, uniqueVar163),
   !. // Flattened version of clause #5.

flattened_sameauthor(a, b, 3.564741138103386) :-  /* #neg=20 #pos=460 */ 
   haswordauthor(a, uniqueVar164),
   haswordauthor(b, uniqueVar164),
   haswordauthor(a, uniqueVar165),
   haswordvenue(underscore, uniqueVar165),
   !. // Flattened version of clause #6.

flattened_sameauthor(a, b, 3.8017844490710186) :-  /* #pos=1,060 */ 
   haswordauthor(a, uniqueVar166),
   haswordauthor(b, uniqueVar166),
   !. // Flattened version of clause #7.

flattened_sameauthor(underscore, underscore, -0.9437262371086408) :-  /* #neg=220 */ 
   !. // Flattened version of clause #8.


% The unique flattened literals:
%   author(uniqueVar156, a)
%   haswordauthor(b, uniqueVar158)
%   haswordauthor(b, uniqueVar157)
%   haswordtitle(underscore, uniqueVar163)
%   haswordauthor(a, uniqueVar157)
%   haswordauthor(b, uniqueVar159)
%   haswordauthor(a, uniqueVar164)
%   haswordauthor(a, uniqueVar154)
%   haswordauthor(b, uniqueVar163)
%   haswordtitle(underscore, uniqueVar159)
%   haswordauthor(b, uniqueVar166)
%   haswordtitle(uniqueVar155, uniqueVar154)
%   haswordauthor(a, uniqueVar166)
%   haswordvenue(underscore, uniqueVar161)
%   haswordauthor(a, uniqueVar165)
%   haswordvenue(underscore, uniqueVar165)
%   haswordauthor(b, uniqueVar162)
%   haswordauthor(b, uniqueVar154)
%   haswordvenue(underscore, uniqueVar158)
%   haswordauthor(b, uniqueVar161)
%   title(uniqueVar156, uniqueVar155)
%   haswordtitle(underscore, uniqueVar157)
%   haswordauthor(a, uniqueVar162)
%   haswordauthor(b, uniqueVar160)
%   haswordtitle(underscore, uniqueVar161)
%   haswordauthor(b, uniqueVar164)
%   haswordauthor(a, uniqueVar159)
%   haswordauthor(a, uniqueVar160)

% Time taken to learn model for 'sameauthor': 31.886 seconds.
% Saving model in: datasets/Cora/train/models/bRDNs/sameauthor.model
cached groundings hit: 0
Misses: 0

% Total learning time (10 trees): 32.923 seconds.
