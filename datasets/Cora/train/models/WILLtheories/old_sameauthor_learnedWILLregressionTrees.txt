usePrologVariables: true.

% maxTreeDepthInNodes                 = 3
% maxTreeDepthInLiterals              = 12
% maxNumberOfLiteralsAtAnInteriorNode = 2
% maxFreeBridgersInBody               = 1
% maxNumberOfClauses                  = 12
% maxNodesToConsider                  = 10
% maxNodesToCreate                    = 10,000
% maxAcceptableNodeScoreToStop        = 0.003
% negPosRatio                         = 2.000
% testNegPosRatio                     = -1.000
% # of pos examples                   = 554
% # of neg examples                   = 0



%%%%%  WILL-Produced Tree #1 @ 8:54:13 5/11/17.  [Using 13,665,200 memory cells.]  %%%%%

% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( haswordtitle(D, E) )
%   | | | then return 0.7268358037863779;  // std dev = 4.752, 198.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=172 */
%   | | | else return 0.8581489350995118;  // std dev = 1.46e-07, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | | then return 0.7711924133603816;  // std dev = 1.351, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0.6476226193100387;  // std dev = 3.078, 57.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=45 */
%   | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | then if ( haswordauthor(B, K), haswordvenue(L, K) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.8146706742299468;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | else if ( haswordauthor(B, M), haswordvenue(N, M) )
%   | | | then return 0.8146706742299468;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return 0.8581489350995105;  // std dev = 6.95e-07, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


% Clauses:

sameauthor(A, B, 0.7268358037863779) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(A, E), 
     haswordvenue(F, E), 
     haswordtitle(D, E), 
     !. // Clause #1.

sameauthor(A, B, 0.8581489350995118) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(A, E), 
     haswordvenue(F, E), 
     !. // Clause #2.

sameauthor(A, B, 0.7711924133603816) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     !. // Clause #3.

sameauthor(A, B, 0.6476226193100387) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     !. // Clause #4.

sameauthor(A, B, 0.8581489350995123) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     haswordauthor(B, F), 
     haswordvenue(G, F), 
     !. // Clause #5.

sameauthor(A, B, 0.8146706742299468) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     !. // Clause #6.

sameauthor(A, B, 0.8146706742299468) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     !. // Clause #7.

sameauthor(A, B, 0.8581489350995105) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     !. // Clause #8.

sameauthor(A, B, -0.14185106490048774) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_sameauthor(a, b, 0.7268358037863779) :-  /* #neg=26 #pos=172 */ 
   haswordauthor(a, uniqueVar1),
   haswordauthor(b, uniqueVar1),
   haswordtitle(uniqueVar2, uniqueVar1),
   haswordauthor(a, uniqueVar3),
   haswordvenue(underscore, uniqueVar3),
   haswordtitle(uniqueVar2, uniqueVar3),
   !. // Flattened version of clause #1.

flattened_sameauthor(a, b, 0.8581489350995118) :-  /* #pos=26 */ 
   haswordauthor(a, uniqueVar4),
   haswordauthor(b, uniqueVar4),
   haswordtitle(underscore, uniqueVar4),
   haswordauthor(a, uniqueVar5),
   haswordvenue(underscore, uniqueVar5),
   !. // Flattened version of clause #2.

flattened_sameauthor(a, b, 0.7711924133603816) :-  /* #neg=2 #pos=21 */ 
   haswordauthor(a, uniqueVar6),
   haswordauthor(b, uniqueVar6),
   haswordtitle(underscore, uniqueVar6),
   haswordauthor(b, uniqueVar7),
   haswordvenue(underscore, uniqueVar7),
   !. // Flattened version of clause #3.

flattened_sameauthor(a, b, 0.6476226193100387) :-  /* #neg=12 #pos=45 */ 
   haswordauthor(a, uniqueVar8),
   haswordauthor(b, uniqueVar8),
   haswordtitle(underscore, uniqueVar8),
   !. // Flattened version of clause #4.

flattened_sameauthor(a, b, 0.8581489350995123) :-  /* #pos=13 */ 
   haswordauthor(a, uniqueVar9),
   haswordauthor(b, uniqueVar9),
   haswordauthor(a, uniqueVar10),
   haswordvenue(underscore, uniqueVar10),
   haswordauthor(b, uniqueVar11),
   haswordvenue(underscore, uniqueVar11),
   !. // Flattened version of clause #5.

flattened_sameauthor(a, b, 0.8146706742299468) :-  /* #neg=2 #pos=44 */ 
   haswordauthor(a, uniqueVar12),
   haswordauthor(b, uniqueVar12),
   haswordauthor(a, uniqueVar13),
   haswordvenue(underscore, uniqueVar13),
   !. // Flattened version of clause #6.

flattened_sameauthor(a, b, 0.8146706742299468) :-  /* #neg=2 #pos=44 */ 
   haswordauthor(a, uniqueVar14),
   haswordauthor(b, uniqueVar14),
   haswordauthor(b, uniqueVar15),
   haswordvenue(underscore, uniqueVar15),
   !. // Flattened version of clause #7.

flattened_sameauthor(a, b, 0.8581489350995105) :-  /* #pos=123 */ 
   haswordauthor(a, uniqueVar16),
   haswordauthor(b, uniqueVar16),
   !. // Flattened version of clause #8.

flattened_sameauthor(underscore, underscore, -0.14185106490048774) :-  /* #neg=22 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   haswordauthor(a, uniqueVar10)
%   haswordtitle(uniqueVar2, uniqueVar1)
%   haswordauthor(a, uniqueVar8)
%   haswordauthor(a, uniqueVar5)
%   haswordauthor(b, uniqueVar1)
%   haswordtitle(uniqueVar2, uniqueVar3)
%   haswordvenue(underscore, uniqueVar5)
%   haswordauthor(b, uniqueVar8)
%   haswordtitle(underscore, uniqueVar8)
%   haswordauthor(a, uniqueVar4)
%   haswordauthor(b, uniqueVar9)
%   haswordauthor(b, uniqueVar6)
%   haswordauthor(a, uniqueVar1)
%   haswordvenue(underscore, uniqueVar11)
%   haswordauthor(a, uniqueVar9)
%   haswordvenue(underscore, uniqueVar7)
%   haswordauthor(a, uniqueVar3)
%   haswordauthor(a, uniqueVar14)
%   haswordvenue(underscore, uniqueVar3)
%   haswordvenue(underscore, uniqueVar10)
%   haswordauthor(b, uniqueVar11)
%   haswordauthor(b, uniqueVar7)
%   haswordauthor(b, uniqueVar14)
%   haswordauthor(b, uniqueVar15)
%   haswordauthor(a, uniqueVar6)
%   haswordvenue(underscore, uniqueVar15)
%   haswordauthor(b, uniqueVar16)
%   haswordauthor(a, uniqueVar16)
%   haswordtitle(underscore, uniqueVar6)
%   haswordauthor(b, uniqueVar12)
%   haswordauthor(a, uniqueVar13)
%   haswordvenue(underscore, uniqueVar13)
%   haswordauthor(b, uniqueVar4)
%   haswordtitle(underscore, uniqueVar4)
%   haswordauthor(a, uniqueVar12)

%%%%%  WILL-Produced Tree #2 @ 8:54:15 5/11/17.  [Using 13,797,768 memory cells.]  %%%%%

% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordauthor(B, E), haswordvenue(F, E) )
%   | | then if ( haswordtitle(D, E) )
%   | | | then return 0.6134980823580076;  // std dev = 4.754, 198.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=172 */
%   | | | else return 0.7287410052000958;  // std dev = 0.044, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.5762033760020602;  // std dev = 0.377, 80.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=66 */
%   | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | then if ( author(I, B), venue(I, H) )
%   | | | then return 0.7264261946342654;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.685397027825389;  // std dev = 1.382, 49.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=47 */
%   | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | then return 0.6846861293705276;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return 0.7194734122109554;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


% Clauses:

sameauthor(A, B, 0.6134980823580076) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     haswordtitle(D, E), 
     !. // Clause #1.

sameauthor(A, B, 0.7287410052000958) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     !. // Clause #2.

sameauthor(A, B, 0.5762033760020602) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     !. // Clause #3.

sameauthor(A, B, 0.7264261946342654) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     author(F, B), 
     venue(F, E), 
     !. // Clause #4.

sameauthor(A, B, 0.685397027825389) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     !. // Clause #5.

sameauthor(A, B, 0.6846861293705276) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     !. // Clause #6.

sameauthor(A, B, 0.7194734122109554) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     !. // Clause #7.

sameauthor(A, B, -0.12544463852839138) :- !. // Clause #8.


% The flattened versions of these clauses:

flattened_sameauthor(a, b, 0.6134980823580076) :-  /* #neg=26 #pos=172 */ 
   haswordauthor(a, uniqueVar17),
   haswordauthor(b, uniqueVar17),
   haswordtitle(uniqueVar18, uniqueVar17),
   haswordauthor(b, uniqueVar19),
   haswordvenue(underscore, uniqueVar19),
   haswordtitle(uniqueVar18, uniqueVar19),
   !. // Flattened version of clause #1.

flattened_sameauthor(a, b, 0.7287410052000958) :-  /* #pos=26 */ 
   haswordauthor(a, uniqueVar20),
   haswordauthor(b, uniqueVar20),
   haswordtitle(underscore, uniqueVar20),
   haswordauthor(b, uniqueVar21),
   haswordvenue(underscore, uniqueVar21),
   !. // Flattened version of clause #2.

flattened_sameauthor(a, b, 0.5762033760020602) :-  /* #neg=14 #pos=66 */ 
   haswordauthor(a, uniqueVar22),
   haswordauthor(b, uniqueVar22),
   haswordtitle(underscore, uniqueVar22),
   !. // Flattened version of clause #3.

flattened_sameauthor(a, b, 0.7264261946342654) :-  /* #pos=10 */ 
   haswordauthor(a, uniqueVar23),
   haswordauthor(b, uniqueVar23),
   haswordauthor(b, uniqueVar24),
   haswordvenue(uniqueVar25, uniqueVar24),
   author(uniqueVar26, b),
   venue(uniqueVar26, uniqueVar25),
   !. // Flattened version of clause #4.

flattened_sameauthor(a, b, 0.685397027825389) :-  /* #neg=2 #pos=47 */ 
   haswordauthor(a, uniqueVar27),
   haswordauthor(b, uniqueVar27),
   haswordauthor(b, uniqueVar28),
   haswordvenue(underscore, uniqueVar28),
   !. // Flattened version of clause #5.

flattened_sameauthor(a, b, 0.6846861293705276) :-  /* #neg=2 #pos=44 */ 
   haswordauthor(a, uniqueVar29),
   haswordauthor(b, uniqueVar29),
   haswordauthor(a, uniqueVar30),
   haswordvenue(underscore, uniqueVar30),
   !. // Flattened version of clause #6.

flattened_sameauthor(a, b, 0.7194734122109554) :-  /* #pos=123 */ 
   haswordauthor(a, uniqueVar31),
   haswordauthor(b, uniqueVar31),
   !. // Flattened version of clause #7.

flattened_sameauthor(underscore, underscore, -0.12544463852839138) :-  /* #neg=22 */ 
   !. // Flattened version of clause #8.


% The unique flattened literals:
%   haswordauthor(a, uniqueVar27)
%   haswordauthor(b, uniqueVar28)
%   venue(uniqueVar26, uniqueVar25)
%   haswordauthor(b, uniqueVar21)
%   haswordauthor(a, uniqueVar31)
%   haswordauthor(b, uniqueVar22)
%   haswordauthor(b, uniqueVar19)
%   haswordauthor(b, uniqueVar27)
%   haswordauthor(b, uniqueVar23)
%   haswordvenue(underscore, uniqueVar21)
%   haswordauthor(a, uniqueVar17)
%   haswordauthor(a, uniqueVar23)
%   author(uniqueVar26, b)
%   haswordauthor(b, uniqueVar17)
%   haswordtitle(underscore, uniqueVar22)
%   haswordtitle(underscore, uniqueVar20)
%   haswordvenue(uniqueVar25, uniqueVar24)
%   haswordauthor(b, uniqueVar24)
%   haswordvenue(underscore, uniqueVar30)
%   haswordauthor(a, uniqueVar22)
%   haswordauthor(b, uniqueVar31)
%   haswordvenue(underscore, uniqueVar19)
%   haswordtitle(uniqueVar18, uniqueVar19)
%   haswordauthor(a, uniqueVar30)
%   haswordtitle(uniqueVar18, uniqueVar17)
%   haswordauthor(b, uniqueVar20)
%   haswordvenue(underscore, uniqueVar28)
%   haswordauthor(b, uniqueVar29)
%   haswordauthor(a, uniqueVar20)
%   haswordauthor(a, uniqueVar29)

%%%%%  WILL-Produced Tree #3 @ 8:54:17 5/11/17.  [Using 13,920,216 memory cells.]  %%%%%

% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( haswordtitle(D, E) )
%   | | | then return 0.482022283910653;  // std dev = 4.751, 198.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=172 */
%   | | | else return 0.5731776124873952;  // std dev = 0.095, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | | then return 0.4984202571979979;  // std dev = 1.328, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0.42966025474120595;  // std dev = 3.078, 57.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=45 */
%   | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.5315632593874174;  // std dev = 1.382, 51.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=49 */
%   | | | else return 0.5677624978089177;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( haswordauthor(A, L), haswordvenue(M, L) )
%   | | | then return 0.5311214831143672;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return 0.5553664367462834;  // std dev = 4.54e-07, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


% Clauses:

sameauthor(A, B, 0.482022283910653) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(A, E), 
     haswordvenue(F, E), 
     haswordtitle(D, E), 
     !. // Clause #1.

sameauthor(A, B, 0.5731776124873952) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(A, E), 
     haswordvenue(F, E), 
     !. // Clause #2.

sameauthor(A, B, 0.4984202571979979) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     !. // Clause #3.

sameauthor(A, B, 0.42966025474120595) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     !. // Clause #4.

sameauthor(A, B, 0.5315632593874174) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     haswordtitle(F, D), 
     !. // Clause #5.

sameauthor(A, B, 0.5677624978089177) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     !. // Clause #6.

sameauthor(A, B, 0.5311214831143672) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     !. // Clause #7.

sameauthor(A, B, 0.5553664367462834) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     !. // Clause #8.

sameauthor(A, B, -0.11231637819360638) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_sameauthor(a, b, 0.482022283910653) :-  /* #neg=26 #pos=172 */ 
   haswordauthor(a, uniqueVar32),
   haswordauthor(b, uniqueVar32),
   haswordtitle(uniqueVar33, uniqueVar32),
   haswordauthor(a, uniqueVar34),
   haswordvenue(underscore, uniqueVar34),
   haswordtitle(uniqueVar33, uniqueVar34),
   !. // Flattened version of clause #1.

flattened_sameauthor(a, b, 0.5731776124873952) :-  /* #pos=26 */ 
   haswordauthor(a, uniqueVar35),
   haswordauthor(b, uniqueVar35),
   haswordtitle(underscore, uniqueVar35),
   haswordauthor(a, uniqueVar36),
   haswordvenue(underscore, uniqueVar36),
   !. // Flattened version of clause #2.

flattened_sameauthor(a, b, 0.4984202571979979) :-  /* #neg=2 #pos=21 */ 
   haswordauthor(a, uniqueVar37),
   haswordauthor(b, uniqueVar37),
   haswordtitle(underscore, uniqueVar37),
   haswordauthor(b, uniqueVar38),
   haswordvenue(underscore, uniqueVar38),
   !. // Flattened version of clause #3.

flattened_sameauthor(a, b, 0.42966025474120595) :-  /* #neg=12 #pos=45 */ 
   haswordauthor(a, uniqueVar39),
   haswordauthor(b, uniqueVar39),
   haswordtitle(underscore, uniqueVar39),
   !. // Flattened version of clause #4.

flattened_sameauthor(a, b, 0.5315632593874174) :-  /* #neg=2 #pos=49 */ 
   haswordauthor(a, uniqueVar40),
   haswordauthor(b, uniqueVar40),
   haswordauthor(b, uniqueVar41),
   haswordvenue(underscore, uniqueVar41),
   haswordtitle(underscore, uniqueVar41),
   !. // Flattened version of clause #5.

flattened_sameauthor(a, b, 0.5677624978089177) :-  /* #pos=8 */ 
   haswordauthor(a, uniqueVar42),
   haswordauthor(b, uniqueVar42),
   haswordauthor(b, uniqueVar43),
   haswordvenue(underscore, uniqueVar43),
   !. // Flattened version of clause #6.

flattened_sameauthor(a, b, 0.5311214831143672) :-  /* #neg=2 #pos=44 */ 
   haswordauthor(a, uniqueVar44),
   haswordauthor(b, uniqueVar44),
   haswordauthor(a, uniqueVar45),
   haswordvenue(underscore, uniqueVar45),
   !. // Flattened version of clause #7.

flattened_sameauthor(a, b, 0.5553664367462834) :-  /* #pos=123 */ 
   haswordauthor(a, uniqueVar46),
   haswordauthor(b, uniqueVar46),
   !. // Flattened version of clause #8.

flattened_sameauthor(underscore, underscore, -0.11231637819360638) :-  /* #neg=22 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   haswordauthor(a, uniqueVar40)
%   haswordtitle(underscore, uniqueVar41)
%   haswordauthor(a, uniqueVar34)
%   haswordtitle(uniqueVar33, uniqueVar34)
%   haswordauthor(a, uniqueVar45)
%   haswordvenue(underscore, uniqueVar38)
%   haswordauthor(b, uniqueVar40)
%   haswordvenue(underscore, uniqueVar41)
%   haswordtitle(underscore, uniqueVar37)
%   haswordauthor(a, uniqueVar37)
%   haswordauthor(a, uniqueVar46)
%   haswordauthor(b, uniqueVar41)
%   haswordauthor(b, uniqueVar37)
%   haswordauthor(b, uniqueVar46)
%   haswordtitle(uniqueVar33, uniqueVar32)
%   haswordauthor(a, uniqueVar35)
%   haswordauthor(b, uniqueVar42)
%   haswordauthor(b, uniqueVar32)
%   haswordauthor(a, uniqueVar39)
%   haswordvenue(underscore, uniqueVar43)
%   haswordauthor(b, uniqueVar35)
%   haswordtitle(underscore, uniqueVar35)
%   haswordauthor(a, uniqueVar32)
%   haswordauthor(a, uniqueVar42)
%   haswordauthor(b, uniqueVar39)
%   haswordauthor(b, uniqueVar43)
%   haswordvenue(underscore, uniqueVar36)
%   haswordauthor(a, uniqueVar44)
%   haswordauthor(b, uniqueVar38)
%   haswordauthor(a, uniqueVar36)
%   haswordvenue(underscore, uniqueVar34)
%   haswordtitle(underscore, uniqueVar39)
%   haswordauthor(b, uniqueVar44)
%   haswordvenue(underscore, uniqueVar45)


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for sameauthor.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).

logPrior(-1.8).
sameauthor(D, E, Total) :- // A general accessor. 
   sameauthor(D, E, 1000000, Total), !.
sameauthor(D, E, Total) :- waitHere("This should not fail", sameauthor(D, E, Total)).

sameauthor(D, E, TreesToUse, Total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(LogPrior),
   getScore_sameauthor_tree1(D, E, TreesToUse, Total1),
   getScore_sameauthor_tree2(D, E, TreesToUse, Total2),
   getScore_sameauthor_tree3(D, E, TreesToUse, Total3),
   Total is LogPrior + Total1 + Total2 + Total3,
   !.
sameauthor(D, E, TreesToUse, Total) :- waitHere("This should not fail", sameauthor(D, E, TreesToUse, Total)).

getScore_sameauthor_tree1(D, E, TreesToUse, 0.0) :- 1 > TreesToUse, !.
getScore_sameauthor_tree1(D, E, TreesToUse, Total1) :- sameauthor_tree1(D, E, Total), stepLength_tree1(StepLen), Total1 is Total * StepLen.

getScore_sameauthor_tree2(D, E, TreesToUse, 0.0) :- 2 > TreesToUse, !.
getScore_sameauthor_tree2(D, E, TreesToUse, Total2) :- sameauthor_tree2(D, E, Total), stepLength_tree2(StepLen), Total2 is Total * StepLen.

getScore_sameauthor_tree3(D, E, TreesToUse, 0.0) :- 3 > TreesToUse, !.
getScore_sameauthor_tree3(D, E, TreesToUse, Total3) :- sameauthor_tree3(D, E, Total), stepLength_tree3(StepLen), Total3 is Total * StepLen.

flattenedLiteralsInThisSetOfTrees(sameauthor, 99, [
   haswordauthor(a, uniqueVar27),
   haswordauthor(a, uniqueVar40),
   haswordauthor(b, uniqueVar1),
   haswordvenue(underscore, uniqueVar5),
   haswordauthor(b, uniqueVar8),
   haswordvenue(underscore, uniqueVar7),
   haswordauthor(a, uniqueVar31),
   haswordauthor(a, uniqueVar3),
   haswordauthor(b, uniqueVar19),
   haswordauthor(a, uniqueVar37),
   haswordvenue(underscore, uniqueVar10),
   haswordauthor(b, uniqueVar7),
   haswordauthor(b, uniqueVar15),
   haswordauthor(b, uniqueVar32),
   haswordtitle(underscore, uniqueVar22),
   haswordvenue(uniqueVar25, uniqueVar24),
   haswordtitle(underscore, uniqueVar6),
   haswordauthor(b, uniqueVar39),
   haswordauthor(a, uniqueVar13),
   haswordtitle(uniqueVar18, uniqueVar17),
   haswordauthor(b, uniqueVar4),
   haswordtitle(underscore, uniqueVar4),
   haswordtitle(underscore, uniqueVar39),
   haswordtitle(underscore, uniqueVar8),
   haswordauthor(b, uniqueVar6),
   haswordauthor(a, uniqueVar1),
   haswordvenue(underscore, uniqueVar11),
   haswordauthor(b, uniqueVar21),
   haswordauthor(b, uniqueVar22),
   haswordauthor(b, uniqueVar27),
   haswordvenue(underscore, uniqueVar21),
   author(uniqueVar26, b),
   haswordtitle(uniqueVar33, uniqueVar32),
   haswordauthor(b, uniqueVar42),
   haswordvenue(underscore, uniqueVar15),
   haswordauthor(b, uniqueVar16),
   haswordauthor(b, uniqueVar24),
   haswordauthor(a, uniqueVar16),
   haswordtitle(underscore, uniqueVar35),
   haswordauthor(a, uniqueVar42),
   haswordauthor(b, uniqueVar43),
   haswordtitle(uniqueVar18, uniqueVar19),
   haswordauthor(a, uniqueVar30),
   haswordauthor(b, uniqueVar12),
   haswordauthor(a, uniqueVar36),
   haswordvenue(underscore, uniqueVar13),
   haswordauthor(b, uniqueVar20),
   haswordvenue(underscore, uniqueVar28),
   haswordauthor(b, uniqueVar29),
   haswordauthor(a, uniqueVar12),
   haswordauthor(a, uniqueVar20),
   haswordauthor(a, uniqueVar29),
   haswordtitle(uniqueVar2, uniqueVar1),
   haswordauthor(a, uniqueVar9),
   haswordvenue(underscore, uniqueVar38),
   haswordvenue(underscore, uniqueVar41),
   haswordtitle(underscore, uniqueVar37),
   haswordauthor(a, uniqueVar14),
   haswordauthor(a, uniqueVar46),
   haswordauthor(b, uniqueVar41),
   haswordauthor(a, uniqueVar17),
   haswordauthor(a, uniqueVar23),
   haswordauthor(a, uniqueVar6),
   haswordvenue(underscore, uniqueVar30),
   haswordauthor(a, uniqueVar39),
   haswordvenue(underscore, uniqueVar43),
   haswordauthor(a, uniqueVar22),
   haswordauthor(b, uniqueVar31),
   haswordauthor(a, uniqueVar32),
   haswordvenue(underscore, uniqueVar36),
   haswordauthor(a, uniqueVar44),
   haswordauthor(b, uniqueVar38),
   haswordvenue(underscore, uniqueVar34),
   haswordauthor(b, uniqueVar44),
   haswordvenue(underscore, uniqueVar45),
   haswordauthor(a, uniqueVar10),
   haswordauthor(b, uniqueVar28),
   haswordauthor(a, uniqueVar8),
   haswordauthor(a, uniqueVar5),
   haswordtitle(uniqueVar2, uniqueVar3),
   haswordtitle(underscore, uniqueVar41),
   venue(uniqueVar26, uniqueVar25),
   haswordauthor(a, uniqueVar4),
   haswordauthor(b, uniqueVar9),
   haswordauthor(a, uniqueVar34),
   haswordtitle(uniqueVar33, uniqueVar34),
   haswordauthor(a, uniqueVar45),
   haswordauthor(b, uniqueVar40),
   haswordauthor(b, uniqueVar23),
   haswordvenue(underscore, uniqueVar3),
   haswordauthor(b, uniqueVar11),
   haswordauthor(b, uniqueVar14),
   haswordauthor(b, uniqueVar17),
   haswordauthor(b, uniqueVar37),
   haswordauthor(b, uniqueVar46),
   haswordauthor(a, uniqueVar35),
   haswordtitle(underscore, uniqueVar20),
   haswordauthor(b, uniqueVar35),
   haswordvenue(underscore, uniqueVar19)]).

%%%%%  WILL-Produced Tree Combined @ 8:54:20 5/11/17.  [Using 13,872,168 memory cells.]  %%%%%

% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then if ( haswordtitle(D, E) )
%   | | | then return 1.8227431489758865;  // std dev = 24.692, 594.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=516 */
%   | | | else return 2.1507999597978618;  // std dev = 0.164, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | | then return 1.9193408051528946;  // std dev = 6.979, 69.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=63 */
%   | | | else return 1.6267014455579738;  // std dev = 15.993, 171.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=135 */
%   | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | then if ( haswordauthor(A, K), haswordtitle(L, K) )
%   | | | then return 2.146664726085463;  // std dev = 0.050, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 2.031625368853075;  // std dev = 7.184, 144.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=138 */
%   | | else if ( haswordauthor(A, M), haswordvenue(N, M) )
%   | | | then return 2.0304782867148403;  // std dev = 7.187, 138.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=132 */
%   | | | else return 2.1329887840567694;  // std dev = 0.000, 369.000 (wgt'ed) examples reached here.  /* #pos=369 */
%   else return -0.3796120816224861;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */


% Clauses:

sameauthor(A, B, 1.8227431489758865) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(A, E), 
     haswordvenue(F, E), 
     haswordtitle(D, E), 
     !. // Clause #1.

sameauthor(A, B, 2.1507999597978618) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(A, E), 
     haswordvenue(F, E), 
     !. // Clause #2.

sameauthor(A, B, 1.9193408051528946) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     haswordauthor(B, E), 
     haswordvenue(F, E), 
     !. // Clause #3.

sameauthor(A, B, 1.6267014455579738) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordtitle(D, C), 
     !. // Clause #4.

sameauthor(A, B, 2.146664726085463) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     haswordauthor(A, F), 
     haswordtitle(G, F), 
     !. // Clause #5.

sameauthor(A, B, 2.031625368853075) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(B, D), 
     haswordvenue(E, D), 
     !. // Clause #6.

sameauthor(A, B, 2.0304782867148403) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     haswordauthor(A, D), 
     haswordvenue(E, D), 
     !. // Clause #7.

sameauthor(A, B, 2.1329887840567694) :- 
     haswordauthor(A, C), 
     haswordauthor(B, C), 
     !. // Clause #8.

sameauthor(A, B, -0.3796120816224861) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_sameauthor(a, b, 1.8227431489758865) :-  /* #neg=78 #pos=516 */ 
   haswordauthor(a, uniqueVar47),
   haswordauthor(b, uniqueVar47),
   haswordtitle(uniqueVar48, uniqueVar47),
   haswordauthor(a, uniqueVar49),
   haswordvenue(underscore, uniqueVar49),
   haswordtitle(uniqueVar48, uniqueVar49),
   !. // Flattened version of clause #1.

flattened_sameauthor(a, b, 2.1507999597978618) :-  /* #pos=78 */ 
   haswordauthor(a, uniqueVar50),
   haswordauthor(b, uniqueVar50),
   haswordtitle(underscore, uniqueVar50),
   haswordauthor(a, uniqueVar51),
   haswordvenue(underscore, uniqueVar51),
   !. // Flattened version of clause #2.

flattened_sameauthor(a, b, 1.9193408051528946) :-  /* #neg=6 #pos=63 */ 
   haswordauthor(a, uniqueVar52),
   haswordauthor(b, uniqueVar52),
   haswordtitle(underscore, uniqueVar52),
   haswordauthor(b, uniqueVar53),
   haswordvenue(underscore, uniqueVar53),
   !. // Flattened version of clause #3.

flattened_sameauthor(a, b, 1.6267014455579738) :-  /* #neg=36 #pos=135 */ 
   haswordauthor(a, uniqueVar54),
   haswordauthor(b, uniqueVar54),
   haswordtitle(underscore, uniqueVar54),
   !. // Flattened version of clause #4.

flattened_sameauthor(a, b, 2.146664726085463) :-  /* #pos=33 */ 
   haswordauthor(a, uniqueVar55),
   haswordauthor(b, uniqueVar55),
   haswordauthor(b, uniqueVar56),
   haswordvenue(underscore, uniqueVar56),
   haswordauthor(a, uniqueVar57),
   haswordtitle(underscore, uniqueVar57),
   !. // Flattened version of clause #5.

flattened_sameauthor(a, b, 2.031625368853075) :-  /* #neg=6 #pos=138 */ 
   haswordauthor(a, uniqueVar58),
   haswordauthor(b, uniqueVar58),
   haswordauthor(b, uniqueVar59),
   haswordvenue(underscore, uniqueVar59),
   !. // Flattened version of clause #6.

flattened_sameauthor(a, b, 2.0304782867148403) :-  /* #neg=6 #pos=132 */ 
   haswordauthor(a, uniqueVar60),
   haswordauthor(b, uniqueVar60),
   haswordauthor(a, uniqueVar61),
   haswordvenue(underscore, uniqueVar61),
   !. // Flattened version of clause #7.

flattened_sameauthor(a, b, 2.1329887840567694) :-  /* #pos=369 */ 
   haswordauthor(a, uniqueVar62),
   haswordauthor(b, uniqueVar62),
   !. // Flattened version of clause #8.

flattened_sameauthor(underscore, underscore, -0.3796120816224861) :-  /* #neg=66 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   haswordtitle(uniqueVar48, uniqueVar49)
%   haswordauthor(a, uniqueVar58)
%   haswordauthor(b, uniqueVar56)
%   haswordauthor(b, uniqueVar55)
%   haswordauthor(a, uniqueVar49)
%   haswordvenue(underscore, uniqueVar49)
%   haswordauthor(b, uniqueVar47)
%   haswordauthor(b, uniqueVar50)
%   haswordtitle(underscore, uniqueVar54)
%   haswordvenue(underscore, uniqueVar56)
%   haswordtitle(underscore, uniqueVar50)
%   haswordauthor(a, uniqueVar61)
%   haswordauthor(a, uniqueVar47)
%   haswordauthor(b, uniqueVar59)
%   haswordauthor(b, uniqueVar53)
%   haswordauthor(a, uniqueVar54)
%   haswordauthor(a, uniqueVar55)
%   haswordauthor(a, uniqueVar52)
%   haswordauthor(a, uniqueVar62)
%   haswordauthor(a, uniqueVar57)
%   haswordauthor(a, uniqueVar50)
%   haswordvenue(underscore, uniqueVar51)
%   haswordauthor(b, uniqueVar52)
%   haswordauthor(b, uniqueVar62)
%   haswordvenue(underscore, uniqueVar59)
%   haswordtitle(underscore, uniqueVar52)
%   haswordvenue(underscore, uniqueVar53)
%   haswordauthor(a, uniqueVar51)
%   haswordauthor(b, uniqueVar60)
%   haswordtitle(underscore, uniqueVar57)
%   haswordauthor(b, uniqueVar54)
%   haswordauthor(b, uniqueVar58)
%   haswordauthor(a, uniqueVar60)
%   haswordtitle(uniqueVar48, uniqueVar47)
%   haswordvenue(underscore, uniqueVar61)
