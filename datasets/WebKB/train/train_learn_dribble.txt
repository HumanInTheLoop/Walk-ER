% Running on host: hawk

% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

% Calling ILPouterLoop from createRegressionOuterLooper.

% getInputArgWithDefaultValue: args=[datasets/WebKB/train/train_pos.txt, datasets/WebKB/train/train_neg.txt, datasets/WebKB/train/train_bk.txt, datasets/WebKB/train/train_facts.txt]
%  for N=0: args[N]=datasets/WebKB/train/train_pos.txt

% getInputArgWithDefaultValue: args=[datasets/WebKB/train/train_pos.txt, datasets/WebKB/train/train_neg.txt, datasets/WebKB/train/train_bk.txt, datasets/WebKB/train/train_facts.txt]
%  for N=1: args[N]=datasets/WebKB/train/train_neg.txt

% getInputArgWithDefaultValue: args=[datasets/WebKB/train/train_pos.txt, datasets/WebKB/train/train_neg.txt, datasets/WebKB/train/train_bk.txt, datasets/WebKB/train/train_facts.txt]
%  for N=2: args[N]=datasets/WebKB/train/train_bk.txt

% getInputArgWithDefaultValue: args=[datasets/WebKB/train/train_pos.txt, datasets/WebKB/train/train_neg.txt, datasets/WebKB/train/train_bk.txt, datasets/WebKB/train/train_facts.txt]
%  for N=3: args[N]=datasets/WebKB/train/train_facts.txt

% Welcome to the WILL ILP/SRL systems.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.
% Reading background theory from dir: null
% Load '../webkb_bk.txt'.

% Switching to VarIndicator = uppercase.

***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****


***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****

% [ LazyGroundClauseIndex ]  Building full index for mode/1 with 1 assertions.
% LoadAllModes() called.  Currently loaded modes: []
% [ LazyGroundClauseIndex ]  Building full index for sameAs/2 with 2 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for exp/3.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for log/3.

%  Read the facts.
%  Have read 1,913 facts.
% Have read 154 examples from 'datasets/WebKB/train' [datasets/WebKB/train/train*].
% Have read 594 examples from 'datasets/WebKB/train' [datasets/WebKB/train/train*].

%  LearnOneClause initialized.

% The outer looper has been created.

% Initializing the ILP inner looper.

% NEW target:                 faculty(D)
%  targetPred:                faculty/1
%  targetArgTypes:            signature = [const], types = [+Person]
%  targets:                   [faculty(D)]
%  targetPredicates:          [faculty/1]
%  targetArgSpecs:            [[D[+Person]]]
%  variablesInTargets:        [[D]]

% Started collecting constants

% Collecting the types of constants.
%  Because type='Person' is inconsistent with project/2[Proj, Person], cannot infer constants from argument #1 in mode = [+Person, -Proj]
%  Because type='Proj' is inconsistent with project/2[Proj, Person], cannot infer constants from argument #2 in mode = [+Person, -Proj]
%  Because type='Person' is inconsistent with project/2[Proj, Person], cannot infer constants from argument #1 in mode = [+Person, +Proj]
%  Because type='Proj' is inconsistent with project/2[Proj, Person], cannot infer constants from argument #2 in mode = [+Person, +Proj]

% Looking at the training examples to see if any types of new constants can be inferred.

% The type of the following constants are not known: 
%  phttpcstrcscornelledu  [from: project(phttpcstrcscornelledu, ahttpdricornelledupubeopledavishtml)]
%  Inferring that 'phttpcstrcscornelledu' is of type 'willAnything'.
%  phttpdricornelledu  [from: project(phttpdricornelledu, ahttpdricornelledupubeopledavishtml)]
%  Inferring that 'phttpdricornelledu' is of type 'willAnything'.
%  phttpmetacrawlercswashingtonedu8080  [from: project(phttpmetacrawlercswashingtonedu8080, ahttpwwwcswashingtoneduhomesetzioni)]
%  Inferring that 'phttpmetacrawlercswashingtonedu8080' is of type 'willAnything'.
%  phttprobios8mewiscedu  [from: project(phttprobios8mewiscedu, ahttprobios8mewiscedulumelskylumelskyhtml)]
%  Inferring that 'phttprobios8mewiscedu' is of type 'willAnything'.
%  phttpsimoncscornelledunforojects  [from: project(phttpsimoncscornelledunforojects, ahttpsimoncscornelledunfoeoplevogels)]
%  Inferring that 'phttpsimoncscornelledunforojects' is of type 'willAnything'.
%  phttpwwwcscornelledunfoeoplenikoscprojectspremaindexhtml  [from: project(phttpwwwcscornelledunfoeoplenikoscprojectspremaindexhtml, ahttpwwwcscornelledunfoeoplenikoscnikoschtml)]
%  Inferring that 'phttpwwwcscornelledunfoeoplenikoscprojectspremaindexhtml' is of type 'willAnything'.
%  phttpwwwcscornelledunfoeoplepraveenprojectsseqhtml  [from: project(phttpwwwcscornelledunfoeoplepraveenprojectsseqhtml, ahttpwwwcscornelledunfoeoplepraveenpraveenhtml)]
%  Inferring that 'phttpwwwcscornelledunfoeoplepraveenprojectsseqhtml' is of type 'willAnything'.
%  phttpwwwcscornelledunfoeopletahhytechhtml  [from: project(phttpwwwcscornelledunfoeopletahhytechhtml, ahttpwwwcscornelledunfoeopletahtahhtml)]
%  Inferring that 'phttpwwwcscornelledunfoeopletahhytechhtml' is of type 'willAnything'.
%  phttpwwwcscornelledunfoeoplevavasisqmghomehtml  [from: project(phttpwwwcscornelledunfoeoplevavasisqmghomehtml, ahttpwwwcscornelledunfoeoplevavasisvavasishtml)]
%  Inferring that 'phttpwwwcscornelledunfoeoplevavasisqmghomehtml' is of type 'willAnything'.
%  phttpwwwcscornelledunfoeopleyanhongcachethtml  [from: project(phttpwwwcscornelledunfoeopleyanhongcachethtml, ahttpwwwcscornelledunfoeoplettimeitelbaumhtml)]
%  Inferring that 'phttpwwwcscornelledunfoeopleyanhongcachethtml' is of type 'willAnything'.
%  phttpwwwcscornelledunforojects2  [from: project(phttpwwwcscornelledunforojects2, ahttpwwwcscornelledunfoeoplegrzesgrzeshtml)]
%  Inferring that 'phttpwwwcscornelledunforojects2' is of type 'willAnything'.
%  phttpwwwcscornelledunforojects  [from: project(phttpwwwcscornelledunforojects, ahttpwwwcscornelledunfoeoplechichaochichaohtml)]
%  Inferring that 'phttpwwwcscornelledunforojects' is of type 'willAnything'.
%  phttpwwwcscornelledunforojectsarpahtml  [from: project(phttpwwwcscornelledunforojectsarpahtml, ahttpwwwcscornelledunfoeoplervrrvrhtml)]
%  Inferring that 'phttpwwwcscornelledunforojectsarpahtml' is of type 'willAnything'.
%  phttpwwwcscornelledunforojectscsrvlcsrvlhtml  [from: project(phttpwwwcscornelledunforojectscsrvlcsrvlhtml, ahttpwwwcscornelleducgibinssisnfoeoplekmaikmaihtml)]
%  Inferring that 'phttpwwwcscornelledunforojectscsrvlcsrvlhtml' is of type 'willAnything'.
%  phttpwwwcscornelledunforojectsediaet  [from: project(phttpwwwcscornelledunforojectsediaet, ahttpwwwcscornelledunfoacultyrianmithhtml)]
%  Inferring that 'phttpwwwcscornelledunforojectsediaet' is of type 'willAnything'.
%  phttpwwwcscornelledunforojectset  [from: project(phttpwwwcscornelledunforojectset, ahttpsimoncscornelledunfoeoplevogels)]
%  Inferring that 'phttpwwwcscornelledunforojectset' is of type 'willAnything'.
%  phttpwwwcscornelledunforojectsicaphtml  [from: project(phttpwwwcscornelledunforojectsicaphtml, ahttpwwwcscornelledunfoeopledeanhomehtml)]
%  Inferring that 'phttpwwwcscornelledunforojectsicaphtml' is of type 'willAnything'.
%  phttpwwwcscornelledunforojectsimabindexhtml  [from: project(phttpwwwcscornelledunforojectsimabindexhtml, ahttpwwwcscornelledunfoacultyrcrchtml)]
%  Inferring that 'phttpwwwcscornelledunforojectsimabindexhtml' is of type 'willAnything'.
%  phttpwwwcscornelledunforojectsplit  [from: project(phttpwwwcscornelledunforojectsplit, ahttpwwwcscornelledunfoeoplechichaochichaohtml)]
%  Inferring that 'phttpwwwcscornelledunforojectsplit' is of type 'willAnything'.
%  phttpwwwcscornelledunforojectsurlnuprlhtml  [from: project(phttpwwwcscornelledunforojectsurlnuprlhtml, ahttpwwwcscornelledunfoacultyrcrchtml)]
%  Inferring that 'phttpwwwcscornelledunforojectsurlnuprlhtml' is of type 'willAnything'.
%  phttpwwwcscornelledunforojectszenozenohtml  [from: project(phttpwwwcscornelledunforojectszenozenohtml, ahttpwwwcscornelledunfoacultyrianmithhtml)]
%  Inferring that 'phttpwwwcscornelledunforojectszenozenohtml' is of type 'willAnything'.
%  phttpwwwcsutexaseduusersailab  [from: project(phttpwwwcsutexaseduusersailab, ahttpwwwcsutexaseduusersboyer)]
%  Inferring that 'phttpwwwcsutexaseduusersailab' is of type 'willAnything'.
%  phttpwwwcsutexaseduuserscadcadhtml  [from: project(phttpwwwcsutexaseduuserscadcadhtml, ahttpwwwcsutexaseduusershaizhou)]
%  Inferring that 'phttpwwwcsutexaseduuserscadcadhtml' is of type 'willAnything'.
%  phttpwwwcsutexaseduuserscilk  [from: project(phttpwwwcsutexaseduuserscilk, ahttpwwwcsutexaseduusersrdb)]
%  Inferring that 'phttpwwwcsutexaseduuserscilk' is of type 'willAnything'.
%  phttpwwwcsutexaseduuserscode  [from: project(phttpwwwcsutexaseduuserscode, ahttpwwwcsutexaseduusersajohn)]
%  Inferring that 'phttpwwwcsutexaseduuserscode' is of type 'willAnything'.
%  phttpwwwcsutexaseduuserscpg  [from: project(phttpwwwcsutexaseduuserscpg, ahttpwwwcsutexaseduuserscdj)]
%  Inferring that 'phttpwwwcsutexaseduuserscpg' is of type 'willAnything'.
%  phttpwwwcsutexaseduusersdmcl  [from: project(phttpwwwcsutexaseduusersdmcl, ahttpwwwcsutexaseduusersejp)]
%  Inferring that 'phttpwwwcsutexaseduusersdmcl' is of type 'willAnything'.
%  phttpwwwcsutexaseduuserslam  [from: project(phttpwwwcsutexaseduuserslam, ahttpwwwcsutexaseduusersckwong)]
%  Inferring that 'phttpwwwcsutexaseduuserslam' is of type 'willAnything'.
%  phttpwwwcsutexaseduusersless  [from: project(phttpwwwcsutexaseduusersless, ahttpwwwcsutexaseduusersdahlin)]
%  Inferring that 'phttpwwwcsutexaseduusersless' is of type 'willAnything'.
%  phttpwwwcsutexaseduusersmfkb  [from: project(phttpwwwcsutexaseduusersmfkb, ahttpwwwcsutexaseduuserscorrel)]
%  Inferring that 'phttpwwwcsutexaseduusersmfkb' is of type 'willAnything'.
%  phttpwwwcsutexaseduusersnlacq  [from: project(phttpwwwcsutexaseduusersnlacq, ahttpwwwcsutexaseduuserscthomp)]
%  Inferring that 'phttpwwwcsutexaseduusersnlacq' is of type 'willAnything'.
%  phttpwwwcsutexaseduusersnn  [from: project(phttpwwwcsutexaseduusersnn, ahttpwwwcsutexaseduusersdianelaw)]
%  Inferring that 'phttpwwwcsutexaseduusersnn' is of type 'willAnything'.
%  phttpwwwcsutexaseduusersoops  [from: project(phttpwwwcsutexaseduusersoops, ahttpwwwcsutexaseduusersesteban)]
%  Inferring that 'phttpwwwcsutexaseduusersoops' is of type 'willAnything'.
%  phttpwwwcsutexaseduuserspsp  [from: project(phttpwwwcsutexaseduuserspsp, ahttpwwwcsutexaseduuserscarruth)]
%  Inferring that 'phttpwwwcsutexaseduuserspsp' is of type 'willAnything'.
%  phttpwwwcsutexaseduusersqr  [from: project(phttpwwwcsutexaseduusersqr, ahttpwwwcsutexaseduusersbert)]
%  Inferring that 'phttpwwwcsutexaseduusersqr' is of type 'willAnything'.
%  phttpwwwcsutexaseduusersschwartz  [from: project(phttpwwwcsutexaseduusersschwartz, ahttpwwwcsutexaseduusersdsb)]
%  Inferring that 'phttpwwwcsutexaseduusersschwartz' is of type 'willAnything'.
%  phttpwwwcsutexaseduusersvlrsachtml  [from: project(phttpwwwcsutexaseduusersvlrsachtml, ahttpwwwcsutexaseduusersckpoon)]
%  Inferring that 'phttpwwwcsutexaseduusersvlrsachtml' is of type 'willAnything'.
%  phttpwwwcswashingtoneduhomesahrens  [from: project(phttpwwwcswashingtoneduhomesahrens, ahttpwwwcswashingtoneduhomesahrens)]
%  Inferring that 'phttpwwwcswashingtoneduhomesahrens' is of type 'willAnything'.
%  phttpwwwcswashingtoneduhomeslevyopalopalhtml  [from: project(phttpwwwcswashingtoneduhomeslevyopalopalhtml, ahttpwwwcswashingtoneduhomesdylan)]
%  Inferring that 'phttpwwwcswashingtoneduhomeslevyopalopalhtml' is of type 'willAnything'.
%  phttpwwwcswashingtoneduhomesromermemsysindexhtml  [from: project(phttpwwwcswashingtoneduhomesromermemsysindexhtml, ahttpwwwcswashingtoneduhomesbershad)]
%  Inferring that 'phttpwwwcswashingtoneduhomesromermemsysindexhtml' is of type 'willAnything'.
%  phttpwwwcswashingtoneduhomesromerrocky  [from: project(phttpwwwcswashingtoneduhomesromerrocky, ahttpwwwcswashingtoneduhomesbershad)]
%  Inferring that 'phttpwwwcswashingtoneduhomesromerrocky' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchmetipmetiphtml  [from: project(phttpwwwcswashingtoneduresearchmetipmetiphtml, ahttpwwwcswashingtoneduhomesbricker)]
%  Inferring that 'phttpwwwcswashingtoneduresearchmetipmetiphtml' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchmobicompmobilehtml  [from: project(phttpwwwcswashingtoneduresearchmobicompmobilehtml, ahttpwwwcswashingtoneduhomesbershad)]
%  Inferring that 'phttpwwwcswashingtoneduresearchmobicompmobilehtml' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectscecilcecilwwwcecilhomehtml  [from: project(phttpwwwcswashingtoneduresearchprojectscecilcecilwwwcecilhomehtml, ahttpwwwcswashingtoneduhomesgrove)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectscecilcecilwwwcecilhomehtml' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectsgrail2wwwindexhtml  [from: project(phttpwwwcswashingtoneduresearchprojectsgrail2wwwindexhtml, ahttpwwwcswashingtoneduhomesadam)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectsgrail2wwwindexhtml' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectslischaoswwwchaoshtml  [from: project(phttpwwwcswashingtoneduresearchprojectslischaoswwwchaoshtml, ahttpwwwcswashingtoneduhomeskwb)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectslischaoswwwchaoshtml' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectslischinookwww  [from: project(phttpwwwcswashingtoneduresearchprojectslischinookwww, ahttpwwwcswashingtoneduhomeschou)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectslischinookwww' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectsliswwwemerald  [from: project(phttpwwwcswashingtoneduresearchprojectsliswwwemerald, ahttpwwwcswashingtoneduhomesdarrenc)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectsliswwwemerald' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectsliswwwindexhtml  [from: project(phttpwwwcswashingtoneduresearchprojectsliswwwindexhtml, ahttpwwwcswashingtoneduhomeschou)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectsliswwwindexhtml' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectssafetywww  [from: project(phttpwwwcswashingtoneduresearchprojectssafetywww, ahttpwwwcswashingtoneduhomesjdreese)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectssafetywww' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectssoftbotswwwsoftbotshtml  [from: project(phttpwwwcswashingtoneduresearchprojectssoftbotswwwsoftbotshtml, ahttpwwwcswashingtoneduhomesbobd)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectssoftbotswwwsoftbotshtml' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectsspinwww  [from: project(phttpwwwcswashingtoneduresearchprojectsspinwww, ahttpwwwcswashingtoneduhomesausland)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectsspinwww' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectsuniswynompwww  [from: project(phttpwwwcswashingtoneduresearchprojectsuniswynompwww, ahttpwwwcswashingtoneduhomesausland)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectsuniswynompwww' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectsweirdwww  [from: project(phttpwwwcswashingtoneduresearchprojectsweirdwww, ahttpwwwcswashingtoneduhomesborning)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectsweirdwww' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectszpl  [from: project(phttpwwwcswashingtoneduresearchprojectszpl, ahttpwwwcswashingtoneduhomesbrad)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectszpl' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchsmt  [from: project(phttpwwwcswashingtoneduresearchsmt, ahttpwwwcswashingtoneduhomeseggers)]
%  Inferring that 'phttpwwwcswashingtoneduresearchsmt' is of type 'willAnything'.
%  phttpwwwcswisceducomputervisionprojectsexplorationhtml  [from: project(phttpwwwcswisceducomputervisionprojectsexplorationhtml, ahttpwwwcswiscedudyerdyerhtml)]
%  Inferring that 'phttpwwwcswisceducomputervisionprojectsexplorationhtml' is of type 'willAnything'.
%  phttpwwwcswisceducomputervisionprojectsvisadhtml  [from: project(phttpwwwcswisceducomputervisionprojectsvisadhtml, ahttpwwwcswiscedudyerdyerhtml)]
%  Inferring that 'phttpwwwcswisceducomputervisionprojectsvisadhtml' is of type 'willAnything'.
%  phttpwwwcswisceducondor  [from: project(phttpwwwcswisceducondor, ahttpwwwcswiscedujbasneyjbasneyhtml)]
%  Inferring that 'phttpwwwcswisceducondor' is of type 'willAnything'.
%  phttpwwwcswisceducondorhtml  [from: project(phttpwwwcswisceducondorhtml, ahttpwwwcswiscedujussijussihtml)]
%  Inferring that 'phttpwwwcswisceducondorhtml' is of type 'willAnything'.
%  phttpwwwcswisceducoral  [from: project(phttpwwwcswisceducoral, ahttpwwwcswiscedubeyerbeyerhtml)]
%  Inferring that 'phttpwwwcswisceducoral' is of type 'willAnything'.
%  phttpwwwcswisceducpnet  [from: project(phttpwwwcswisceducpnet, ahttpwwwcswisceduferrisferrishtml)]
%  Inferring that 'phttpwwwcswisceducpnet' is of type 'willAnything'.
%  phttpwwwcswiscedudevise  [from: project(phttpwwwcswiscedudevise, ahttpwwwcswisceduflisakowflisakowhtml)]
%  Inferring that 'phttpwwwcswiscedudevise' is of type 'willAnything'.
%  phttpwwwcswisceduexodus  [from: project(phttpwwwcswisceduexodus, ahttpwwwcswisceducareycareyhtml)]
%  Inferring that 'phttpwwwcswisceduexodus' is of type 'willAnything'.
%  phttpwwwcswiscedugalileo  [from: project(phttpwwwcswiscedugalileo, ahttpwwwcswiscedualainalainhtml)]
%  Inferring that 'phttpwwwcswiscedugalileo' is of type 'willAnything'.
%  phttpwwwcswiscedumscalar  [from: project(phttpwwwcswiscedumscalar, ahttpwwwcswisceduamiramirhtml)]
%  Inferring that 'phttpwwwcswiscedumscalar' is of type 'willAnything'.
%  phttpwwwcswisceduolviuwmpcancerhtml  [from: project(phttpwwwcswisceduolviuwmpcancerhtml, ahttpwwwcswisceduolviolvihtml)]
%  Inferring that 'phttpwwwcswisceduolviuwmpcancerhtml' is of type 'willAnything'.
%  phttpwwwcswisceduolviuwmppatsephtml  [from: project(phttpwwwcswisceduolviuwmppatsephtml, ahttpwwwcswisceduolviolvihtml)]
%  Inferring that 'phttpwwwcswisceduolviuwmppatsephtml' is of type 'willAnything'.
%  phttpwwwcswisceduparadise  [from: project(phttpwwwcswisceduparadise, ahttpwwwcswiscedubolobolohtml)]
%  Inferring that 'phttpwwwcswisceduparadise' is of type 'willAnything'.
%  phttpwwwcswisceduparadyn  [from: project(phttpwwwcswisceduparadyn, ahttpwwwcswiscedubartbarthtml)]
%  Inferring that 'phttpwwwcswisceduparadyn' is of type 'willAnything'.
%  phttpwwwcswiscedupraveenprojectsseqhtml  [from: project(phttpwwwcswiscedupraveenprojectsseqhtml, ahttpwwwcswisceduraghuraghuhtml)]
%  Inferring that 'phttpwwwcswiscedupraveenprojectsseqhtml' is of type 'willAnything'.
%  phttpwwwcswisceduscout  [from: project(phttpwwwcswisceduscout, ahttpwwwcswisceduejhazenejhazenhtml)]
%  Inferring that 'phttpwwwcswisceduscout' is of type 'willAnything'.
%  phttpwwwcswisceduseitzanimationhtml  [from: project(phttpwwwcswisceduseitzanimationhtml, ahttpwwwcswiscedudyerdyerhtml)]
%  Inferring that 'phttpwwwcswisceduseitzanimationhtml' is of type 'willAnything'.
%  phttpwwwcswisceduseitzinterpinterphtml  [from: project(phttpwwwcswisceduseitzinterpinterphtml, ahttpwwwcswiscedudyerdyerhtml)]
%  Inferring that 'phttpwwwcswisceduseitzinterpinterphtml' is of type 'willAnything'.
%  phttpwwwcswisceduseitzinterpvmorphhtml  [from: project(phttpwwwcswisceduseitzinterpvmorphhtml, ahttpwwwcswiscedudyerdyerhtml)]
%  Inferring that 'phttpwwwcswisceduseitzinterpvmorphhtml' is of type 'willAnything'.
%  phttpwwwcswisceduseitzpmotionhtml  [from: project(phttpwwwcswisceduseitzpmotionhtml, ahttpwwwcswiscedudyerdyerhtml)]
%  Inferring that 'phttpwwwcswisceduseitzpmotionhtml' is of type 'willAnything'.
%  phttpwwwcswiscedushavlikuwmlhtml  [from: project(phttpwwwcswiscedushavlikuwmlhtml, ahttpwwwcswisceduallexallexhtml)]
%  Inferring that 'phttpwwwcswiscedushavlikuwmlhtml' is of type 'willAnything'.
%  phttpwwwcswiscedushore  [from: project(phttpwwwcswiscedushore, ahttpwwwcswiscedubolobolohtml)]
%  Inferring that 'phttpwwwcswiscedushore' is of type 'willAnything'.
%  phttpwwwcswisceduwwt  [from: project(phttpwwwcswisceduwwt, ahttpwwwcswisceducaocaohtml)]
%  Inferring that 'phttpwwwcswisceduwwt' is of type 'willAnything'.
%  phttpwwwmautexaseduusersbshults  [from: project(phttpwwwmautexaseduusersbshults, ahttpwwwcsutexaseduusersmartym)]
%  Inferring that 'phttpwwwmautexaseduusersbshults' is of type 'willAnything'.

***** Warning: checkThatTypesOfAllConstantsAreKnown: Note that there were some constants whose type was not known (see list above or in dribble file). *****

% Time to collect constants: 54 milliseconds
% Time to collect examples: 0 seconds

% Read 154 pos examples and 594 neg examples.
% Time to init learnOneClause: 61 milliseconds
% Old dirnull
Setting model dir

% Have 154 'raw' positive examples and kept 154.
% Have 594 'raw' negative examples and kept 594.

% processing backup's for faculty
%  POS EX = 154
%  NEG EX = 594

% Memory usage by WILLSetup (just counts # targets?):
%  |backupPosExamples| = 1
%  |backupNegExamples| = 1
%  |predicatesAsFacts| = 0
%  |addedToFactBase|   = 0
datasets/WebKB/train/models/
File: datasets/WebKB/train/advice.txt doesnt exist.Hence no advice loaded
% Learning 10 trees in this iteration for faculty

% Learn model for: faculty
% Kept 154 of the 154 positive examples.
% Kept 318 of the 594 negative examples.
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.21981829933927033
Set score:0.0025
% Dataset size: 472
Computing probabilities
prob time:2 milliseconds
No hidden examples for : faculty
Time to build dataset: 7 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.21981829933927327
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 12 149 186 224 246 273 327 338 369 452
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% LearnOneClause Parameters:
%   Targets (1):
%    faculty(+Person)
%  Modes (50):
%    courseprof(-Course, +Person),
%    courseprof(+Course, -Person),
%    courseprof(+Course, +Person),
%    courseta(+Course, -Person),
%    courseta(-Course, +Person),
%    courseta(+Course, +Person),
%    project(-Proj, +Person),
%    project(+Proj, -Person),
%    project(+Person, -Proj),
%    project(+Person, +Proj),
%    sameperson(-Person, +Person),
%    sameperson(+Person, -Person),
%    sameperson(+Person, +Person),
%    student(+Person),
%    addList(+willList, #willNumber),
%    multiplyList(+willList, #willNumber),
%    abs(+willNumber, &willNumber),
%    minus(+willNumber, &willNumber),
%    minus(+willNumber, +willNumber, &willNumber),
%    plus(+willNumber, +willNumber, &willNumber),
%    mult(+willNumber, +willNumber, &willNumber),
%    div(+willNumber, +willNumber, &willNumber),
%    allNumbers(+willList),
%    positiveNumber(+willNumber),
%    negativeNumber(+willNumber),
%    in0toDot001(+willNumber),
%    in0toDot01(+willNumber),
%    in0toDot1(+willNumber),
%    in0to1(+willNumber),
%    in0to10(+willNumber),
%    in0to100(+willNumber),
%    in0to1000(+willNumber),
%    equalWithTolerance(+willNumber, +willNumber, &willNumber),
%    greaterOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    smallerOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    isaEqualTolerance(+willNumber),
%    lessThan(+willNumber, +willNumber),
%    greaterThan(+willNumber, +willNumber),
%    lessThanOrEqual(+willNumber, +willNumber),
%    greaterThanOrEqual(+willNumber, +willNumber),
%    inBetweenOO(+willNumber, +willNumber, +willNumber),
%    inBetweenCO(+willNumber, +willNumber, +willNumber),
%    inBetweenOC(+willNumber, +willNumber, +willNumber),
%    inBetweenCC(+willNumber, +willNumber, +willNumber),
%    memberOfList(+willAnything, +willList),
%    firstInList(+willList, &willAnything),
%    restOfList(+willList, &willList),
%    positionInList(+willAnything, +willList, &willNumber),
%    nthInList(+willNumber, +willList, &willAnything),
%    lengthOfList(+willList, &willNumber)

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 472.0/472.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 472.0/472.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 472.0/472.0 pos, 0.0/0.0 neg]' score=-Infinity
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for courseprof/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for courseta/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for project/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for project/2.
% [ LazyGroundClauseIndex ]  Building full index for sameperson/2 with 711 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for sameperson/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for sameperson/2.
% [ LazyGroundClauseIndex ]  Building full index for student/1 with 559 assertions.
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -68.304446 (regressionFit = 68.304444, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 72.0/472.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -68.304446): faculty(A) :- courseprof(_, A).  [covers 72.0/472.0 pos, 0.0/0.0 neg]
%     Score = -102.870852 (regressionFit = 102.870851, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 187.0/472.0 pos, 0.0/0.0 neg]
%     Score = -101.991229 (regressionFit = 101.991228, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 456.0/472.0 pos, 0.0/0.0 neg]
%     Score = -14.494119 (regressionFit = 14.494118, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- student(A).  [covers 302.0/472.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -14.494119): faculty(A) :- student(A).  [covers 302.0/472.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- student(A).  [covers 302.0/472.0 pos, 0.0/0.0 neg]' score=-14.494118657059834
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 2 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -90.075474 (regressionFit = 90.075472, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- student(A), project(_, A).  [covers 101.0/472.0 pos, 0.0/0.0 neg]
%     Score = -14.494120 (regressionFit = 14.494118, penalties=2.0100000000000002E-6) for clause:  faculty(A) :- student(A), sameperson(A, A).  [covers 302.0/472.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), sameperson(A, A).  [covers 302.0/472.0 pos, 0.0/0.0 neg]' score=-14.494119657059834
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -90.075475 (regressionFit = 90.075472, penalties=3.12E-6) for clause:  faculty(A) :- student(A), sameperson(A, A), project(_, A).  [covers 101.0/472.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 72.0/472.0 pos, 0.0/0.0 neg]' score=-68.30444556444465
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for courseprof/2.
% [ LazyGroundClauseIndex ]  Building full index for courseta/2 with 121 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for courseta/2.
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 4 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -89.584661 (regressionFit = 89.584659, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/472.0 pos, 0.0/0.0 neg]
%     Score = -66.447763 (regressionFit = 66.447761, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/472.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/472.0 pos, 0.0/0.0 neg]' score=-66.44776331403007
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -88.693881 (regressionFit = 88.693878, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), sameperson(A, A), courseta(B, _).  [covers 31.0/472.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/472.0 pos, 0.0/0.0 neg]' score=-89.58466122090945
% [ LazyGroundClauseIndex ]  Building full index for courseprof/2 with 130 assertions.
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 12 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 9 bad extensions.
%     Score = -88.693881 (regressionFit = 88.693878, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), sameperson(A, A).  [covers 31.0/472.0 pos, 0.0/0.0 neg]
%     Score = -89.584662 (regressionFit = 89.584659, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), sameperson(C, C).  [covers 32.0/472.0 pos, 0.0/0.0 neg]
%     Score = -89.584662 (regressionFit = 89.584659, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), student(C).  [covers 32.0/472.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), project(_, A).  [covers 101.0/472.0 pos, 0.0/0.0 neg]' score=-90.07547381811384
% [ LazyGroundClauseIndex ]  Building full index for project/2 with 392 assertions.
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 3 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -90.075475 (regressionFit = 90.075472, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, _).  [covers 101.0/472.0 pos, 0.0/0.0 neg]
%     Score = -90.075475 (regressionFit = 90.075472, penalties=3.12E-6) for clause:  faculty(A) :- student(A), project(_, A), sameperson(A, A).  [covers 101.0/472.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 456.0/472.0 pos, 0.0/0.0 neg]' score=-101.99122908017684
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -101.728529 (regressionFit = 101.728527, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 172.0/472.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 172.0/472.0 pos, 0.0/0.0 neg]' score=-101.7285292517831
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -101.728530 (regressionFit = 101.728527, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 172.0/472.0 pos, 0.0/0.0 neg]
%     Score = -90.075475 (regressionFit = 90.075472, penalties=3.12E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), student(A).  [covers 101.0/472.0 pos, 0.0/0.0 neg]

***** Warning: #1 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- student(A).  [covers 302.0/472.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- student(A).  [covers 302.0/472.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: faculty(A) :- student(A).  [covers 302.0/472.0 pos, 0.0/0.0 neg]
Comparing variance: 3.529185773642882E-17 to score=0.0025 #egs=302.0
Comparing variance: 0.08525951557094014 to score=0.0025 #egs=170.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 170.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.085260)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.085260) into the LAST position (#1) in the search queue.

% Time for loop #1: 298 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      faculty(A) :- student(A).  [covers 302.0/472.0 pos, 0.0/0.0 neg]
% This clause covers 302 positive examples, of which 302 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 10 positive seeds: 57 79 94 99 109 111 115 130 149 155
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 170.0/170.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 170.0/170.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 170.0/170.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -13.944446 (regressionFit = 13.944444, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 72.0/170.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -13.944446): faculty(A) :- courseprof(_, A).  [covers 72.0/170.0 pos, 0.0/0.0 neg]
%     Score = -13.371817 (regressionFit = 13.371816, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 86.0/170.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -13.371817): faculty(A) :- project(_, A).  [covers 86.0/170.0 pos, 0.0/0.0 neg]
%     Score = -0.000001 (regressionFit = 9.09384e-13, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 154.0/170.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.000001): faculty(A) :- sameperson(A, A).  [covers 154.0/170.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 154.0/170.0 pos, 0.0/0.0 neg]' score=-1.0100009093836798E-6
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -13.440002 (regressionFit = 13.440000, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/170.0 pos, 0.0/0.0 neg]
%     Score = -13.414144 (regressionFit = 13.414141, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/170.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 86.0/170.0 pos, 0.0/0.0 neg]' score=-13.371817288327662
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 3 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -14.191561 (regressionFit = 14.191558, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 44.0/170.0 pos, 0.0/0.0 neg]
%     Score = -13.371818 (regressionFit = 13.371816, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 86.0/170.0 pos, 0.0/0.0 neg]
%     Score = -13.371818 (regressionFit = 13.371816, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 86.0/170.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 86.0/170.0 pos, 0.0/0.0 neg]' score=-13.371818198327661
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 10 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -14.191562 (regressionFit = 14.191558, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 44.0/170.0 pos, 0.0/0.0 neg]
%     Score = -14.301576 (regressionFit = 14.301573, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 66.0/170.0 pos, 0.0/0.0 neg]
%     Score = -14.271655 (regressionFit = 14.271652, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C).  [covers 21.0/170.0 pos, 0.0/0.0 neg]
%     Score = -13.371819 (regressionFit = 13.371816, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 86.0/170.0 pos, 0.0/0.0 neg]
%     Score = -13.371819 (regressionFit = 13.371816, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 86.0/170.0 pos, 0.0/0.0 neg]
%     Score = -13.371819 (regressionFit = 13.371816, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 86.0/170.0 pos, 0.0/0.0 neg]
%     Score = -13.414144 (regressionFit = 13.414141, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, _), sameperson(A, A).  [covers 71.0/170.0 pos, 0.0/0.0 neg]
%     Score = -13.414144 (regressionFit = 13.414141, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(A, C).  [covers 71.0/170.0 pos, 0.0/0.0 neg]
%     Score = -13.414144 (regressionFit = 13.414141, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, A).  [covers 71.0/170.0 pos, 0.0/0.0 neg]
%     Score = -13.647062 (regressionFit = 13.647059, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 85.0/170.0 pos, 0.0/0.0 neg]
%     Score = -14.141940 (regressionFit = 14.141937, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C).  [covers 76.0/170.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 86.0/170.0 pos, 0.0/0.0 neg]' score=-13.371818298327662
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -14.191562 (regressionFit = 14.191558, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 44.0/170.0 pos, 0.0/0.0 neg]
%     Score = -13.371819 (regressionFit = 13.371816, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 86.0/170.0 pos, 0.0/0.0 neg]
%     Score = -13.371819 (regressionFit = 13.371816, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 86.0/170.0 pos, 0.0/0.0 neg]
%     Score = -13.371819 (regressionFit = 13.371816, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 86.0/170.0 pos, 0.0/0.0 neg]
%     Score = -13.414145 (regressionFit = 13.414141, penalties=3.130000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), sameperson(A, A).  [covers 71.0/170.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/170.0 pos, 0.0/0.0 neg]' score=-13.41414353414127
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -13.984255 (regressionFit = 13.984252, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), courseprof(_, A).  [covers 43.0/170.0 pos, 0.0/0.0 neg]
%     Score = -13.414145 (regressionFit = 13.414141, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), project(_, A).  [covers 71.0/170.0 pos, 0.0/0.0 neg]
%     Score = -13.414144 (regressionFit = 13.414141, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 71.0/170.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/170.0 pos, 0.0/0.0 neg]' score=-13.44000211999987
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -13.440003 (regressionFit = 13.440000, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), courseprof(_, A).  [covers 70.0/170.0 pos, 0.0/0.0 neg]
%     Score = -14.158277 (regressionFit = 14.158273, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _).  [covers 31.0/170.0 pos, 0.0/0.0 neg]
%     Score = -13.984255 (regressionFit = 13.984252, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), project(_, A).  [covers 43.0/170.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 72.0/170.0 pos, 0.0/0.0 neg]' score=-13.944445564444436
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 4 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -13.944447 (regressionFit = 13.944444, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 72.0/170.0 pos, 0.0/0.0 neg]
%     Score = -14.338317 (regressionFit = 14.338315, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/170.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 72.0/170.0 pos, 0.0/0.0 neg]' score=-13.944446574444436
%  At # nodes expanded = 9, |OPEN| = 2.  Pruned 6 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -13.944448 (regressionFit = 13.944444, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 72.0/170.0 pos, 0.0/0.0 neg]
%     Score = -14.338318 (regressionFit = 14.338315, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(_, A), courseta(B, _).  [covers 32.0/170.0 pos, 0.0/0.0 neg]
%     Score = -14.338318 (regressionFit = 14.338315, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(B, A), courseta(B, _).  [covers 32.0/170.0 pos, 0.0/0.0 neg]
%     Score = -14.191562 (regressionFit = 14.191558, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), project(_, A).  [covers 44.0/170.0 pos, 0.0/0.0 neg]
%     Score = -13.440003 (regressionFit = 13.440000, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), sameperson(A, A).  [covers 70.0/170.0 pos, 0.0/0.0 neg]

***** Warning: #2 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/170.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/170.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.085.
% Will extend: faculty(A) :- sameperson(A, A).  [covers 154.0/170.0 pos, 0.0/0.0 neg]
Comparing variance: 5.905809751772262E-15 to score=0.0025 #egs=154.0
Comparing variance: -6.938893903907228E-18 to score=0.0025 #egs=16.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #2: 214 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      faculty(A) :- sameperson(A, A).  [covers 154.0/170.0 pos, 0.0/0.0 neg]
% This clause covers 154 positive examples, of which 154 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #1 @ 14:36:59 5/11/17.  [Using 4,427,648 memory cells.]  %%%%%


% FOR faculty(A):
%   if ( student(A) )
%   then return -0.14185106490048782;  // std dev = 1.03e-07, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
%   else if ( sameperson(A, A) )
%   | then return 0.8581489350995098;  // std dev = 9.54e-07, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */


% Clauses:

faculty(A, -0.14185106490048782) :- 
     student(A), 
     !. // Clause #1.

faculty(A, 0.8581489350995098) :- 
     sameperson(A, A), 
     !. // Clause #2.

faculty(A, -0.1418510649004878) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_faculty(a, -0.14185106490048782) :-  /* #neg=302 */ 
   student(a),
   !. // Flattened version of clause #1.

flattened_faculty(a, 0.8581489350995098) :-  /* #pos=154 */ 
   sameperson(a, a),
   !. // Flattened version of clause #2.

flattened_faculty(underscore, -0.1418510649004878) :-  /* #neg=16 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   sameperson(a, a)
%   student(a)

% Saving model in: datasets/WebKB/train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 1 trees is 626 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.08525951557094003
Set score:0.0025
% Only 472 out of 472 converged.
% Kept 154 of the 154 positive examples.
% Kept 336 of the 594 negative examples.
% Dataset size: 490
Computing probabilities
prob time:4 milliseconds
No hidden examples for : faculty
Time to build dataset: 23 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.15384982799249097
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 9 positive seeds: 94 106 110 130 219 263 281 467 486
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 490.0/490.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 490.0/490.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 490.0/490.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -48.648383 (regressionFit = 48.648382, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 71.0/490.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -48.648383): faculty(A) :- courseprof(_, A).  [covers 71.0/490.0 pos, 0.0/0.0 neg]
%     Score = -74.604774 (regressionFit = 74.604773, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 190.0/490.0 pos, 0.0/0.0 neg]
%     Score = -74.144586 (regressionFit = 74.144585, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 473.0/490.0 pos, 0.0/0.0 neg]
%     Score = -10.929562 (regressionFit = 10.929561, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- student(A).  [covers 319.0/490.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -10.929562): faculty(A) :- student(A).  [covers 319.0/490.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- student(A).  [covers 319.0/490.0 pos, 0.0/0.0 neg]' score=-10.929561768092123
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -10.929563 (regressionFit = 10.929561, penalties=2.0100000000000002E-6) for clause:  faculty(A) :- student(A), sameperson(A, A).  [covers 319.0/490.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), sameperson(A, A).  [covers 319.0/490.0 pos, 0.0/0.0 neg]' score=-10.929562768092122
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 71.0/490.0 pos, 0.0/0.0 neg]' score=-48.6483829185576
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 4 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -48.648384 (regressionFit = 48.648382, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 71.0/490.0 pos, 0.0/0.0 neg]
%     Score = -59.564010 (regressionFit = 59.564008, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A).  [covers 43.0/490.0 pos, 0.0/0.0 neg]
%     Score = -47.973176 (regressionFit = 47.973174, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/490.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/490.0 pos, 0.0/0.0 neg]' score=-47.97317575766025
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 2 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -47.973177 (regressionFit = 47.973174, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A), courseprof(_, A).  [covers 70.0/490.0 pos, 0.0/0.0 neg]
%     Score = -59.564011 (regressionFit = 59.564008, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A), project(_, A).  [covers 43.0/490.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 71.0/490.0 pos, 0.0/0.0 neg]' score=-48.6483839285576
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 6 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -48.648385 (regressionFit = 48.648382, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 71.0/490.0 pos, 0.0/0.0 neg]
%     Score = -59.564011 (regressionFit = 59.564008, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), project(_, A).  [covers 43.0/490.0 pos, 0.0/0.0 neg]
%     Score = -47.973177 (regressionFit = 47.973174, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), sameperson(A, A).  [covers 70.0/490.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), project(_, A).  [covers 43.0/490.0 pos, 0.0/0.0 neg]' score=-59.564009766692145
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 5 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -59.564011 (regressionFit = 59.564008, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), project(B, A), project(B, _).  [covers 43.0/490.0 pos, 0.0/0.0 neg]
%     Score = -59.564011 (regressionFit = 59.564008, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A), sameperson(A, A).  [covers 43.0/490.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 473.0/490.0 pos, 0.0/0.0 neg]' score=-74.14458623486964
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -73.693152 (regressionFit = 73.693150, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 174.0/490.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 174.0/490.0 pos, 0.0/0.0 neg]' score=-73.69315235974328
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -59.564011 (regressionFit = 59.564008, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), courseprof(_, A).  [covers 43.0/490.0 pos, 0.0/0.0 neg]
%     Score = -73.693153 (regressionFit = 73.693150, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), project(_, A).  [covers 174.0/490.0 pos, 0.0/0.0 neg]
%     Score = -73.693153 (regressionFit = 73.693150, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 174.0/490.0 pos, 0.0/0.0 neg]

***** Warning: #3 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- student(A).  [covers 319.0/490.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- student(A).  [covers 319.0/490.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: faculty(A) :- student(A).  [covers 319.0/490.0 pos, 0.0/0.0 neg]
Comparing variance: -8.909626780690911E-17 to score=0.0025 #egs=319.0
Comparing variance: 0.06391555998884299 to score=0.0025 #egs=171.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 171.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.063916)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.063916) into the LAST position (#1) in the search queue.

% Time for loop #1: 80 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      faculty(A) :- student(A).  [covers 319.0/490.0 pos, 0.0/0.0 neg]
% This clause covers 319 positive examples, of which 319 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 9 positive seeds: 5 10 19 47 49 57 82 86 117
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 171.0/171.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 171.0/171.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 171.0/171.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10.298468 (regressionFit = 10.298467, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -10.298468): faculty(A) :- courseprof(_, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.026942 (regressionFit = 10.026940, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -10.026942): faculty(A) :- project(_, A).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -0.000001 (regressionFit = -3.97904e-13, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.000001): faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]' score=-1.0099996020960683E-6
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10.093368 (regressionFit = 10.093366, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.072941 (regressionFit = 10.072939, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 87.0/171.0 pos, 0.0/0.0 neg]' score=-10.026941606041188
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 3 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10.524251 (regressionFit = 10.524249, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 43.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.026943 (regressionFit = 10.026940, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.026943 (regressionFit = 10.026940, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 87.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 87.0/171.0 pos, 0.0/0.0 neg]' score=-10.026942516041187
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 10 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -10.524252 (regressionFit = 10.524249, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 43.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.887653 (regressionFit = 10.887650, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 65.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.929042 (regressionFit = 10.929039, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C).  [covers 19.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.026944 (regressionFit = 10.026940, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.026943 (regressionFit = 10.026940, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.026944 (regressionFit = 10.026940, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.072942 (regressionFit = 10.072939, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, _), sameperson(A, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.072942 (regressionFit = 10.072939, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(A, C).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.072942 (regressionFit = 10.072939, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.568512 (regressionFit = 10.568510, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 84.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.883639 (regressionFit = 10.883636, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C).  [covers 74.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 87.0/171.0 pos, 0.0/0.0 neg]' score=-10.026942616041188
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -10.524252 (regressionFit = 10.524249, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 43.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.026944 (regressionFit = 10.026940, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.026944 (regressionFit = 10.026940, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.026944 (regressionFit = 10.026940, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.072942 (regressionFit = 10.072939, penalties=3.130000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), sameperson(A, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]' score=-10.072940810883717
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10.524252 (regressionFit = 10.524249, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), courseprof(_, A).  [covers 43.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.072942 (regressionFit = 10.072939, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), project(_, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.072942 (regressionFit = 10.072939, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 71.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/171.0 pos, 0.0/0.0 neg]' score=-10.093367860596837
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10.093369 (regressionFit = 10.093366, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), courseprof(_, A).  [covers 70.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.093369 (regressionFit = 10.093366, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseprof(B, _).  [covers 70.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.662408 (regressionFit = 10.662405, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _).  [covers 31.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.524252 (regressionFit = 10.524249, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), project(_, A).  [covers 43.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]' score=-10.298467620385082
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10.298469 (regressionFit = 10.298467, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.298469 (regressionFit = 10.298467, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.798980 (regressionFit = 10.798978, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=2] 'faculty(A) :- courseprof(B, A), courseprof(B, _).  [covers 71.0/171.0 pos, 0.0/0.0 neg]' score=-10.298468530385081
%  At # nodes expanded = 9, |OPEN| = 3.  Pruned 12 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -10.298470 (regressionFit = 10.298467, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseprof(_, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.298469 (regressionFit = 10.298467, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), courseprof(_, C).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.298470 (regressionFit = 10.298467, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseprof(B, _).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.798981 (regressionFit = 10.798978, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseta(B, _).  [covers 32.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.524252 (regressionFit = 10.524249, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), project(_, A).  [covers 43.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.524252 (regressionFit = 10.524249, penalties=3.04E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), project(_, C).  [covers 43.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.093369 (regressionFit = 10.093366, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), sameperson(A, A).  [covers 70.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.093369 (regressionFit = 10.093366, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(A, C).  [covers 70.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.093369 (regressionFit = 10.093366, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(C, A).  [covers 70.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.093369 (regressionFit = 10.093366, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(C, C).  [covers 70.0/171.0 pos, 0.0/0.0 neg]

***** Warning: #4 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.064.
% Will extend: faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]
Comparing variance: -2.5837917664003644E-15 to score=0.0025 #egs=154.0
Comparing variance: 0.0 to score=0.0025 #egs=17.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #2: 62 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]
% This clause covers 154 positive examples, of which 154 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #2 @ 14:37:00 5/11/17.  [Using 4,545,840 memory cells.]  %%%%%


% FOR faculty(A):
%   if ( student(A) )
%   then return -0.12544463852839205;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
%   else if ( sameperson(A, A) )
%   | then return 0.7194734122109563;  // std dev = 0.000, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


% Clauses:

faculty(A, -0.12544463852839205) :- 
     student(A), 
     !. // Clause #1.

faculty(A, 0.7194734122109563) :- 
     sameperson(A, A), 
     !. // Clause #2.

faculty(A, -0.12544463852839138) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_faculty(a, -0.12544463852839205) :-  /* #neg=319 */ 
   student(a),
   !. // Flattened version of clause #1.

flattened_faculty(a, 0.7194734122109563) :-  /* #pos=154 */ 
   sameperson(a, a),
   !. // Flattened version of clause #2.

flattened_faculty(underscore, -0.12544463852839138) :-  /* #neg=17 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   sameperson(a, a)
%   student(a)

% Saving model in: datasets/WebKB/train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 2 trees is 876 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06391555998884307
Set score:0.0025
% Only 490 out of 490 converged.
% Kept 154 of the 154 positive examples.
% Kept 304 of the 594 negative examples.
% Dataset size: 458
Computing probabilities
prob time:3 milliseconds
No hidden examples for : faculty
Time to build dataset: 7 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.09949557017121027
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 72 94 126 131 133 146 147 173 212 354
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 458.0/458.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 458.0/458.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 458.0/458.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -30.164926 (regressionFit = 30.164925, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 72.0/458.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -30.164926): faculty(A) :- courseprof(_, A).  [covers 72.0/458.0 pos, 0.0/0.0 neg]
%     Score = -45.091026 (regressionFit = 45.091025, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 179.0/458.0 pos, 0.0/0.0 neg]
%     Score = -44.459659 (regressionFit = 44.459658, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 437.0/458.0 pos, 0.0/0.0 neg]
%     Score = -8.238391 (regressionFit = 8.238390, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- student(A).  [covers 283.0/458.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -8.238391): faculty(A) :- student(A).  [covers 283.0/458.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- student(A).  [covers 283.0/458.0 pos, 0.0/0.0 neg]' score=-8.238391318445101
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 2 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -40.078658 (regressionFit = 40.078656, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- student(A), project(_, A).  [covers 88.0/458.0 pos, 0.0/0.0 neg]
%     Score = -8.238392 (regressionFit = 8.238390, penalties=2.0100000000000002E-6) for clause:  faculty(A) :- student(A), sameperson(A, A).  [covers 283.0/458.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), sameperson(A, A).  [covers 283.0/458.0 pos, 0.0/0.0 neg]' score=-8.2383923184451
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -40.078659 (regressionFit = 40.078656, penalties=3.12E-6) for clause:  faculty(A) :- student(A), sameperson(A, A), project(_, A).  [covers 88.0/458.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 72.0/458.0 pos, 0.0/0.0 neg]' score=-30.164925945530765
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -30.164927 (regressionFit = 30.164925, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 72.0/458.0 pos, 0.0/0.0 neg]
%     Score = -30.164927 (regressionFit = 30.164925, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _).  [covers 72.0/458.0 pos, 0.0/0.0 neg]
%     Score = -39.433122 (regressionFit = 39.433120, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/458.0 pos, 0.0/0.0 neg]
%     Score = -36.652103 (regressionFit = 36.652101, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A).  [covers 44.0/458.0 pos, 0.0/0.0 neg]
%     Score = -29.340099 (regressionFit = 29.340097, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/458.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/458.0 pos, 0.0/0.0 neg]' score=-29.34009881361732
%  At # nodes expanded = 5, |OPEN| = 7.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -29.340100 (regressionFit = 29.340097, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A), courseprof(_, A).  [covers 70.0/458.0 pos, 0.0/0.0 neg]
%     Score = -29.340100 (regressionFit = 29.340097, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), sameperson(A, A), courseprof(B, _).  [covers 70.0/458.0 pos, 0.0/0.0 neg]
%     Score = -39.038332 (regressionFit = 39.038329, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), sameperson(A, A), courseta(B, _).  [covers 31.0/458.0 pos, 0.0/0.0 neg]
%     Score = -36.248405 (regressionFit = 36.248402, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A), project(_, A).  [covers 43.0/458.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(B, A), courseprof(B, _).  [covers 72.0/458.0 pos, 0.0/0.0 neg]' score=-30.164926855530766
%  At # nodes expanded = 6, |OPEN| = 6.  Pruned 12 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -30.164928 (regressionFit = 30.164925, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseprof(_, A).  [covers 72.0/458.0 pos, 0.0/0.0 neg]
%     Score = -30.164928 (regressionFit = 30.164925, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), courseprof(_, C).  [covers 72.0/458.0 pos, 0.0/0.0 neg]
%     Score = -30.164928 (regressionFit = 30.164925, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseprof(B, _).  [covers 72.0/458.0 pos, 0.0/0.0 neg]
%     Score = -39.433123 (regressionFit = 39.433120, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseta(B, _).  [covers 32.0/458.0 pos, 0.0/0.0 neg]
%     Score = -36.652104 (regressionFit = 36.652101, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), project(_, A).  [covers 44.0/458.0 pos, 0.0/0.0 neg]
%     Score = -36.652104 (regressionFit = 36.652101, penalties=3.04E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), project(_, C).  [covers 44.0/458.0 pos, 0.0/0.0 neg]
%     Score = -29.340100 (regressionFit = 29.340097, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), sameperson(A, A).  [covers 70.0/458.0 pos, 0.0/0.0 neg]
%     Score = -29.340100 (regressionFit = 29.340097, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(A, C).  [covers 70.0/458.0 pos, 0.0/0.0 neg]
%     Score = -29.340100 (regressionFit = 29.340097, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(C, A).  [covers 70.0/458.0 pos, 0.0/0.0 neg]
%     Score = -29.340100 (regressionFit = 29.340097, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(C, C).  [covers 70.0/458.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 72.0/458.0 pos, 0.0/0.0 neg]' score=-30.164926955530763
%  At # nodes expanded = 7, |OPEN| = 5.  Pruned 6 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -30.164928 (regressionFit = 30.164925, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 72.0/458.0 pos, 0.0/0.0 neg]
%     Score = -30.164928 (regressionFit = 30.164925, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(_, A), courseprof(B, _).  [covers 72.0/458.0 pos, 0.0/0.0 neg]
%     Score = -30.164928 (regressionFit = 30.164925, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(B, A), courseprof(B, _).  [covers 72.0/458.0 pos, 0.0/0.0 neg]
%     Score = -39.433123 (regressionFit = 39.433120, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(_, A), courseta(B, _).  [covers 32.0/458.0 pos, 0.0/0.0 neg]
%     Score = -39.433123 (regressionFit = 39.433120, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(B, A), courseta(B, _).  [covers 32.0/458.0 pos, 0.0/0.0 neg]
%     Score = -36.652104 (regressionFit = 36.652101, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), project(_, A).  [covers 44.0/458.0 pos, 0.0/0.0 neg]
%     Score = -29.340100 (regressionFit = 29.340097, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), sameperson(A, A).  [covers 70.0/458.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), project(_, A).  [covers 44.0/458.0 pos, 0.0/0.0 neg]' score=-36.65210282553327
%  At # nodes expanded = 8, |OPEN| = 4.  Pruned 5 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -36.652104 (regressionFit = 36.652101, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A), courseprof(_, A).  [covers 44.0/458.0 pos, 0.0/0.0 neg]
%     Score = -36.652104 (regressionFit = 36.652101, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), project(_, A), courseprof(B, _).  [covers 44.0/458.0 pos, 0.0/0.0 neg]
%     Score = -41.461471 (regressionFit = 41.461467, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(B, A), project(_, A), courseta(B, _).  [covers 20.0/458.0 pos, 0.0/0.0 neg]
%     Score = -36.652104 (regressionFit = 36.652101, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A), project(_, A).  [covers 44.0/458.0 pos, 0.0/0.0 neg]
%     Score = -36.652104 (regressionFit = 36.652101, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), project(B, A), project(B, _).  [covers 44.0/458.0 pos, 0.0/0.0 neg]
%     Score = -36.248405 (regressionFit = 36.248402, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A), sameperson(A, A).  [covers 43.0/458.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/458.0 pos, 0.0/0.0 neg]' score=-39.43312220218056
%  At # nodes expanded = 9, |OPEN| = 3.  Pruned 12 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 8 bad extensions.
%     Score = -39.433123 (regressionFit = 39.433120, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), courseprof(_, A).  [covers 32.0/458.0 pos, 0.0/0.0 neg]
%     Score = -41.461471 (regressionFit = 41.461467, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), project(_, A).  [covers 20.0/458.0 pos, 0.0/0.0 neg]
%     Score = -39.038332 (regressionFit = 39.038329, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), sameperson(A, A).  [covers 31.0/458.0 pos, 0.0/0.0 neg]
%     Score = -39.433123 (regressionFit = 39.433120, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), sameperson(C, C).  [covers 32.0/458.0 pos, 0.0/0.0 neg]
%     Score = -39.433123 (regressionFit = 39.433120, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), student(C).  [covers 32.0/458.0 pos, 0.0/0.0 neg]

***** Warning: #5 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- student(A).  [covers 283.0/458.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- student(A).  [covers 283.0/458.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: faculty(A) :- student(A).  [covers 283.0/458.0 pos, 0.0/0.0 neg]
Comparing variance: -1.1612226688658882E-16 to score=0.0025 #egs=283.0
Comparing variance: 0.0470765160482579 to score=0.0025 #egs=175.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 175.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.047077)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.047077) into the LAST position (#1) in the search queue.

% Time for loop #1: 49 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      faculty(A) :- student(A).  [covers 283.0/458.0 pos, 0.0/0.0 neg]
% This clause covers 283 positive examples, of which 283 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 10 positive seeds: 27 52 79 81 87 93 112 116 128 169
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 175.0/175.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 175.0/175.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 175.0/175.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -7.774576 (regressionFit = 7.774575, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 72.0/175.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -7.774576): faculty(A) :- courseprof(_, A).  [covers 72.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.396939 (regressionFit = 7.396938, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 91.0/175.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -7.396939): faculty(A) :- project(_, A).  [covers 91.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.000001 (regressionFit = 2.91489e-13, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 154.0/175.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.000001): faculty(A) :- sameperson(A, A).  [covers 154.0/175.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 154.0/175.0 pos, 0.0/0.0 neg]' score=-1.0100002914890554E-6
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -7.489448 (regressionFit = 7.489446, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.471444 (regressionFit = 7.471442, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/175.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 91.0/175.0 pos, 0.0/0.0 neg]' score=-7.396939201695719
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 3 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -7.990455 (regressionFit = 7.990453, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 44.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.396940 (regressionFit = 7.396938, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 91.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.396940 (regressionFit = 7.396938, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 91.0/175.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 91.0/175.0 pos, 0.0/0.0 neg]' score=-7.396940111695719
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 10 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -7.990456 (regressionFit = 7.990453, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 44.0/175.0 pos, 0.0/0.0 neg]
%     Score = -8.090786 (regressionFit = 8.090782, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 69.0/175.0 pos, 0.0/0.0 neg]
%     Score = -8.185553 (regressionFit = 8.185550, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C).  [covers 21.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.396941 (regressionFit = 7.396938, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 91.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.396941 (regressionFit = 7.396938, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 91.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.396941 (regressionFit = 7.396938, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 91.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.471445 (regressionFit = 7.471442, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, _), sameperson(A, A).  [covers 71.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.471445 (regressionFit = 7.471442, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(A, C).  [covers 71.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.471445 (regressionFit = 7.471442, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, A).  [covers 71.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.815775 (regressionFit = 7.815772, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 88.0/175.0 pos, 0.0/0.0 neg]
%     Score = -8.028230 (regressionFit = 8.028227, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C).  [covers 79.0/175.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 91.0/175.0 pos, 0.0/0.0 neg]' score=-7.3969402116957195
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -7.990456 (regressionFit = 7.990453, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 44.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.396941 (regressionFit = 7.396938, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 91.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.396941 (regressionFit = 7.396938, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 91.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.396941 (regressionFit = 7.396938, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 91.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.471445 (regressionFit = 7.471442, penalties=3.130000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), sameperson(A, A).  [covers 71.0/175.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/175.0 pos, 0.0/0.0 neg]' score=-7.471444379625551
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -7.872432 (regressionFit = 7.872429, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), courseprof(_, A).  [covers 43.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.471445 (regressionFit = 7.471442, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), project(_, A).  [covers 71.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.471445 (regressionFit = 7.471442, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 71.0/175.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/175.0 pos, 0.0/0.0 neg]' score=-7.489447854949947
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -7.489449 (regressionFit = 7.489446, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), courseprof(_, A).  [covers 70.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.996547 (regressionFit = 7.996544, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _).  [covers 31.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.872432 (regressionFit = 7.872429, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), project(_, A).  [covers 43.0/175.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 72.0/175.0 pos, 0.0/0.0 neg]' score=-7.774576328947653
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 4 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -7.774577 (regressionFit = 7.774575, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 72.0/175.0 pos, 0.0/0.0 neg]
%     Score = -8.100884 (regressionFit = 8.100882, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/175.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 72.0/175.0 pos, 0.0/0.0 neg]' score=-7.774577338947653
%  At # nodes expanded = 9, |OPEN| = 2.  Pruned 6 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -7.774578 (regressionFit = 7.774575, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 72.0/175.0 pos, 0.0/0.0 neg]
%     Score = -8.100885 (regressionFit = 8.100882, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(_, A), courseta(B, _).  [covers 32.0/175.0 pos, 0.0/0.0 neg]
%     Score = -8.100885 (regressionFit = 8.100882, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(B, A), courseta(B, _).  [covers 32.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.990456 (regressionFit = 7.990453, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), project(_, A).  [covers 44.0/175.0 pos, 0.0/0.0 neg]
%     Score = -7.489449 (regressionFit = 7.489446, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), sameperson(A, A).  [covers 70.0/175.0 pos, 0.0/0.0 neg]

***** Warning: #6 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/175.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/175.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.047.
% Will extend: faculty(A) :- sameperson(A, A).  [covers 154.0/175.0 pos, 0.0/0.0 neg]
Comparing variance: 1.8917046861145523E-15 to score=0.0025 #egs=154.0
Comparing variance: 7.93016446160826E-18 to score=0.0025 #egs=21.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #2: 43 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      faculty(A) :- sameperson(A, A).  [covers 154.0/175.0 pos, 0.0/0.0 neg]
% This clause covers 154 positive examples, of which 154 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #3 @ 14:37:00 5/11/17.  [Using 4,630,656 memory cells.]  %%%%%


% FOR faculty(A):
%   if ( student(A) )
%   then return -0.11231637819360697;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
%   else if ( sameperson(A, A) )
%   | then return 0.5553664367462833;  // std dev = 5.40e-07, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else return -0.11231637819360636;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */


% Clauses:

faculty(A, -0.11231637819360697) :- 
     student(A), 
     !. // Clause #1.

faculty(A, 0.5553664367462833) :- 
     sameperson(A, A), 
     !. // Clause #2.

faculty(A, -0.11231637819360636) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_faculty(a, -0.11231637819360697) :-  /* #neg=283 */ 
   student(a),
   !. // Flattened version of clause #1.

flattened_faculty(a, 0.5553664367462833) :-  /* #pos=154 */ 
   sameperson(a, a),
   !. // Flattened version of clause #2.

flattened_faculty(underscore, -0.11231637819360636) :-  /* #neg=21 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   sameperson(a, a)
%   student(a)

% Saving model in: datasets/WebKB/train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 3 trees is 1.054 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.04707651604825788
Set score:0.0025
% Only 458 out of 458 converged.
% Kept 154 of the 154 positive examples.
% Kept 304 of the 594 negative examples.
% Dataset size: 458
Computing probabilities
prob time:4 milliseconds
No hidden examples for : faculty
Time to build dataset: 9 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.060142571633351447
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 18 68 106 185 205 239 330 343 353 372
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 458.0/458.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 458.0/458.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 458.0/458.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -17.988369 (regressionFit = 17.988368, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 71.0/458.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -17.988369): faculty(A) :- courseprof(_, A).  [covers 71.0/458.0 pos, 0.0/0.0 neg]
%     Score = -27.292206 (regressionFit = 27.292205, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 181.0/458.0 pos, 0.0/0.0 neg]
%     Score = -27.105312 (regressionFit = 27.105311, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 444.0/458.0 pos, 0.0/0.0 neg]
%     Score = -3.458265 (regressionFit = 3.458264, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- student(A).  [covers 290.0/458.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.458265): faculty(A) :- student(A).  [covers 290.0/458.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- student(A).  [covers 290.0/458.0 pos, 0.0/0.0 neg]' score=-3.4582648247200924
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 2 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -23.795923 (regressionFit = 23.795921, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- student(A), project(_, A).  [covers 97.0/458.0 pos, 0.0/0.0 neg]
%     Score = -3.458266 (regressionFit = 3.458264, penalties=2.0100000000000002E-6) for clause:  faculty(A) :- student(A), sameperson(A, A).  [covers 290.0/458.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), sameperson(A, A).  [covers 290.0/458.0 pos, 0.0/0.0 neg]' score=-3.4582658247200926
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -23.795924 (regressionFit = 23.795921, penalties=3.12E-6) for clause:  faculty(A) :- student(A), sameperson(A, A), project(_, A).  [covers 97.0/458.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 71.0/458.0 pos, 0.0/0.0 neg]' score=-17.98836893140875
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 4 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -21.911250 (regressionFit = 21.911248, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A).  [covers 43.0/458.0 pos, 0.0/0.0 neg]
%     Score = -17.735353 (regressionFit = 17.735351, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/458.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/458.0 pos, 0.0/0.0 neg]' score=-17.735353192303258
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -21.911251 (regressionFit = 21.911248, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A), project(_, A).  [covers 43.0/458.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), project(_, A).  [covers 43.0/458.0 pos, 0.0/0.0 neg]' score=-21.91125007801941
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 5 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -21.911251 (regressionFit = 21.911248, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), project(B, A), project(B, _).  [covers 43.0/458.0 pos, 0.0/0.0 neg]
%     Score = -21.911251 (regressionFit = 21.911248, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A), sameperson(A, A).  [covers 43.0/458.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), project(_, A).  [covers 97.0/458.0 pos, 0.0/0.0 neg]' score=-23.795922662283555
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 3 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -23.795924 (regressionFit = 23.795921, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, _).  [covers 97.0/458.0 pos, 0.0/0.0 neg]
%     Score = -23.795924 (regressionFit = 23.795921, penalties=3.12E-6) for clause:  faculty(A) :- student(A), project(_, A), sameperson(A, A).  [covers 97.0/458.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 444.0/458.0 pos, 0.0/0.0 neg]' score=-27.105311990237347
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -27.011883 (regressionFit = 27.011881, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 168.0/458.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 168.0/458.0 pos, 0.0/0.0 neg]' score=-27.011883284978747
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -21.911251 (regressionFit = 21.911248, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), courseprof(_, A).  [covers 43.0/458.0 pos, 0.0/0.0 neg]
%     Score = -27.011884 (regressionFit = 27.011881, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 168.0/458.0 pos, 0.0/0.0 neg]
%     Score = -23.795924 (regressionFit = 23.795921, penalties=3.12E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), student(A).  [covers 97.0/458.0 pos, 0.0/0.0 neg]

***** Warning: #7 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- student(A).  [covers 290.0/458.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- student(A).  [covers 290.0/458.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: faculty(A) :- student(A).  [covers 290.0/458.0 pos, 0.0/0.0 neg]
Comparing variance: -5.665965780845627E-17 to score=0.0025 #egs=290.0
Comparing variance: 0.020584903659048265 to score=0.0025 #egs=168.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 168.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.020585)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.020585) into the LAST position (#1) in the search queue.

% Time for loop #1: 38 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      faculty(A) :- student(A).  [covers 290.0/458.0 pos, 0.0/0.0 neg]
% This clause covers 290 positive examples, of which 290 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 9 positive seeds: 5 24 30 64 81 90 101 124 140
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 168.0/168.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 168.0/168.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 168.0/168.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3.299359 (regressionFit = 3.299358, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 71.0/168.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.299359): faculty(A) :- courseprof(_, A).  [covers 71.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.227286 (regressionFit = 3.227285, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 84.0/168.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.227286): faculty(A) :- project(_, A).  [covers 84.0/168.0 pos, 0.0/0.0 neg]
%     Score = -0.000001 (regressionFit = 2.16660e-13, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 154.0/168.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.000001): faculty(A) :- sameperson(A, A).  [covers 154.0/168.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 154.0/168.0 pos, 0.0/0.0 neg]' score=-1.0100002166600235E-6
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3.233703 (regressionFit = 3.233701, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.228147 (regressionFit = 3.228145, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/168.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 84.0/168.0 pos, 0.0/0.0 neg]' score=-3.2272862754807803
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 3 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3.350117 (regressionFit = 3.350114, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 43.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.227287 (regressionFit = 3.227285, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 84.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.227287 (regressionFit = 3.227285, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 84.0/168.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 84.0/168.0 pos, 0.0/0.0 neg]' score=-3.2272871854807805
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 10 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3.350118 (regressionFit = 3.350114, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 43.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.327764 (regressionFit = 3.327761, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 67.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.431077 (regressionFit = 3.431074, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C).  [covers 20.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.227288 (regressionFit = 3.227285, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 84.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.227288 (regressionFit = 3.227285, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 84.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.227288 (regressionFit = 3.227285, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 84.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.228148 (regressionFit = 3.228145, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, _), sameperson(A, A).  [covers 71.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.228148 (regressionFit = 3.228145, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(A, C).  [covers 71.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.228148 (regressionFit = 3.228145, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, A).  [covers 71.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.227288 (regressionFit = 3.227285, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 84.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.317260 (regressionFit = 3.317257, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C).  [covers 76.0/168.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 84.0/168.0 pos, 0.0/0.0 neg]' score=-3.2272872854807804
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3.350118 (regressionFit = 3.350114, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 43.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.227288 (regressionFit = 3.227285, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 84.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.227288 (regressionFit = 3.227285, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 84.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.227288 (regressionFit = 3.227285, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 84.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.228148 (regressionFit = 3.228145, penalties=3.130000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), sameperson(A, A).  [covers 71.0/168.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/168.0 pos, 0.0/0.0 neg]' score=-3.2281471616692348
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3.350118 (regressionFit = 3.350114, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), courseprof(_, A).  [covers 43.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.228148 (regressionFit = 3.228145, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), project(_, A).  [covers 71.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.228148 (regressionFit = 3.228145, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 71.0/168.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/168.0 pos, 0.0/0.0 neg]' score=-3.233703349348531
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3.233704 (regressionFit = 3.233701, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), courseprof(_, A).  [covers 70.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.233704 (regressionFit = 3.233701, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseprof(B, _).  [covers 70.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.387128 (regressionFit = 3.387125, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _).  [covers 31.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.350118 (regressionFit = 3.350114, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), project(_, A).  [covers 43.0/168.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 71.0/168.0 pos, 0.0/0.0 neg]' score=-3.2993592713615576
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3.299360 (regressionFit = 3.299358, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 71.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.299360 (regressionFit = 3.299358, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _).  [covers 71.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.429370 (regressionFit = 3.429368, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/168.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=2] 'faculty(A) :- courseprof(B, A), courseprof(B, _).  [covers 71.0/168.0 pos, 0.0/0.0 neg]' score=-3.299360181361558
%  At # nodes expanded = 9, |OPEN| = 3.  Pruned 12 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -3.299361 (regressionFit = 3.299358, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseprof(_, A).  [covers 71.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.299361 (regressionFit = 3.299358, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), courseprof(_, C).  [covers 71.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.299361 (regressionFit = 3.299358, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseprof(B, _).  [covers 71.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.429371 (regressionFit = 3.429368, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseta(B, _).  [covers 32.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.350118 (regressionFit = 3.350114, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), project(_, A).  [covers 43.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.350118 (regressionFit = 3.350114, penalties=3.04E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), project(_, C).  [covers 43.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.233704 (regressionFit = 3.233701, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), sameperson(A, A).  [covers 70.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.233704 (regressionFit = 3.233701, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(A, C).  [covers 70.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.233704 (regressionFit = 3.233701, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(C, A).  [covers 70.0/168.0 pos, 0.0/0.0 neg]
%     Score = -3.233704 (regressionFit = 3.233701, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(C, C).  [covers 70.0/168.0 pos, 0.0/0.0 neg]

***** Warning: #8 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/168.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/168.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.021.
% Will extend: faculty(A) :- sameperson(A, A).  [covers 154.0/168.0 pos, 0.0/0.0 neg]
Comparing variance: 1.4072437299144842E-15 to score=0.0025 #egs=154.0
Comparing variance: -3.96508223080413E-18 to score=0.0025 #egs=14.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #2: 46 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      faculty(A) :- sameperson(A, A).  [covers 154.0/168.0 pos, 0.0/0.0 neg]
% This clause covers 154 positive examples, of which 154 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #4 @ 14:37:00 5/11/17.  [Using 4,636,048 memory cells.]  %%%%%


% FOR faculty(A):
%   if ( student(A) )
%   then return -0.10159632948783662;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
%   else if ( sameperson(A, A) )
%   | then return 0.41751358415830886;  // std dev = 4.66e-07, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


% Clauses:

faculty(A, -0.10159632948783662) :- 
     student(A), 
     !. // Clause #1.

faculty(A, 0.41751358415830886) :- 
     sameperson(A, A), 
     !. // Clause #2.

faculty(A, -0.1015963294878363) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_faculty(a, -0.10159632948783662) :-  /* #neg=290 */ 
   student(a),
   !. // Flattened version of clause #1.

flattened_faculty(a, 0.41751358415830886) :-  /* #pos=154 */ 
   sameperson(a, a),
   !. // Flattened version of clause #2.

flattened_faculty(underscore, -0.1015963294878363) :-  /* #neg=14 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   sameperson(a, a)
%   student(a)

% Saving model in: datasets/WebKB/train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 4 trees is 1.217 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.020584903659048276
Set score:0.0025
% Only 458 out of 458 converged.
% Kept 154 of the 154 positive examples.
% Kept 313 of the 594 negative examples.
% Dataset size: 467
Computing probabilities
prob time:5 milliseconds
No hidden examples for : faculty
Time to build dataset: 10 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.037772767391872374
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 9 positive seeds: 38 45 99 111 131 215 333 410 443
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 467.0/467.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 467.0/467.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 467.0/467.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -11.318286 (regressionFit = 11.318285, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 70.0/467.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -11.318286): faculty(A) :- courseprof(_, A).  [covers 70.0/467.0 pos, 0.0/0.0 neg]
%     Score = -16.871110 (regressionFit = 16.871109, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 38.0/467.0 pos, 0.0/0.0 neg]
%     Score = -17.558230 (regressionFit = 17.558229, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 193.0/467.0 pos, 0.0/0.0 neg]
%     Score = -17.251559 (regressionFit = 17.251558, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 447.0/467.0 pos, 0.0/0.0 neg]
%     Score = -3.025165 (regressionFit = 3.025164, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- student(A).  [covers 293.0/467.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.025165): faculty(A) :- student(A).  [covers 293.0/467.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- student(A).  [covers 293.0/467.0 pos, 0.0/0.0 neg]' score=-3.025165369636606
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 2 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -16.871111 (regressionFit = 16.871109, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- student(A), courseta(_, A).  [covers 38.0/467.0 pos, 0.0/0.0 neg]
%     Score = -3.025166 (regressionFit = 3.025164, penalties=2.0100000000000002E-6) for clause:  faculty(A) :- student(A), sameperson(A, A).  [covers 293.0/467.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), sameperson(A, A).  [covers 293.0/467.0 pos, 0.0/0.0 neg]' score=-3.0251663696366062
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -16.871112 (regressionFit = 16.871109, penalties=3.12E-6) for clause:  faculty(A) :- student(A), sameperson(A, A), courseta(_, A).  [covers 38.0/467.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 70.0/467.0 pos, 0.0/0.0 neg]' score=-11.31828607680232
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11.318287 (regressionFit = 11.318285, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 70.0/467.0 pos, 0.0/0.0 neg]
%     Score = -11.318287 (regressionFit = 11.318285, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _).  [covers 70.0/467.0 pos, 0.0/0.0 neg]
%     Score = -15.090740 (regressionFit = 15.090738, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 31.0/467.0 pos, 0.0/0.0 neg]
%     Score = -14.003901 (regressionFit = 14.003899, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A).  [covers 43.0/467.0 pos, 0.0/0.0 neg]
%     Score = -11.318287 (regressionFit = 11.318285, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/467.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(B, A), courseprof(B, _).  [covers 70.0/467.0 pos, 0.0/0.0 neg]' score=-11.318286986802319
%  At # nodes expanded = 5, |OPEN| = 8.  Pruned 12 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -11.318288 (regressionFit = 11.318285, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseprof(_, A).  [covers 70.0/467.0 pos, 0.0/0.0 neg]
%     Score = -11.318288 (regressionFit = 11.318285, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), courseprof(_, C).  [covers 70.0/467.0 pos, 0.0/0.0 neg]
%     Score = -11.318288 (regressionFit = 11.318285, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseprof(B, _).  [covers 70.0/467.0 pos, 0.0/0.0 neg]
%     Score = -15.090741 (regressionFit = 15.090738, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseta(B, _).  [covers 31.0/467.0 pos, 0.0/0.0 neg]
%     Score = -14.003902 (regressionFit = 14.003899, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), project(_, A).  [covers 43.0/467.0 pos, 0.0/0.0 neg]
%     Score = -14.003902 (regressionFit = 14.003899, penalties=3.04E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), project(_, C).  [covers 43.0/467.0 pos, 0.0/0.0 neg]
%     Score = -11.318288 (regressionFit = 11.318285, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), sameperson(A, A).  [covers 70.0/467.0 pos, 0.0/0.0 neg]
%     Score = -11.318288 (regressionFit = 11.318285, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(A, C).  [covers 70.0/467.0 pos, 0.0/0.0 neg]
%     Score = -11.318288 (regressionFit = 11.318285, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(C, A).  [covers 70.0/467.0 pos, 0.0/0.0 neg]
%     Score = -11.318288 (regressionFit = 11.318285, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(C, C).  [covers 70.0/467.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/467.0 pos, 0.0/0.0 neg]' score=-11.318287076802319
%  At # nodes expanded = 6, |OPEN| = 7.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11.318288 (regressionFit = 11.318285, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A), courseprof(_, A).  [covers 70.0/467.0 pos, 0.0/0.0 neg]
%     Score = -11.318288 (regressionFit = 11.318285, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), sameperson(A, A), courseprof(B, _).  [covers 70.0/467.0 pos, 0.0/0.0 neg]
%     Score = -15.090741 (regressionFit = 15.090738, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), sameperson(A, A), courseta(B, _).  [covers 31.0/467.0 pos, 0.0/0.0 neg]
%     Score = -14.003902 (regressionFit = 14.003899, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A), project(_, A).  [covers 43.0/467.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 70.0/467.0 pos, 0.0/0.0 neg]' score=-11.31828708680232
%  At # nodes expanded = 7, |OPEN| = 6.  Pruned 6 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -11.318288 (regressionFit = 11.318285, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 70.0/467.0 pos, 0.0/0.0 neg]
%     Score = -11.318288 (regressionFit = 11.318285, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(_, A), courseprof(B, _).  [covers 70.0/467.0 pos, 0.0/0.0 neg]
%     Score = -11.318288 (regressionFit = 11.318285, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(B, A), courseprof(B, _).  [covers 70.0/467.0 pos, 0.0/0.0 neg]
%     Score = -15.090741 (regressionFit = 15.090738, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(_, A), courseta(B, _).  [covers 31.0/467.0 pos, 0.0/0.0 neg]
%     Score = -15.090741 (regressionFit = 15.090738, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(B, A), courseta(B, _).  [covers 31.0/467.0 pos, 0.0/0.0 neg]
%     Score = -14.003902 (regressionFit = 14.003899, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), project(_, A).  [covers 43.0/467.0 pos, 0.0/0.0 neg]
%     Score = -11.318288 (regressionFit = 11.318285, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), sameperson(A, A).  [covers 70.0/467.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), project(_, A).  [covers 43.0/467.0 pos, 0.0/0.0 neg]' score=-14.00390112912988
%  At # nodes expanded = 8, |OPEN| = 5.  Pruned 5 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -14.003902 (regressionFit = 14.003899, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A), courseprof(_, A).  [covers 43.0/467.0 pos, 0.0/0.0 neg]
%     Score = -14.003902 (regressionFit = 14.003899, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), project(_, A), courseprof(B, _).  [covers 43.0/467.0 pos, 0.0/0.0 neg]
%     Score = -16.035747 (regressionFit = 16.035744, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(B, A), project(_, A), courseta(B, _).  [covers 20.0/467.0 pos, 0.0/0.0 neg]
%     Score = -14.003902 (regressionFit = 14.003899, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), project(B, A), project(B, _).  [covers 43.0/467.0 pos, 0.0/0.0 neg]
%     Score = -14.003902 (regressionFit = 14.003899, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A), sameperson(A, A).  [covers 43.0/467.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 31.0/467.0 pos, 0.0/0.0 neg]' score=-15.090739698960705
%  At # nodes expanded = 9, |OPEN| = 4.  Pruned 12 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 8 bad extensions.
%     Score = -15.090741 (regressionFit = 15.090738, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), courseprof(_, A).  [covers 31.0/467.0 pos, 0.0/0.0 neg]
%     Score = -16.035747 (regressionFit = 16.035744, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), project(_, A).  [covers 20.0/467.0 pos, 0.0/0.0 neg]
%     Score = -15.090741 (regressionFit = 15.090738, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), sameperson(A, A).  [covers 31.0/467.0 pos, 0.0/0.0 neg]
%     Score = -15.090741 (regressionFit = 15.090738, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), sameperson(C, C).  [covers 31.0/467.0 pos, 0.0/0.0 neg]
%     Score = -15.090741 (regressionFit = 15.090738, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), student(C).  [covers 31.0/467.0 pos, 0.0/0.0 neg]

***** Warning: #9 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- student(A).  [covers 293.0/467.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- student(A).  [covers 293.0/467.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: faculty(A) :- student(A).  [covers 293.0/467.0 pos, 0.0/0.0 neg]
Comparing variance: 7.578314161263868E-17 to score=0.0025 #egs=293.0
Comparing variance: 0.01738600206687692 to score=0.0025 #egs=174.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 174.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017386)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017386) into the LAST position (#1) in the search queue.

% Time for loop #1: 44 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      faculty(A) :- student(A).  [covers 293.0/467.0 pos, 0.0/0.0 neg]
% This clause covers 293 positive examples, of which 293 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 10 positive seeds: 22 62 103 112 122 126 127 132 141 169
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 174.0/174.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 174.0/174.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 174.0/174.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -2.760728 (regressionFit = 2.760727, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 70.0/174.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -2.760728): faculty(A) :- courseprof(_, A).  [covers 70.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.666826 (regressionFit = 2.666825, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 91.0/174.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -2.666826): faculty(A) :- project(_, A).  [covers 91.0/174.0 pos, 0.0/0.0 neg]
%     Score = -0.000001 (regressionFit = 8.54039e-14, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 154.0/174.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.000001): faculty(A) :- sameperson(A, A).  [covers 154.0/174.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 154.0/174.0 pos, 0.0/0.0 neg]' score=-1.0100000854039065E-6
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -2.760729 (regressionFit = 2.760727, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.754347 (regressionFit = 2.754345, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/174.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 91.0/174.0 pos, 0.0/0.0 neg]' score=-2.666825759571051
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 3 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -2.896206 (regressionFit = 2.896204, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 43.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.666827 (regressionFit = 2.666825, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 91.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.666827 (regressionFit = 2.666825, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 91.0/174.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 91.0/174.0 pos, 0.0/0.0 neg]' score=-2.6668266695710514
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 10 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -2.896207 (regressionFit = 2.896204, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 43.0/174.0 pos, 0.0/0.0 neg]
%     Score = -3.016829 (regressionFit = 3.016826, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 66.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.666828 (regressionFit = 2.666825, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 91.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.666828 (regressionFit = 2.666825, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 91.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.666828 (regressionFit = 2.666825, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 91.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.754348 (regressionFit = 2.754345, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, _), sameperson(A, A).  [covers 71.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.754348 (regressionFit = 2.754345, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(A, C).  [covers 71.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.754348 (regressionFit = 2.754345, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, A).  [covers 71.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.838902 (regressionFit = 2.838900, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 88.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.985676 (regressionFit = 2.985673, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C).  [covers 77.0/174.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 91.0/174.0 pos, 0.0/0.0 neg]' score=-2.6668267695710512
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -2.896207 (regressionFit = 2.896204, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 43.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.666828 (regressionFit = 2.666825, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 91.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.666828 (regressionFit = 2.666825, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 91.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.666828 (regressionFit = 2.666825, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 91.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.754348 (regressionFit = 2.754345, penalties=3.130000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), sameperson(A, A).  [covers 71.0/174.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/174.0 pos, 0.0/0.0 neg]' score=-2.7543473275318173
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -2.896207 (regressionFit = 2.896204, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), courseprof(_, A).  [covers 43.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.754348 (regressionFit = 2.754345, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), project(_, A).  [covers 71.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.754348 (regressionFit = 2.754345, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 71.0/174.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 70.0/174.0 pos, 0.0/0.0 neg]' score=-2.7607280356122694
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 4 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -2.760729 (regressionFit = 2.760727, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 70.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.939997 (regressionFit = 2.939995, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 31.0/174.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/174.0 pos, 0.0/0.0 neg]' score=-2.760729035612291
%  At # nodes expanded = 8, |OPEN| = 3.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -2.760730 (regressionFit = 2.760727, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), courseprof(_, A).  [covers 70.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.939998 (regressionFit = 2.939995, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _).  [covers 31.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.896207 (regressionFit = 2.896204, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), project(_, A).  [covers 43.0/174.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 70.0/174.0 pos, 0.0/0.0 neg]' score=-2.7607290456122695
%  At # nodes expanded = 9, |OPEN| = 2.  Pruned 6 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -2.760730 (regressionFit = 2.760727, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 70.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.939998 (regressionFit = 2.939995, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(_, A), courseta(B, _).  [covers 31.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.939998 (regressionFit = 2.939995, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(B, A), courseta(B, _).  [covers 31.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.896207 (regressionFit = 2.896204, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), project(_, A).  [covers 43.0/174.0 pos, 0.0/0.0 neg]
%     Score = -2.760730 (regressionFit = 2.760727, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), sameperson(A, A).  [covers 70.0/174.0 pos, 0.0/0.0 neg]

***** Warning: #10 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/174.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/174.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.017.
% Will extend: faculty(A) :- sameperson(A, A).  [covers 154.0/174.0 pos, 0.0/0.0 neg]
Comparing variance: 5.536696642286495E-16 to score=0.0025 #egs=154.0
Comparing variance: 6.938893903907228E-18 to score=0.0025 #egs=20.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #2: 43 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      faculty(A) :- sameperson(A, A).  [covers 154.0/174.0 pos, 0.0/0.0 neg]
% This clause covers 154 positive examples, of which 154 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #5 @ 14:37:00 5/11/17.  [Using 4,642,912 memory cells.]  %%%%%


% FOR faculty(A):
%   if ( student(A) )
%   then return -0.09269127618926043;  // std dev = 1.49e-07, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   else if ( sameperson(A, A) )
%   | then return 0.3207118471601497;  // std dev = 2.92e-07, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else return -0.09269127618926093;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


% Clauses:

faculty(A, -0.09269127618926043) :- 
     student(A), 
     !. // Clause #1.

faculty(A, 0.3207118471601497) :- 
     sameperson(A, A), 
     !. // Clause #2.

faculty(A, -0.09269127618926093) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_faculty(a, -0.09269127618926043) :-  /* #neg=293 */ 
   student(a),
   !. // Flattened version of clause #1.

flattened_faculty(a, 0.3207118471601497) :-  /* #pos=154 */ 
   sameperson(a, a),
   !. // Flattened version of clause #2.

flattened_faculty(underscore, -0.09269127618926093) :-  /* #neg=20 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   sameperson(a, a)
%   student(a)

% Saving model in: datasets/WebKB/train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 5 trees is 1.401 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.017386002066876904
Set score:0.0025
% Only 467 out of 467 converged.
% Kept 154 of the 154 positive examples.
% Kept 300 of the 594 negative examples.
% Dataset size: 454
Computing probabilities
prob time:3 milliseconds
No hidden examples for : faculty
Time to build dataset: 9 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.02596567568808569
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 21 41 55 56 107 222 242 287 307 340
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 454.0/454.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 454.0/454.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 454.0/454.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -7.710844 (regressionFit = 7.710843, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 71.0/454.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -7.710844): faculty(A) :- courseprof(_, A).  [covers 71.0/454.0 pos, 0.0/0.0 neg]
%     Score = -11.722447 (regressionFit = 11.722446, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 186.0/454.0 pos, 0.0/0.0 neg]
%     Score = -11.553009 (regressionFit = 11.553008, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 437.0/454.0 pos, 0.0/0.0 neg]
%     Score = -1.773549 (regressionFit = 1.773548, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- student(A).  [covers 283.0/454.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.773549): faculty(A) :- student(A).  [covers 283.0/454.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- student(A).  [covers 283.0/454.0 pos, 0.0/0.0 neg]' score=-1.7735487794372733
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 2 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10.100849 (regressionFit = 10.100847, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- student(A), project(_, A).  [covers 99.0/454.0 pos, 0.0/0.0 neg]
%     Score = -1.773550 (regressionFit = 1.773548, penalties=2.0100000000000002E-6) for clause:  faculty(A) :- student(A), sameperson(A, A).  [covers 283.0/454.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), sameperson(A, A).  [covers 283.0/454.0 pos, 0.0/0.0 neg]' score=-1.7735497794372732
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10.100850 (regressionFit = 10.100847, penalties=3.12E-6) for clause:  faculty(A) :- student(A), sameperson(A, A), project(_, A).  [covers 99.0/454.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 71.0/454.0 pos, 0.0/0.0 neg]' score=-7.710843896114523
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 4 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -7.710845 (regressionFit = 7.710843, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 71.0/454.0 pos, 0.0/0.0 neg]
%     Score = -10.207850 (regressionFit = 10.207848, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/454.0 pos, 0.0/0.0 neg]
%     Score = -9.385812 (regressionFit = 9.385810, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A).  [covers 43.0/454.0 pos, 0.0/0.0 neg]
%     Score = -7.602191 (regressionFit = 7.602189, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/454.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/454.0 pos, 0.0/0.0 neg]' score=-7.602191338928218
%  At # nodes expanded = 5, |OPEN| = 6.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -7.602192 (regressionFit = 7.602189, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A), courseprof(_, A).  [covers 70.0/454.0 pos, 0.0/0.0 neg]
%     Score = -10.105446 (regressionFit = 10.105443, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), sameperson(A, A), courseta(B, _).  [covers 31.0/454.0 pos, 0.0/0.0 neg]
%     Score = -9.385813 (regressionFit = 9.385810, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A), project(_, A).  [covers 43.0/454.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 71.0/454.0 pos, 0.0/0.0 neg]' score=-7.710844906114523
%  At # nodes expanded = 6, |OPEN| = 5.  Pruned 6 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -7.710846 (regressionFit = 7.710843, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 71.0/454.0 pos, 0.0/0.0 neg]
%     Score = -10.207851 (regressionFit = 10.207848, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(_, A), courseta(B, _).  [covers 32.0/454.0 pos, 0.0/0.0 neg]
%     Score = -10.207851 (regressionFit = 10.207848, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(B, A), courseta(B, _).  [covers 32.0/454.0 pos, 0.0/0.0 neg]
%     Score = -9.385813 (regressionFit = 9.385810, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), project(_, A).  [covers 43.0/454.0 pos, 0.0/0.0 neg]
%     Score = -7.602192 (regressionFit = 7.602189, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), sameperson(A, A).  [covers 70.0/454.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), project(_, A).  [covers 43.0/454.0 pos, 0.0/0.0 neg]' score=-9.385812485694485
%  At # nodes expanded = 7, |OPEN| = 4.  Pruned 5 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -9.385813 (regressionFit = 9.385810, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A), courseprof(_, A).  [covers 43.0/454.0 pos, 0.0/0.0 neg]
%     Score = -10.730150 (regressionFit = 10.730147, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(B, A), project(_, A), courseta(B, _).  [covers 20.0/454.0 pos, 0.0/0.0 neg]
%     Score = -9.385813 (regressionFit = 9.385810, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), project(B, A), project(B, _).  [covers 43.0/454.0 pos, 0.0/0.0 neg]
%     Score = -9.385813 (regressionFit = 9.385810, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A), sameperson(A, A).  [covers 43.0/454.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), project(_, A).  [covers 99.0/454.0 pos, 0.0/0.0 neg]' score=-10.10084891094102
%  At # nodes expanded = 8, |OPEN| = 3.  Pruned 3 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10.100850 (regressionFit = 10.100847, penalties=3.130000000000001E-6) for clause:  faculty(A) :- student(A), project(_, A), project(_, A).  [covers 99.0/454.0 pos, 0.0/0.0 neg]
%     Score = -10.100850 (regressionFit = 10.100847, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, _).  [covers 99.0/454.0 pos, 0.0/0.0 neg]
%     Score = -10.100850 (regressionFit = 10.100847, penalties=3.12E-6) for clause:  faculty(A) :- student(A), project(_, A), sameperson(A, A).  [covers 99.0/454.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/454.0 pos, 0.0/0.0 neg]' score=-10.20784985320781
%  At # nodes expanded = 9, |OPEN| = 2.  Pruned 12 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 8 bad extensions.
%     Score = -10.207851 (regressionFit = 10.207848, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), courseprof(_, A).  [covers 32.0/454.0 pos, 0.0/0.0 neg]
%     Score = -10.730150 (regressionFit = 10.730147, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), project(_, A).  [covers 20.0/454.0 pos, 0.0/0.0 neg]
%     Score = -10.105446 (regressionFit = 10.105443, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), sameperson(A, A).  [covers 31.0/454.0 pos, 0.0/0.0 neg]
%     Score = -10.207851 (regressionFit = 10.207848, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), sameperson(C, C).  [covers 32.0/454.0 pos, 0.0/0.0 neg]
%     Score = -10.207851 (regressionFit = 10.207848, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), student(C).  [covers 32.0/454.0 pos, 0.0/0.0 neg]

***** Warning: #11 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- student(A).  [covers 283.0/454.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- student(A).  [covers 283.0/454.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: faculty(A) :- student(A).  [covers 283.0/454.0 pos, 0.0/0.0 neg]
Comparing variance: 3.6092055924210034E-17 to score=0.0025 #egs=283.0
Comparing variance: 0.010371624382674053 to score=0.0025 #egs=171.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 171.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.010372)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.010372) into the LAST position (#1) in the search queue.

% Time for loop #1: 33 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      faculty(A) :- student(A).  [covers 283.0/454.0 pos, 0.0/0.0 neg]
% This clause covers 283 positive examples, of which 283 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 20 69 76 83 85 91 96 163
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 171.0/171.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 171.0/171.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 171.0/171.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.671141 (regressionFit = 1.671140, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.671141): faculty(A) :- courseprof(_, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.627080 (regressionFit = 1.627079, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.627080): faculty(A) :- project(_, A).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -0.000001 (regressionFit = -3.00593e-14, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.000001): faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]' score=-1.0099999699407119E-6
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.637860 (regressionFit = 1.637858, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.634545 (regressionFit = 1.634543, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 87.0/171.0 pos, 0.0/0.0 neg]' score=-1.627080041733542
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 3 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.707780 (regressionFit = 1.707778, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 43.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.627081 (regressionFit = 1.627079, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.627081 (regressionFit = 1.627079, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 87.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 87.0/171.0 pos, 0.0/0.0 neg]' score=-1.627080951733542
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 10 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -1.707781 (regressionFit = 1.707778, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 43.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.741852 (regressionFit = 1.741849, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 67.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.769068 (regressionFit = 1.769065, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C).  [covers 18.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.627082 (regressionFit = 1.627079, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.627082 (regressionFit = 1.627079, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.627082 (regressionFit = 1.627079, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.634546 (regressionFit = 1.634543, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, _), sameperson(A, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.634546 (regressionFit = 1.634543, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(A, C).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.634546 (regressionFit = 1.634543, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.735442 (regressionFit = 1.735439, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 83.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.755747 (regressionFit = 1.755744, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C).  [covers 75.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 87.0/171.0 pos, 0.0/0.0 neg]' score=-1.627081051733542
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -1.707781 (regressionFit = 1.707778, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 43.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.627082 (regressionFit = 1.627079, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.627082 (regressionFit = 1.627079, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.627082 (regressionFit = 1.627079, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.634546 (regressionFit = 1.634543, penalties=3.130000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), sameperson(A, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]' score=-1.6345452038716464
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.707781 (regressionFit = 1.707778, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), courseprof(_, A).  [covers 43.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.634546 (regressionFit = 1.634543, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), project(_, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.634546 (regressionFit = 1.634543, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 71.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/171.0 pos, 0.0/0.0 neg]' score=-1.6378599160779945
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.637861 (regressionFit = 1.637858, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), courseprof(_, A).  [covers 70.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.637861 (regressionFit = 1.637858, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseprof(B, _).  [covers 70.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.730199 (regressionFit = 1.730196, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _).  [covers 31.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.707781 (regressionFit = 1.707778, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), project(_, A).  [covers 43.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]' score=-1.6711407654664014
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.671142 (regressionFit = 1.671140, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.671142 (regressionFit = 1.671140, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.752360 (regressionFit = 1.752358, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=2] 'faculty(A) :- courseprof(B, A), courseprof(B, _).  [covers 71.0/171.0 pos, 0.0/0.0 neg]' score=-1.6711416754664015
%  At # nodes expanded = 9, |OPEN| = 3.  Pruned 12 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -1.671143 (regressionFit = 1.671140, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseprof(_, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.671143 (regressionFit = 1.671140, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), courseprof(_, C).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.671143 (regressionFit = 1.671140, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseprof(B, _).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.752361 (regressionFit = 1.752358, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseta(B, _).  [covers 32.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.707781 (regressionFit = 1.707778, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), project(_, A).  [covers 43.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.707781 (regressionFit = 1.707778, penalties=3.04E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), project(_, C).  [covers 43.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.637861 (regressionFit = 1.637858, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), sameperson(A, A).  [covers 70.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.637861 (regressionFit = 1.637858, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(A, C).  [covers 70.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.637861 (regressionFit = 1.637858, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(C, A).  [covers 70.0/171.0 pos, 0.0/0.0 neg]
%     Score = -1.637861 (regressionFit = 1.637858, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(C, C).  [covers 70.0/171.0 pos, 0.0/0.0 neg]

***** Warning: #12 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.010.
% Will extend: faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]
Comparing variance: -1.9609133941431335E-16 to score=0.0025 #egs=154.0
Comparing variance: 8.163404592832034E-18 to score=0.0025 #egs=17.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #2: 41 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]
% This clause covers 154 positive examples, of which 154 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #6 @ 14:37:00 5/11/17.  [Using 4,650,792 memory cells.]  %%%%%


% FOR faculty(A):
%   if ( student(A) )
%   then return -0.08518475138839678;  // std dev = 1.01e-07, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
%   else if ( sameperson(A, A) )
%   | then return 0.25517224256949045;  // std dev = 0.000, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else return -0.08518475138839685;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


% Clauses:

faculty(A, -0.08518475138839678) :- 
     student(A), 
     !. // Clause #1.

faculty(A, 0.25517224256949045) :- 
     sameperson(A, A), 
     !. // Clause #2.

faculty(A, -0.08518475138839685) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_faculty(a, -0.08518475138839678) :-  /* #neg=283 */ 
   student(a),
   !. // Flattened version of clause #1.

flattened_faculty(a, 0.25517224256949045) :-  /* #pos=154 */ 
   sameperson(a, a),
   !. // Flattened version of clause #2.

flattened_faculty(underscore, -0.08518475138839685) :-  /* #neg=17 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   sameperson(a, a)
%   student(a)

% Saving model in: datasets/WebKB/train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 6 trees is 1.568 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.010371624382674055
Set score:0.0025
% Only 454 out of 454 converged.
% Kept 154 of the 154 positive examples.
% Kept 316 of the 594 negative examples.
% Dataset size: 470
Computing probabilities
prob time:4 milliseconds
No hidden examples for : faculty
Time to build dataset: 10 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.01834034481473686
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 82 96 179 202 209 210 213 217 223 236
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 470.0/470.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 470.0/470.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 470.0/470.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -5.603012 (regressionFit = 5.603011, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 71.0/470.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -5.603012): faculty(A) :- courseprof(_, A).  [covers 71.0/470.0 pos, 0.0/0.0 neg]
%     Score = -8.207729 (regressionFit = 8.207727, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 42.0/470.0 pos, 0.0/0.0 neg]
%     Score = -8.579577 (regressionFit = 8.579576, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 194.0/470.0 pos, 0.0/0.0 neg]
%     Score = -8.413670 (regressionFit = 8.413669, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 448.0/470.0 pos, 0.0/0.0 neg]
%     Score = -1.602605 (regressionFit = 1.602604, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- student(A).  [covers 294.0/470.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.602605): faculty(A) :- student(A).  [covers 294.0/470.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- student(A).  [covers 294.0/470.0 pos, 0.0/0.0 neg]' score=-1.6026047163194184
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -8.207730 (regressionFit = 8.207727, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- student(A), courseta(_, A).  [covers 42.0/470.0 pos, 0.0/0.0 neg]
%     Score = -7.455593 (regressionFit = 7.455591, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- student(A), project(_, A).  [covers 102.0/470.0 pos, 0.0/0.0 neg]
%     Score = -1.602606 (regressionFit = 1.602604, penalties=2.0100000000000002E-6) for clause:  faculty(A) :- student(A), sameperson(A, A).  [covers 294.0/470.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), sameperson(A, A).  [covers 294.0/470.0 pos, 0.0/0.0 neg]' score=-1.6026057163194183
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -8.207731 (regressionFit = 8.207727, penalties=3.12E-6) for clause:  faculty(A) :- student(A), sameperson(A, A), courseta(_, A).  [covers 42.0/470.0 pos, 0.0/0.0 neg]
%     Score = -7.455594 (regressionFit = 7.455591, penalties=3.12E-6) for clause:  faculty(A) :- student(A), sameperson(A, A), project(_, A).  [covers 102.0/470.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 71.0/470.0 pos, 0.0/0.0 neg]' score=-5.603012123696187
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 4 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -6.838766 (regressionFit = 6.838764, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A).  [covers 43.0/470.0 pos, 0.0/0.0 neg]
%     Score = -5.524614 (regressionFit = 5.524612, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/470.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/470.0 pos, 0.0/0.0 neg]' score=-5.524614169420876
%  At # nodes expanded = 5, |OPEN| = 6.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -6.838767 (regressionFit = 6.838764, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A), project(_, A).  [covers 43.0/470.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), project(_, A).  [covers 43.0/470.0 pos, 0.0/0.0 neg]' score=-6.838765891042915
%  At # nodes expanded = 6, |OPEN| = 5.  Pruned 5 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -6.838767 (regressionFit = 6.838764, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), project(B, A), project(B, _).  [covers 43.0/470.0 pos, 0.0/0.0 neg]
%     Score = -6.838767 (regressionFit = 6.838764, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A), sameperson(A, A).  [covers 43.0/470.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), project(_, A).  [covers 102.0/470.0 pos, 0.0/0.0 neg]' score=-7.455593275485771
%  At # nodes expanded = 7, |OPEN| = 4.  Pruned 3 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -8.547223 (regressionFit = 8.547220, penalties=3.230000000000001E-6) for clause:  faculty(A) :- student(A), project(_, A), courseta(_, A).  [covers 8.0/470.0 pos, 0.0/0.0 neg]
%     Score = -7.455594 (regressionFit = 7.455591, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, _).  [covers 102.0/470.0 pos, 0.0/0.0 neg]
%     Score = -7.455594 (regressionFit = 7.455591, penalties=3.12E-6) for clause:  faculty(A) :- student(A), project(_, A), sameperson(A, A).  [covers 102.0/470.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseta(_, A).  [covers 42.0/470.0 pos, 0.0/0.0 neg]' score=-8.207728513112276
%  At # nodes expanded = 8, |OPEN| = 3.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -8.423487 (regressionFit = 8.423485, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, _).  [covers 21.0/470.0 pos, 0.0/0.0 neg]
%     Score = -8.207730 (regressionFit = 8.207727, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseta(_, A), courseta(_, A).  [covers 42.0/470.0 pos, 0.0/0.0 neg]
%     Score = -8.547222 (regressionFit = 8.547220, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- courseta(_, A), project(_, A).  [covers 8.0/470.0 pos, 0.0/0.0 neg]
%     Score = -8.207730 (regressionFit = 8.207727, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- courseta(_, A), sameperson(A, A).  [covers 42.0/470.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseta(_, A), sameperson(A, A).  [covers 42.0/470.0 pos, 0.0/0.0 neg]' score=-8.207729513112275
%  At # nodes expanded = 9, |OPEN| = 6.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -8.423488 (regressionFit = 8.423485, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- courseta(B, A), sameperson(A, A), courseprof(B, _).  [covers 21.0/470.0 pos, 0.0/0.0 neg]
%     Score = -8.207731 (regressionFit = 8.207727, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseta(_, A), sameperson(A, A), courseta(_, A).  [covers 42.0/470.0 pos, 0.0/0.0 neg]
%     Score = -8.547223 (regressionFit = 8.547220, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseta(_, A), sameperson(A, A), project(_, A).  [covers 8.0/470.0 pos, 0.0/0.0 neg]
%     Score = -8.207731 (regressionFit = 8.207727, penalties=3.12E-6) for clause:  faculty(A) :- courseta(_, A), sameperson(A, A), student(A).  [covers 42.0/470.0 pos, 0.0/0.0 neg]

***** Warning: #13 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- student(A).  [covers 294.0/470.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- student(A).  [covers 294.0/470.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: faculty(A) :- student(A).  [covers 294.0/470.0 pos, 0.0/0.0 neg]
Comparing variance: 6.042030065987246E-18 to score=0.0025 #egs=294.0
Comparing variance: 0.009105702876814866 to score=0.0025 #egs=176.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 176.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.009106)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.009106) into the LAST position (#1) in the search queue.

% Time for loop #1: 36 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      faculty(A) :- student(A).  [covers 294.0/470.0 pos, 0.0/0.0 neg]
% This clause covers 294 positive examples, of which 294 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 10 positive seeds: 8 28 31 47 61 69 101 131 134 137
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 176.0/176.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 176.0/176.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 176.0/176.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.480717 (regressionFit = 1.480716, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 71.0/176.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.480717): faculty(A) :- courseprof(_, A).  [covers 71.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.431490 (regressionFit = 1.431489, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 92.0/176.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.431490): faculty(A) :- project(_, A).  [covers 92.0/176.0 pos, 0.0/0.0 neg]
%     Score = -0.000001 (regressionFit = 6.30607e-14, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 154.0/176.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.000001): faculty(A) :- sameperson(A, A).  [covers 154.0/176.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 154.0/176.0 pos, 0.0/0.0 neg]' score=-1.010000063060668E-6
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.451417 (regressionFit = 1.451415, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.447796 (regressionFit = 1.447794, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/176.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 92.0/176.0 pos, 0.0/0.0 neg]' score=-1.4314897899451382
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 3 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.528587 (regressionFit = 1.528584, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 43.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.431491 (regressionFit = 1.431489, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 92.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.431491 (regressionFit = 1.431489, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 92.0/176.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 92.0/176.0 pos, 0.0/0.0 neg]' score=-1.4314906999451382
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 10 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -1.528588 (regressionFit = 1.528584, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 43.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.550983 (regressionFit = 1.550980, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 71.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.601433 (regressionFit = 1.601430, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C).  [covers 20.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.431492 (regressionFit = 1.431489, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 92.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.431492 (regressionFit = 1.431489, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 92.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.431492 (regressionFit = 1.431489, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 92.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.447797 (regressionFit = 1.447794, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, _), sameperson(A, A).  [covers 71.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.447797 (regressionFit = 1.447794, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(A, C).  [covers 71.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.447797 (regressionFit = 1.447794, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, A).  [covers 71.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.488904 (regressionFit = 1.488901, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 90.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.536884 (regressionFit = 1.536881, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C).  [covers 81.0/176.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 92.0/176.0 pos, 0.0/0.0 neg]' score=-1.431490799945138
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -1.528588 (regressionFit = 1.528584, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 43.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.431492 (regressionFit = 1.431489, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 92.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.431492 (regressionFit = 1.431489, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 92.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.431492 (regressionFit = 1.431489, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 92.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.447797 (regressionFit = 1.447794, penalties=3.130000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), sameperson(A, A).  [covers 71.0/176.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/176.0 pos, 0.0/0.0 neg]' score=-1.447796488702127
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.528588 (regressionFit = 1.528584, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), courseprof(_, A).  [covers 43.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.447797 (regressionFit = 1.447794, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), project(_, A).  [covers 71.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.447797 (regressionFit = 1.447794, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 71.0/176.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/176.0 pos, 0.0/0.0 neg]' score=-1.4514167974213192
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.451418 (regressionFit = 1.451415, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), courseprof(_, A).  [covers 70.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.451418 (regressionFit = 1.451415, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseprof(B, _).  [covers 70.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.553660 (regressionFit = 1.553657, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _).  [covers 31.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.528588 (regressionFit = 1.528584, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), project(_, A).  [covers 43.0/176.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 71.0/176.0 pos, 0.0/0.0 neg]' score=-1.4807166571063506
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1.480718 (regressionFit = 1.480716, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 71.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.480718 (regressionFit = 1.480716, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _).  [covers 71.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.573988 (regressionFit = 1.573986, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/176.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=2] 'faculty(A) :- courseprof(B, A), courseprof(B, _).  [covers 71.0/176.0 pos, 0.0/0.0 neg]' score=-1.4807175671063506
%  At # nodes expanded = 9, |OPEN| = 3.  Pruned 12 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -1.480719 (regressionFit = 1.480716, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseprof(_, A).  [covers 71.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.480718 (regressionFit = 1.480716, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), courseprof(_, C).  [covers 71.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.480719 (regressionFit = 1.480716, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseprof(B, _).  [covers 71.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.573989 (regressionFit = 1.573986, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseta(B, _).  [covers 32.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.528588 (regressionFit = 1.528584, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), project(_, A).  [covers 43.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.528587 (regressionFit = 1.528584, penalties=3.04E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), project(_, C).  [covers 43.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.451418 (regressionFit = 1.451415, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), sameperson(A, A).  [covers 70.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.451418 (regressionFit = 1.451415, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(A, C).  [covers 70.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.451418 (regressionFit = 1.451415, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(C, A).  [covers 70.0/176.0 pos, 0.0/0.0 neg]
%     Score = -1.451418 (regressionFit = 1.451415, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(C, C).  [covers 70.0/176.0 pos, 0.0/0.0 neg]

***** Warning: #14 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/176.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/176.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.009.
% Will extend: faculty(A) :- sameperson(A, A).  [covers 154.0/176.0 pos, 0.0/0.0 neg]
Comparing variance: 4.09484855835772E-16 to score=0.0025 #egs=154.0
Comparing variance: 0.0 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #2: 41 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      faculty(A) :- sameperson(A, A).  [covers 154.0/176.0 pos, 0.0/0.0 neg]
% This clause covers 154 positive examples, of which 154 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #7 @ 14:37:01 5/11/17.  [Using 4,659,648 memory cells.]  %%%%%


% FOR faculty(A):
%   if ( student(A) )
%   then return -0.07877675473109141;  // std dev = 4.21e-08, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
%   else if ( sameperson(A, A) )
%   | then return 0.2097577156325352;  // std dev = 2.51e-07, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


% Clauses:

faculty(A, -0.07877675473109141) :- 
     student(A), 
     !. // Clause #1.

faculty(A, 0.2097577156325352) :- 
     sameperson(A, A), 
     !. // Clause #2.

faculty(A, -0.07877675473109179) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_faculty(a, -0.07877675473109141) :-  /* #neg=294 */ 
   student(a),
   !. // Flattened version of clause #1.

flattened_faculty(a, 0.2097577156325352) :-  /* #pos=154 */ 
   sameperson(a, a),
   !. // Flattened version of clause #2.

flattened_faculty(underscore, -0.07877675473109179) :-  /* #neg=22 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   sameperson(a, a)
%   student(a)

% Saving model in: datasets/WebKB/train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 7 trees is 1.735 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.009105702876814871
Set score:0.0022764257192037177
% Only 470 out of 470 converged.
% Kept 154 of the 154 positive examples.
% Kept 306 of the 594 negative examples.
% Dataset size: 460
Computing probabilities
prob time:4 milliseconds
No hidden examples for : faculty
Time to build dataset: 12 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.013957139822622401
Set score:0.0022764257192037177
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 1 2 40 43 72 83 227 231 232 263
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 460.0/460.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 460.0/460.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 460.0/460.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -4.189408 (regressionFit = 4.189407, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 71.0/460.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -4.189408): faculty(A) :- courseprof(_, A).  [covers 71.0/460.0 pos, 0.0/0.0 neg]
%     Score = -6.349999 (regressionFit = 6.349998, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 179.0/460.0 pos, 0.0/0.0 neg]
%     Score = -6.326315 (regressionFit = 6.326314, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 447.0/460.0 pos, 0.0/0.0 neg]
%     Score = -0.751308 (regressionFit = 0.751307, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- student(A).  [covers 293.0/460.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.751308): faculty(A) :- student(A).  [covers 293.0/460.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- student(A).  [covers 293.0/460.0 pos, 0.0/0.0 neg]' score=-0.7513082039272093
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 2 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -5.568122 (regressionFit = 5.568120, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- student(A), project(_, A).  [covers 96.0/460.0 pos, 0.0/0.0 neg]
%     Score = -0.751309 (regressionFit = 0.751307, penalties=2.0100000000000002E-6) for clause:  faculty(A) :- student(A), sameperson(A, A).  [covers 293.0/460.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), sameperson(A, A).  [covers 293.0/460.0 pos, 0.0/0.0 neg]' score=-0.7513092039272093
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -5.568123 (regressionFit = 5.568120, penalties=3.12E-6) for clause:  faculty(A) :- student(A), sameperson(A, A), project(_, A).  [covers 96.0/460.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 71.0/460.0 pos, 0.0/0.0 neg]' score=-4.189407633570859
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 4 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -5.553987 (regressionFit = 5.553985, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/460.0 pos, 0.0/0.0 neg]
%     Score = -5.104797 (regressionFit = 5.104795, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A).  [covers 43.0/460.0 pos, 0.0/0.0 neg]
%     Score = -4.130535 (regressionFit = 4.130533, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/460.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/460.0 pos, 0.0/0.0 neg]' score=-4.130534688485185
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 2 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -5.498439 (regressionFit = 5.498436, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), sameperson(A, A), courseta(B, _).  [covers 31.0/460.0 pos, 0.0/0.0 neg]
%     Score = -5.104798 (regressionFit = 5.104795, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A), project(_, A).  [covers 43.0/460.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), project(_, A).  [covers 43.0/460.0 pos, 0.0/0.0 neg]' score=-5.104797105234777
%  At # nodes expanded = 6, |OPEN| = 4.  Pruned 5 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -5.840415 (regressionFit = 5.840412, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(B, A), project(_, A), courseta(B, _).  [covers 20.0/460.0 pos, 0.0/0.0 neg]
%     Score = -5.104798 (regressionFit = 5.104795, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A), project(_, A).  [covers 43.0/460.0 pos, 0.0/0.0 neg]
%     Score = -5.104798 (regressionFit = 5.104795, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), project(B, A), project(B, _).  [covers 43.0/460.0 pos, 0.0/0.0 neg]
%     Score = -5.104798 (regressionFit = 5.104795, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A), sameperson(A, A).  [covers 43.0/460.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/460.0 pos, 0.0/0.0 neg]' score=-5.553987421521835
%  At # nodes expanded = 7, |OPEN| = 3.  Pruned 12 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 7 bad extensions.
%     Score = -5.840415 (regressionFit = 5.840412, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), project(_, A).  [covers 20.0/460.0 pos, 0.0/0.0 neg]
%     Score = -6.130117 (regressionFit = 6.130114, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), project(_, C).  [covers 13.0/460.0 pos, 0.0/0.0 neg]
%     Score = -5.498439 (regressionFit = 5.498436, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), sameperson(A, A).  [covers 31.0/460.0 pos, 0.0/0.0 neg]
%     Score = -5.553988 (regressionFit = 5.553985, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), sameperson(C, C).  [covers 32.0/460.0 pos, 0.0/0.0 neg]
%     Score = -5.553988 (regressionFit = 5.553985, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), student(C).  [covers 32.0/460.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), project(_, A).  [covers 96.0/460.0 pos, 0.0/0.0 neg]' score=-5.56812200398735
%  At # nodes expanded = 8, |OPEN| = 2.  Pruned 3 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -5.568123 (regressionFit = 5.568120, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, _).  [covers 96.0/460.0 pos, 0.0/0.0 neg]
%     Score = -5.568123 (regressionFit = 5.568120, penalties=3.12E-6) for clause:  faculty(A) :- student(A), project(_, A), sameperson(A, A).  [covers 96.0/460.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 447.0/460.0 pos, 0.0/0.0 neg]' score=-6.326315294297653
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -6.286104 (regressionFit = 6.286101, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 167.0/460.0 pos, 0.0/0.0 neg]

***** Warning: #15 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- student(A).  [covers 293.0/460.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- student(A).  [covers 293.0/460.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: faculty(A) :- student(A).  [covers 293.0/460.0 pos, 0.0/0.0 neg]
Comparing variance: 3.4102413725687404E-17 to score=0.0022764257192037177 #egs=293.0
Comparing variance: 0.00449884547261796 to score=0.0022764257192037177 #egs=167.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0022764257192037177
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 167.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.004499)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.004499) into the LAST position (#1) in the search queue.

% Time for loop #1: 33 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      faculty(A) :- student(A).  [covers 293.0/460.0 pos, 0.0/0.0 neg]
% This clause covers 293 positive examples, of which 293 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 9 positive seeds: 8 18 44 90 102 106 110 123 152
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 167.0/167.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 167.0/167.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 167.0/167.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0.719840 (regressionFit = 0.719839, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 71.0/167.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.719840): faculty(A) :- courseprof(_, A).  [covers 71.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.705253 (regressionFit = 0.705252, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 83.0/167.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.705253): faculty(A) :- project(_, A).  [covers 83.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.000001 (regressionFit = -4.70735e-14, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 154.0/167.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.000001): faculty(A) :- sameperson(A, A).  [covers 154.0/167.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 154.0/167.0 pos, 0.0/0.0 neg]' score=-1.009999952926544E-6
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0.705541 (regressionFit = 0.705539, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.704403 (regressionFit = 0.704401, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/167.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/167.0 pos, 0.0/0.0 neg]' score=-0.7044034332457518
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0.729317 (regressionFit = 0.729314, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), courseprof(_, A).  [covers 43.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.704404 (regressionFit = 0.704401, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), project(_, A).  [covers 71.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.704404 (regressionFit = 0.704401, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 71.0/167.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 83.0/167.0 pos, 0.0/0.0 neg]' score=-0.7052530196944861
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 3 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0.729316 (regressionFit = 0.729314, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 43.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.705254 (regressionFit = 0.705252, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 83.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.705254 (regressionFit = 0.705252, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 83.0/167.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 83.0/167.0 pos, 0.0/0.0 neg]' score=-0.7052539296944861
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 10 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -0.729317 (regressionFit = 0.729314, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 43.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.737664 (regressionFit = 0.737661, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 65.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.750300 (regressionFit = 0.750297, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C).  [covers 19.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.705255 (regressionFit = 0.705252, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 83.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.705255 (regressionFit = 0.705252, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 83.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.705255 (regressionFit = 0.705252, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 83.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.704404 (regressionFit = 0.704401, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, _), sameperson(A, A).  [covers 71.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.704404 (regressionFit = 0.704401, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(A, C).  [covers 71.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.704404 (regressionFit = 0.704401, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, A).  [covers 71.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.739751 (regressionFit = 0.739749, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 80.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.743119 (regressionFit = 0.743116, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C).  [covers 73.0/167.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 83.0/167.0 pos, 0.0/0.0 neg]' score=-0.7052540296944861
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -0.729317 (regressionFit = 0.729314, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 43.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.705255 (regressionFit = 0.705252, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 83.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.705255 (regressionFit = 0.705252, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 83.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.705255 (regressionFit = 0.705252, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 83.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.704404 (regressionFit = 0.704401, penalties=3.130000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), sameperson(A, A).  [covers 71.0/167.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/167.0 pos, 0.0/0.0 neg]' score=-0.7055408344471179
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0.705542 (regressionFit = 0.705539, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), courseprof(_, A).  [covers 70.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.705542 (regressionFit = 0.705539, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseprof(B, _).  [covers 70.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.736854 (regressionFit = 0.736851, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _).  [covers 31.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.729317 (regressionFit = 0.729314, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), project(_, A).  [covers 43.0/167.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 71.0/167.0 pos, 0.0/0.0 neg]' score=-0.7198404340673187
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0.719841 (regressionFit = 0.719839, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 71.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.719841 (regressionFit = 0.719839, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _).  [covers 71.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.745923 (regressionFit = 0.745921, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/167.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=2] 'faculty(A) :- courseprof(B, A), courseprof(B, _).  [covers 71.0/167.0 pos, 0.0/0.0 neg]' score=-0.7198413440673187
%  At # nodes expanded = 9, |OPEN| = 3.  Pruned 12 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -0.719842 (regressionFit = 0.719839, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseprof(_, A).  [covers 71.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.719842 (regressionFit = 0.719839, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), courseprof(_, C).  [covers 71.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.719842 (regressionFit = 0.719839, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseprof(B, _).  [covers 71.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.745924 (regressionFit = 0.745921, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseta(B, _).  [covers 32.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.729317 (regressionFit = 0.729314, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), project(_, A).  [covers 43.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.729317 (regressionFit = 0.729314, penalties=3.04E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), project(_, C).  [covers 43.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.705542 (regressionFit = 0.705539, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), sameperson(A, A).  [covers 70.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.705542 (regressionFit = 0.705539, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(A, C).  [covers 70.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.705542 (regressionFit = 0.705539, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(C, A).  [covers 70.0/167.0 pos, 0.0/0.0 neg]
%     Score = -0.705542 (regressionFit = 0.705539, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(C, C).  [covers 70.0/167.0 pos, 0.0/0.0 neg]

***** Warning: #16 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/167.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/167.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.004.
% Will extend: faculty(A) :- sameperson(A, A).  [covers 154.0/167.0 pos, 0.0/0.0 neg]
Comparing variance: -3.0567179379290025E-16 to score=0.0022764257192037177 #egs=154.0
Comparing variance: 0.0 to score=0.0022764257192037177 #egs=13.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0022764257192037177
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0022764257192037177

% Time for loop #2: 41 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      faculty(A) :- sameperson(A, A).  [covers 154.0/167.0 pos, 0.0/0.0 neg]
% This clause covers 154 positive examples, of which 154 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #8 @ 14:37:01 5/11/17.  [Using 4,670,584 memory cells.]  %%%%%


% FOR faculty(A):
%   if ( student(A) )
%   then return -0.07324622576333695;  // std dev = 1.00e-07, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   else if ( sameperson(A, A) )
%   | then return 0.1770964977452782;  // std dev = 0.000, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


% Clauses:

faculty(A, -0.07324622576333695) :- 
     student(A), 
     !. // Clause #1.

faculty(A, 0.1770964977452782) :- 
     sameperson(A, A), 
     !. // Clause #2.

faculty(A, -0.07324622576333704) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_faculty(a, -0.07324622576333695) :-  /* #neg=293 */ 
   student(a),
   !. // Flattened version of clause #1.

flattened_faculty(a, 0.1770964977452782) :-  /* #pos=154 */ 
   sameperson(a, a),
   !. // Flattened version of clause #2.

flattened_faculty(underscore, -0.07324622576333704) :-  /* #neg=13 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   sameperson(a, a)
%   student(a)

% Saving model in: datasets/WebKB/train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 8 trees is 1.900 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.0044988454726179565
Set score:0.0011247113681544891
% Only 460 out of 460 converged.
% Kept 154 of the 154 positive examples.
% Kept 294 of the 594 negative examples.
% Dataset size: 448
Computing probabilities
prob time:5 milliseconds
No hidden examples for : faculty
Time to build dataset: 13 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.011034883235004577
Set score:0.0011247113681544891
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 5 positive seeds: 74 113 140 392 394
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 448.0/448.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 448.0/448.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 448.0/448.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -3.286140 (regressionFit = 3.286139, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 72.0/448.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.286140): faculty(A) :- courseprof(_, A).  [covers 72.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.689754 (regressionFit = 4.689753, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 40.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.882379 (regressionFit = 4.882377, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 173.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.816275 (regressionFit = 4.816274, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 427.0/448.0 pos, 0.0/0.0 neg]
%     Score = -0.903979 (regressionFit = 0.903978, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- student(A).  [covers 273.0/448.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.903979): faculty(A) :- student(A).  [covers 273.0/448.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- student(A).  [covers 273.0/448.0 pos, 0.0/0.0 neg]' score=-0.9039786446115824
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -4.689755 (regressionFit = 4.689753, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- student(A), courseta(_, A).  [covers 40.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.363464 (regressionFit = 4.363462, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- student(A), project(_, A).  [covers 82.0/448.0 pos, 0.0/0.0 neg]
%     Score = -0.903980 (regressionFit = 0.903978, penalties=2.0100000000000002E-6) for clause:  faculty(A) :- student(A), sameperson(A, A).  [covers 273.0/448.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), sameperson(A, A).  [covers 273.0/448.0 pos, 0.0/0.0 neg]' score=-0.9039796446115824
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -4.689756 (regressionFit = 4.689753, penalties=3.12E-6) for clause:  faculty(A) :- student(A), sameperson(A, A), courseta(_, A).  [covers 40.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.363465 (regressionFit = 4.363462, penalties=3.12E-6) for clause:  faculty(A) :- student(A), sameperson(A, A), project(_, A).  [covers 82.0/448.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 72.0/448.0 pos, 0.0/0.0 neg]' score=-3.2861401769755685
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 4 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3.195883 (regressionFit = 3.195881, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/448.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/448.0 pos, 0.0/0.0 neg]' score=-3.195882646404619
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 2 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% Consider expanding [#6 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), project(_, A).  [covers 82.0/448.0 pos, 0.0/0.0 neg]' score=-4.363464290711657
%  At # nodes expanded = 6, |OPEN| = 4.  Pruned 3 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -4.363465 (regressionFit = 4.363462, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, _).  [covers 82.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.363465 (regressionFit = 4.363462, penalties=3.12E-6) for clause:  faculty(A) :- student(A), project(_, A), sameperson(A, A).  [covers 82.0/448.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseta(_, A).  [covers 40.0/448.0 pos, 0.0/0.0 neg]' score=-4.689754371457121
%  At # nodes expanded = 7, |OPEN| = 3.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -4.841491 (regressionFit = 4.841489, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, _).  [covers 17.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.689755 (regressionFit = 4.689753, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- courseta(B, A), courseta(B, _).  [covers 40.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.689755 (regressionFit = 4.689753, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseta(_, A), courseta(_, A).  [covers 40.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.689755 (regressionFit = 4.689753, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- courseta(_, A), sameperson(A, A).  [covers 40.0/448.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseta(B, A), courseta(B, _).  [covers 40.0/448.0 pos, 0.0/0.0 neg]' score=-4.689755281457121
%  At # nodes expanded = 8, |OPEN| = 6.  Pruned 12 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -4.841492 (regressionFit = 4.841489, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseta(B, A), courseta(B, _), courseprof(B, _).  [covers 17.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.689756 (regressionFit = 4.689753, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseta(B, A), courseta(B, _), courseta(B, _).  [covers 40.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.689756 (regressionFit = 4.689753, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseta(B, A), courseta(B, _), courseta(_, A).  [covers 40.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.689756 (regressionFit = 4.689753, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- courseta(B, A), courseta(B, C), courseta(_, C).  [covers 40.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.878448 (regressionFit = 4.878445, penalties=3.04E-6) for clause:  faculty(A) :- courseta(B, A), courseta(B, C), project(_, C).  [covers 11.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.689756 (regressionFit = 4.689753, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- courseta(B, A), courseta(B, _), sameperson(A, A).  [covers 40.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.689756 (regressionFit = 4.689753, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseta(B, A), courseta(B, C), sameperson(A, C).  [covers 40.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.689756 (regressionFit = 4.689753, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseta(B, A), courseta(B, C), sameperson(C, A).  [covers 40.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.689756 (regressionFit = 4.689753, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseta(B, A), courseta(B, C), sameperson(C, C).  [covers 40.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.689756 (regressionFit = 4.689753, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- courseta(B, A), courseta(B, _), student(A).  [covers 40.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.689756 (regressionFit = 4.689753, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseta(B, A), courseta(B, C), student(C).  [covers 40.0/448.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseta(_, A), sameperson(A, A).  [covers 40.0/448.0 pos, 0.0/0.0 neg]' score=-4.689755371457121
%  At # nodes expanded = 9, |OPEN| = 5.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -4.841492 (regressionFit = 4.841489, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- courseta(B, A), sameperson(A, A), courseprof(B, _).  [covers 17.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.689756 (regressionFit = 4.689753, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- courseta(B, A), sameperson(A, A), courseta(B, _).  [covers 40.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.689756 (regressionFit = 4.689753, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseta(_, A), sameperson(A, A), courseta(_, A).  [covers 40.0/448.0 pos, 0.0/0.0 neg]
%     Score = -4.689756 (regressionFit = 4.689753, penalties=3.12E-6) for clause:  faculty(A) :- courseta(_, A), sameperson(A, A), student(A).  [covers 40.0/448.0 pos, 0.0/0.0 neg]

***** Warning: #17 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- student(A).  [covers 273.0/448.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- student(A).  [covers 273.0/448.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: faculty(A) :- student(A).  [covers 273.0/448.0 pos, 0.0/0.0 neg]
Comparing variance: -3.172065784643304E-17 to score=0.0011247113681544891 #egs=273.0
Comparing variance: 0.0051655864834948065 to score=0.0011247113681544891 #egs=175.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0011247113681544891
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 175.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.005166)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.005166) into the LAST position (#1) in the search queue.

% Time for loop #1: 27 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      faculty(A) :- student(A).  [covers 273.0/448.0 pos, 0.0/0.0 neg]
% This clause covers 273 positive examples, of which 273 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 10 positive seeds: 10 22 44 55 82 121 123 128 159 168
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 175.0/175.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 175.0/175.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 175.0/175.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0.853086 (regressionFit = 0.853084, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 72.0/175.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.853086): faculty(A) :- courseprof(_, A).  [covers 72.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.811648 (regressionFit = 0.811647, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 91.0/175.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.811648): faculty(A) :- project(_, A).  [covers 91.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.000001 (regressionFit = -5.82867e-15, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 154.0/175.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.000001): faculty(A) :- sameperson(A, A).  [covers 154.0/175.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 154.0/175.0 pos, 0.0/0.0 neg]' score=-1.0099999941713294E-6
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0.821800 (regressionFit = 0.821798, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.819824 (regressionFit = 0.819822, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/175.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 91.0/175.0 pos, 0.0/0.0 neg]' score=-0.8116483399193198
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 3 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0.876774 (regressionFit = 0.876772, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 44.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.811649 (regressionFit = 0.811647, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 91.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.811649 (regressionFit = 0.811647, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 91.0/175.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 91.0/175.0 pos, 0.0/0.0 neg]' score=-0.8116492499193199
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 10 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -0.876775 (regressionFit = 0.876772, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 44.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.887784 (regressionFit = 0.887781, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 69.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.811650 (regressionFit = 0.811647, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 91.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.811650 (regressionFit = 0.811647, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 91.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.811650 (regressionFit = 0.811647, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 91.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.819825 (regressionFit = 0.819822, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, _), sameperson(A, A).  [covers 71.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.819825 (regressionFit = 0.819822, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(A, C).  [covers 71.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.819825 (regressionFit = 0.819822, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, A).  [covers 71.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.857608 (regressionFit = 0.857605, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 88.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.871136 (regressionFit = 0.871133, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C).  [covers 80.0/175.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 91.0/175.0 pos, 0.0/0.0 neg]' score=-0.8116493499193199
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -0.876775 (regressionFit = 0.876772, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 44.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.811650 (regressionFit = 0.811647, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 91.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.811650 (regressionFit = 0.811647, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 91.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.811650 (regressionFit = 0.811647, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 91.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.819826 (regressionFit = 0.819822, penalties=3.130000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), sameperson(A, A).  [covers 71.0/175.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/175.0 pos, 0.0/0.0 neg]' score=-0.8198244940467734
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0.863825 (regressionFit = 0.863822, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), courseprof(_, A).  [covers 43.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.819826 (regressionFit = 0.819822, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), project(_, A).  [covers 71.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.819825 (regressionFit = 0.819822, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 71.0/175.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/175.0 pos, 0.0/0.0 neg]' score=-0.8217999696468863
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0.821801 (regressionFit = 0.821798, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), courseprof(_, A).  [covers 70.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.877444 (regressionFit = 0.877440, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _).  [covers 31.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.863825 (regressionFit = 0.863822, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), project(_, A).  [covers 43.0/175.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 72.0/175.0 pos, 0.0/0.0 neg]' score=-0.8530855023082901
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 4 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0.853087 (regressionFit = 0.853084, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 72.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.888891 (regressionFit = 0.888889, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/175.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 72.0/175.0 pos, 0.0/0.0 neg]' score=-0.8530865123082901
%  At # nodes expanded = 9, |OPEN| = 2.  Pruned 6 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -0.853088 (regressionFit = 0.853084, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 72.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.888892 (regressionFit = 0.888889, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(_, A), courseta(B, _).  [covers 32.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.888892 (regressionFit = 0.888889, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(B, A), courseta(B, _).  [covers 32.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.876775 (regressionFit = 0.876772, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), project(_, A).  [covers 44.0/175.0 pos, 0.0/0.0 neg]
%     Score = -0.821801 (regressionFit = 0.821798, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), sameperson(A, A).  [covers 70.0/175.0 pos, 0.0/0.0 neg]

***** Warning: #18 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/175.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/175.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.005.
% Will extend: faculty(A) :- sameperson(A, A).  [covers 154.0/175.0 pos, 0.0/0.0 neg]
Comparing variance: -3.7488050182148143E-17 to score=0.0011247113681544891 #egs=154.0
Comparing variance: -2.64338815386942E-18 to score=0.0011247113681544891 #egs=21.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0011247113681544891
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0011247113681544891

% Time for loop #2: 35 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      faculty(A) :- sameperson(A, A).  [covers 154.0/175.0 pos, 0.0/0.0 neg]
% This clause covers 154 positive examples, of which 154 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #9 @ 14:37:01 5/11/17.  [Using 4,670,040 memory cells.]  %%%%%


% FOR faculty(A):
%   if ( student(A) )
%   then return -0.06842697784420286;  // std dev = 0.000, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
%   else if ( sameperson(A, A) )
%   | then return 0.15274385809367147;  // std dev = 0.000, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */


% Clauses:

faculty(A, -0.06842697784420286) :- 
     student(A), 
     !. // Clause #1.

faculty(A, 0.15274385809367147) :- 
     sameperson(A, A), 
     !. // Clause #2.

faculty(A, -0.06842697784420275) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_faculty(a, -0.06842697784420286) :-  /* #neg=273 */ 
   student(a),
   !. // Flattened version of clause #1.

flattened_faculty(a, 0.15274385809367147) :-  /* #pos=154 */ 
   sameperson(a, a),
   !. // Flattened version of clause #2.

flattened_faculty(underscore, -0.06842697784420275) :-  /* #neg=21 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   sameperson(a, a)
%   student(a)

% Saving model in: datasets/WebKB/train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 9 trees is 2.047 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.005165586483494803
Set score:0.0011247113681544891
% Only 448 out of 448 converged.
% Kept 154 of the 154 positive examples.
% Kept 300 of the 594 negative examples.
% Dataset size: 454
Computing probabilities
prob time:5 milliseconds
No hidden examples for : faculty
Time to build dataset: 14 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.008805066056247316
Set score:0.0011247113681544891
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 9 positive seeds: 106 124 157 177 276 337 342 356 364
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 454.0/454.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 454.0/454.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 454.0/454.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -2.650538 (regressionFit = 2.650537, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 72.0/454.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -2.650538): faculty(A) :- courseprof(_, A).  [covers 72.0/454.0 pos, 0.0/0.0 neg]
%     Score = -3.950961 (regressionFit = 3.950960, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 176.0/454.0 pos, 0.0/0.0 neg]
%     Score = -3.917673 (regressionFit = 3.917672, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 437.0/454.0 pos, 0.0/0.0 neg]
%     Score = -0.601418 (regressionFit = 0.601417, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- student(A).  [covers 283.0/454.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.601418): faculty(A) :- student(A).  [covers 283.0/454.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- student(A).  [covers 283.0/454.0 pos, 0.0/0.0 neg]' score=-0.6014182598877508
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 2 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3.497139 (regressionFit = 3.497137, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- student(A), project(_, A).  [covers 89.0/454.0 pos, 0.0/0.0 neg]
%     Score = -0.601419 (regressionFit = 0.601417, penalties=2.0100000000000002E-6) for clause:  faculty(A) :- student(A), sameperson(A, A).  [covers 283.0/454.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), sameperson(A, A).  [covers 283.0/454.0 pos, 0.0/0.0 neg]' score=-0.6014192598877508
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3.497140 (regressionFit = 3.497137, penalties=3.12E-6) for clause:  faculty(A) :- student(A), sameperson(A, A), project(_, A).  [covers 89.0/454.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 72.0/454.0 pos, 0.0/0.0 neg]' score=-2.6505383896234807
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 4 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3.218286 (regressionFit = 3.218284, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A).  [covers 44.0/454.0 pos, 0.0/0.0 neg]
%     Score = -2.577935 (regressionFit = 2.577933, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/454.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/454.0 pos, 0.0/0.0 neg]' score=-2.577935351888464
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3.182770 (regressionFit = 3.182766, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A), project(_, A).  [covers 43.0/454.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), project(_, A).  [covers 44.0/454.0 pos, 0.0/0.0 neg]' score=-3.2182863464283717
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 5 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3.218287 (regressionFit = 3.218284, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), project(B, A), project(B, _).  [covers 44.0/454.0 pos, 0.0/0.0 neg]
%     Score = -3.182770 (regressionFit = 3.182766, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A), sameperson(A, A).  [covers 43.0/454.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), project(_, A).  [covers 89.0/454.0 pos, 0.0/0.0 neg]' score=-3.4971392341337326
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 3 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3.497140 (regressionFit = 3.497137, penalties=3.130000000000001E-6) for clause:  faculty(A) :- student(A), project(_, A), project(_, A).  [covers 89.0/454.0 pos, 0.0/0.0 neg]
%     Score = -3.497140 (regressionFit = 3.497137, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, _).  [covers 89.0/454.0 pos, 0.0/0.0 neg]
%     Score = -3.497140 (regressionFit = 3.497137, penalties=3.12E-6) for clause:  faculty(A) :- student(A), project(_, A), sameperson(A, A).  [covers 89.0/454.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 437.0/454.0 pos, 0.0/0.0 neg]' score=-3.9176729677086253
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -3.891425 (regressionFit = 3.891423, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 160.0/454.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 160.0/454.0 pos, 0.0/0.0 neg]' score=-3.8914253197237754
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -3.182770 (regressionFit = 3.182766, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), courseprof(_, A).  [covers 43.0/454.0 pos, 0.0/0.0 neg]
%     Score = -3.891426 (regressionFit = 3.891423, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), project(_, A).  [covers 160.0/454.0 pos, 0.0/0.0 neg]
%     Score = -3.891426 (regressionFit = 3.891423, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 160.0/454.0 pos, 0.0/0.0 neg]
%     Score = -3.497140 (regressionFit = 3.497137, penalties=3.12E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), student(A).  [covers 89.0/454.0 pos, 0.0/0.0 neg]

***** Warning: #19 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- student(A).  [covers 283.0/454.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- student(A).  [covers 283.0/454.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: faculty(A) :- student(A).  [covers 283.0/454.0 pos, 0.0/0.0 neg]
Comparing variance: 3.2169006367230685E-17 to score=0.0011247113681544891 #egs=283.0
Comparing variance: 0.0035170599408639864 to score=0.0011247113681544891 #egs=171.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0011247113681544891
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 171.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.003517)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.003517) into the LAST position (#1) in the search queue.

% Time for loop #1: 29 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      faculty(A) :- student(A).  [covers 283.0/454.0 pos, 0.0/0.0 neg]
% This clause covers 283 positive examples, of which 283 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 10 positive seeds: 8 9 16 32 33 65 114 116 136 140
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 171.0/171.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 171.0/171.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 171.0/171.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0.576347 (regressionFit = 0.576346, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 72.0/171.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.576347): faculty(A) :- courseprof(_, A).  [covers 72.0/171.0 pos, 0.0/0.0 neg]
%     Score = -0.551750 (regressionFit = 0.551749, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.551750): faculty(A) :- project(_, A).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -0.000001 (regressionFit = 4.94049e-15, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.000001): faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]' score=-1.0100000049404927E-6
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0.555406 (regressionFit = 0.555404, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/171.0 pos, 0.0/0.0 neg]
%     Score = -0.554282 (regressionFit = 0.554280, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 87.0/171.0 pos, 0.0/0.0 neg]' score=-0.5517501889127532
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 3 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0.587733 (regressionFit = 0.587730, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 44.0/171.0 pos, 0.0/0.0 neg]
%     Score = -0.551751 (regressionFit = 0.551749, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 87.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 87.0/171.0 pos, 0.0/0.0 neg]' score=-0.5517510989127532
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 10 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -0.587734 (regressionFit = 0.587730, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 44.0/171.0 pos, 0.0/0.0 neg]
%     Score = -0.590671 (regressionFit = 0.590668, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 67.0/171.0 pos, 0.0/0.0 neg]
%     Score = -0.551752 (regressionFit = 0.551749, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -0.551752 (regressionFit = 0.551749, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -0.554283 (regressionFit = 0.554280, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, _), sameperson(A, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -0.554283 (regressionFit = 0.554280, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(A, C).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -0.554283 (regressionFit = 0.554280, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -0.551752 (regressionFit = 0.551749, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -0.583899 (regressionFit = 0.583896, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C).  [covers 77.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]' score=-0.5542823166010917
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0.579118 (regressionFit = 0.579114, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), courseprof(_, A).  [covers 43.0/171.0 pos, 0.0/0.0 neg]
%     Score = -0.554283 (regressionFit = 0.554280, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 71.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/171.0 pos, 0.0/0.0 neg]' score=-0.5554063489692436
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0.579118 (regressionFit = 0.579114, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), project(_, A).  [covers 43.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 72.0/171.0 pos, 0.0/0.0 neg]' score=-0.5763471354794484
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 4 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.

% Consider expanding [#8 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(_, A), courseprof(_, A).  [covers 44.0/171.0 pos, 0.0/0.0 neg]' score=-0.5877326941975349
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 5 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0.579118 (regressionFit = 0.579114, penalties=3.230000000000001E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A), sameperson(A, A).  [covers 43.0/171.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.004.
% Will extend: faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]
Comparing variance: 3.172065784643304E-17 to score=0.0011247113681544891 #egs=154.0
Comparing variance: 3.2653618371328133E-18 to score=0.0011247113681544891 #egs=17.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0011247113681544891
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0011247113681544891

% Time for loop #2: 24 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]
% This clause covers 154 positive examples, of which 154 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #10 @ 14:37:01 5/11/17.  [Using 4,653,448 memory cells.]  %%%%%


% FOR faculty(A):
%   if ( student(A) )
%   then return -0.06419184008202604;  // std dev = 9.54e-08, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
%   else if ( sameperson(A, A) )
%   | then return 0.134007030008011;  // std dev = 6.99e-08, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else return -0.06419184008202619;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


% Clauses:

faculty(A, -0.06419184008202604) :- 
     student(A), 
     !. // Clause #1.

faculty(A, 0.134007030008011) :- 
     sameperson(A, A), 
     !. // Clause #2.

faculty(A, -0.06419184008202619) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_faculty(a, -0.06419184008202604) :-  /* #neg=283 */ 
   student(a),
   !. // Flattened version of clause #1.

flattened_faculty(a, 0.134007030008011) :-  /* #pos=154 */ 
   sameperson(a, a),
   !. // Flattened version of clause #2.

flattened_faculty(underscore, -0.06419184008202619) :-  /* #neg=17 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   sameperson(a, a)
%   student(a)

% Saving model in: datasets/WebKB/train/models/bRDNs/faculty.model.ckpt
% Saving model in: datasets/WebKB/train/models/bRDNs/faculty.model


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for faculty.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).
stepLength_tree4(1.0).
stepLength_tree5(1.0).
stepLength_tree6(1.0).
stepLength_tree7(1.0).
stepLength_tree8(1.0).
stepLength_tree9(1.0).
stepLength_tree10(1.0).

logPrior(-1.8).
faculty(D, Total) :- // A general accessor. 
   faculty(D, 1000000, Total), !.
faculty(D, Total) :- waitHere("This should not fail", faculty(D, Total)).

faculty(D, TreesToUse, Total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(LogPrior),
   getScore_faculty_tree1(D, TreesToUse, Total1),
   getScore_faculty_tree2(D, TreesToUse, Total2),
   getScore_faculty_tree3(D, TreesToUse, Total3),
   getScore_faculty_tree4(D, TreesToUse, Total4),
   getScore_faculty_tree5(D, TreesToUse, Total5),
   getScore_faculty_tree6(D, TreesToUse, Total6),
   getScore_faculty_tree7(D, TreesToUse, Total7),
   getScore_faculty_tree8(D, TreesToUse, Total8),
   getScore_faculty_tree9(D, TreesToUse, Total9),
   getScore_faculty_tree10(D, TreesToUse, Total10),
   Total is LogPrior + Total1 + Total2 + Total3 + Total4 + Total5 + Total6 + Total7 + Total8 + Total9 + Total10,
   !.
faculty(D, TreesToUse, Total) :- waitHere("This should not fail", faculty(D, TreesToUse, Total)).

getScore_faculty_tree1(D, TreesToUse, 0.0) :- 1 > TreesToUse, !.
getScore_faculty_tree1(D, TreesToUse, Total1) :- faculty_tree1(D, Total), stepLength_tree1(StepLen), Total1 is Total * StepLen.

getScore_faculty_tree2(D, TreesToUse, 0.0) :- 2 > TreesToUse, !.
getScore_faculty_tree2(D, TreesToUse, Total2) :- faculty_tree2(D, Total), stepLength_tree2(StepLen), Total2 is Total * StepLen.

getScore_faculty_tree3(D, TreesToUse, 0.0) :- 3 > TreesToUse, !.
getScore_faculty_tree3(D, TreesToUse, Total3) :- faculty_tree3(D, Total), stepLength_tree3(StepLen), Total3 is Total * StepLen.

getScore_faculty_tree4(D, TreesToUse, 0.0) :- 4 > TreesToUse, !.
getScore_faculty_tree4(D, TreesToUse, Total4) :- faculty_tree4(D, Total), stepLength_tree4(StepLen), Total4 is Total * StepLen.

getScore_faculty_tree5(D, TreesToUse, 0.0) :- 5 > TreesToUse, !.
getScore_faculty_tree5(D, TreesToUse, Total5) :- faculty_tree5(D, Total), stepLength_tree5(StepLen), Total5 is Total * StepLen.

getScore_faculty_tree6(D, TreesToUse, 0.0) :- 6 > TreesToUse, !.
getScore_faculty_tree6(D, TreesToUse, Total6) :- faculty_tree6(D, Total), stepLength_tree6(StepLen), Total6 is Total * StepLen.

getScore_faculty_tree7(D, TreesToUse, 0.0) :- 7 > TreesToUse, !.
getScore_faculty_tree7(D, TreesToUse, Total7) :- faculty_tree7(D, Total), stepLength_tree7(StepLen), Total7 is Total * StepLen.

getScore_faculty_tree8(D, TreesToUse, 0.0) :- 8 > TreesToUse, !.
getScore_faculty_tree8(D, TreesToUse, Total8) :- faculty_tree8(D, Total), stepLength_tree8(StepLen), Total8 is Total * StepLen.

getScore_faculty_tree9(D, TreesToUse, 0.0) :- 9 > TreesToUse, !.
getScore_faculty_tree9(D, TreesToUse, Total9) :- faculty_tree9(D, Total), stepLength_tree9(StepLen), Total9 is Total * StepLen.

getScore_faculty_tree10(D, TreesToUse, 0.0) :- 10 > TreesToUse, !.
getScore_faculty_tree10(D, TreesToUse, Total10) :- faculty_tree10(D, Total), stepLength_tree10(StepLen), Total10 is Total * StepLen.

flattenedLiteralsInThisSetOfTrees(faculty, 2, [
   sameperson(a, a),
   student(a)]).
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:4.94380316551886
Set score:0.0011247113681544891
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 48 212 637 1149 1255 1903 2390 2409 2539 2612
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 3,354.0/3,354.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 3,354.0/3,354.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 3,354.0/3,354.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,556.678378 (regressionFit = 11,556.678377, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 713.0/3,354.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -11,556.678378): faculty(A) :- courseprof(_, A).  [covers 713.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -16,365.398096 (regressionFit = 16,365.398095, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 1,358.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -16,135.595825 (regressionFit = 16,135.595824, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 3,256.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -2,072.877960 (regressionFit = 2,072.877959, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- student(A).  [covers 1,716.0/3,354.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -2,072.877960): faculty(A) :- student(A).  [covers 1,716.0/3,354.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- student(A).  [covers 1,716.0/3,354.0 pos, 0.0/0.0 neg]' score=-2072.8779596045133
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 2 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -13,850.961674 (regressionFit = 13,850.961672, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- student(A), project(_, A).  [covers 559.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -2,072.877961 (regressionFit = 2,072.877959, penalties=2.0100000000000002E-6) for clause:  faculty(A) :- student(A), sameperson(A, A).  [covers 1,716.0/3,354.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), sameperson(A, A).  [covers 1,716.0/3,354.0 pos, 0.0/0.0 neg]' score=-2072.8779606045136
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -13,850.961675 (regressionFit = 13,850.961672, penalties=3.12E-6) for clause:  faculty(A) :- student(A), sameperson(A, A), project(_, A).  [covers 559.0/3,354.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 713.0/3,354.0 pos, 0.0/0.0 neg]' score=-11556.678378073944
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 4 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11,556.678379 (regressionFit = 11,556.678377, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 713.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -11,556.678379 (regressionFit = 11,556.678377, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _).  [covers 713.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -13,596.445482 (regressionFit = 13,596.445479, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A).  [covers 434.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -11,317.950183 (regressionFit = 11,317.950181, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 700.0/3,354.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 700.0/3,354.0 pos, 0.0/0.0 neg]' score=-11317.9501828265
%  At # nodes expanded = 5, |OPEN| = 6.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11,317.950184 (regressionFit = 11,317.950181, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A), courseprof(_, A).  [covers 700.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -11,317.950184 (regressionFit = 11,317.950181, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), sameperson(A, A), courseprof(B, _).  [covers 700.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -13,531.336809 (regressionFit = 13,531.336806, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A), project(_, A).  [covers 430.0/3,354.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(B, A), courseprof(B, _).  [covers 713.0/3,354.0 pos, 0.0/0.0 neg]' score=-11556.678378983943
%  At # nodes expanded = 6, |OPEN| = 5.  Pruned 12 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -11,556.678380 (regressionFit = 11,556.678377, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseprof(_, A).  [covers 713.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -11,556.678380 (regressionFit = 11,556.678377, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), courseprof(_, C).  [covers 713.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -11,556.678380 (regressionFit = 11,556.678377, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseprof(B, _).  [covers 713.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -13,596.445482 (regressionFit = 13,596.445479, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), project(_, A).  [covers 434.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -13,596.445482 (regressionFit = 13,596.445479, penalties=3.04E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), project(_, C).  [covers 434.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -11,317.950184 (regressionFit = 11,317.950181, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), sameperson(A, A).  [covers 700.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -11,317.950184 (regressionFit = 11,317.950181, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(A, C).  [covers 700.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -11,317.950184 (regressionFit = 11,317.950181, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(C, A).  [covers 700.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -11,317.950184 (regressionFit = 11,317.950181, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(C, C).  [covers 700.0/3,354.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 713.0/3,354.0 pos, 0.0/0.0 neg]' score=-11556.678379083944
%  At # nodes expanded = 7, |OPEN| = 4.  Pruned 6 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -11,556.678380 (regressionFit = 11,556.678377, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 713.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -11,556.678380 (regressionFit = 11,556.678377, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(_, A), courseprof(B, _).  [covers 713.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -11,556.678380 (regressionFit = 11,556.678377, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(B, A), courseprof(B, _).  [covers 713.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -13,596.445483 (regressionFit = 13,596.445479, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), project(_, A).  [covers 434.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -11,317.950184 (regressionFit = 11,317.950181, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), sameperson(A, A).  [covers 700.0/3,354.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), project(_, A).  [covers 434.0/3,354.0 pos, 0.0/0.0 neg]' score=-13596.44548155289
%  At # nodes expanded = 8, |OPEN| = 3.  Pruned 5 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -13,596.445483 (regressionFit = 13,596.445479, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A), courseprof(_, A).  [covers 434.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -13,596.445482 (regressionFit = 13,596.445479, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), project(_, A), courseprof(B, _).  [covers 434.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -13,596.445482 (regressionFit = 13,596.445479, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), project(B, A), project(B, _).  [covers 434.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -13,531.336809 (regressionFit = 13,531.336806, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A), sameperson(A, A).  [covers 430.0/3,354.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), project(_, A).  [covers 559.0/3,354.0 pos, 0.0/0.0 neg]' score=-13850.961674079621
%  At # nodes expanded = 9, |OPEN| = 2.  Pruned 3 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -13,850.961675 (regressionFit = 13,850.961672, penalties=3.130000000000001E-6) for clause:  faculty(A) :- student(A), project(_, A), project(_, A).  [covers 559.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -13,850.961675 (regressionFit = 13,850.961672, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, _).  [covers 559.0/3,354.0 pos, 0.0/0.0 neg]
%     Score = -13,850.961675 (regressionFit = 13,850.961672, penalties=3.12E-6) for clause:  faculty(A) :- student(A), project(_, A), sameperson(A, A).  [covers 559.0/3,354.0 pos, 0.0/0.0 neg]

***** Warning: #20 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- student(A).  [covers 1,716.0/3,354.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- student(A).  [covers 1,716.0/3,354.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: faculty(A) :- student(A).  [covers 1,716.0/3,354.0 pos, 0.0/0.0 neg]
Comparing variance: 0.01910308616888334 to score=0.0011247113681544891 #egs=1716.0
Comparing variance: 1.2454805022763795 to score=0.0011247113681544891 #egs=1638.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 1,716.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.019103)
%         ILP node to extend: faculty(A) :- student(A).  [covers 1,716.0/3,354.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.019103) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 1,638.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-1.245481)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -1.245481) into position #1 in the search queue (new size=2).

% Time for loop #1: 181 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      faculty(A) :- student(A).  [covers 1,716.0/3,354.0 pos, 0.0/0.0 neg]
% This clause covers 1716 positive examples, of which 1716 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 7 positive seeds: 196 239 370 458 516 569 961
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 1,638.0/1,638.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 1,638.0/1,638.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 1,638.0/1,638.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -1,981.269513 (regressionFit = 1,981.269511, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 799.0/1,638.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1,981.269513): faculty(A) :- project(_, A).  [covers 799.0/1,638.0 pos, 0.0/0.0 neg]
%     Score = -174.548281 (regressionFit = 174.548280, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 1,540.0/1,638.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -174.548281): faculty(A) :- sameperson(A, A).  [covers 1,540.0/1,638.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 1,540.0/1,638.0 pos, 0.0/0.0 neg]' score=-174.54828147689398
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -1,920.120203 (regressionFit = 1,920.120201, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 710.0/1,638.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 710.0/1,638.0 pos, 0.0/0.0 neg]' score=-1920.1202034082514
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -1,920.120204 (regressionFit = 1,920.120201, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), project(_, A).  [covers 710.0/1,638.0 pos, 0.0/0.0 neg]
%     Score = -1,920.120204 (regressionFit = 1,920.120201, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 710.0/1,638.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 799.0/1,638.0 pos, 0.0/0.0 neg]' score=-1981.2695125141827
%  At # nodes expanded = 4, |OPEN| = 0.  Pruned 3 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -1,981.269514 (regressionFit = 1,981.269511, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 799.0/1,638.0 pos, 0.0/0.0 neg]
%     Score = -1,981.269513 (regressionFit = 1,981.269511, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 799.0/1,638.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 799.0/1,638.0 pos, 0.0/0.0 neg]' score=-1981.2695134241826
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 10 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -2,033.073065 (regressionFit = 2,033.073062, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 626.0/1,638.0 pos, 0.0/0.0 neg]
%     Score = -2,026.548302 (regressionFit = 2,026.548299, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C).  [covers 191.0/1,638.0 pos, 0.0/0.0 neg]
%     Score = -1,981.269514 (regressionFit = 1,981.269511, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 799.0/1,638.0 pos, 0.0/0.0 neg]
%     Score = -1,981.269514 (regressionFit = 1,981.269511, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 799.0/1,638.0 pos, 0.0/0.0 neg]
%     Score = -1,981.269514 (regressionFit = 1,981.269511, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 799.0/1,638.0 pos, 0.0/0.0 neg]
%     Score = -1,920.120204 (regressionFit = 1,920.120201, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, _), sameperson(A, A).  [covers 710.0/1,638.0 pos, 0.0/0.0 neg]
%     Score = -1,920.120204 (regressionFit = 1,920.120201, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(A, C).  [covers 710.0/1,638.0 pos, 0.0/0.0 neg]
%     Score = -1,920.120204 (regressionFit = 1,920.120201, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, A).  [covers 710.0/1,638.0 pos, 0.0/0.0 neg]
%     Score = -1,998.665553 (regressionFit = 1,998.665550, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 793.0/1,638.0 pos, 0.0/0.0 neg]
%     Score = -2,026.624732 (regressionFit = 2,026.624729, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C).  [covers 716.0/1,638.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 799.0/1,638.0 pos, 0.0/0.0 neg]' score=-1981.2695135241827
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 4 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -1,981.269515 (regressionFit = 1,981.269511, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 799.0/1,638.0 pos, 0.0/0.0 neg]
%     Score = -1,981.269514 (regressionFit = 1,981.269511, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 799.0/1,638.0 pos, 0.0/0.0 neg]
%     Score = -1,981.269514 (regressionFit = 1,981.269511, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 799.0/1,638.0 pos, 0.0/0.0 neg]
%     Score = -1,920.120204 (regressionFit = 1,920.120201, penalties=3.130000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), sameperson(A, A).  [covers 710.0/1,638.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A).  [covers 1,540.0/1,638.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A).  [covers 1,540.0/1,638.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -1.245.
% Will extend: faculty(A) :- sameperson(A, A).  [covers 1,540.0/1,638.0 pos, 0.0/0.0 neg]
Comparing variance: 0.11121295888358684 to score=0.0011247113681544891 #egs=1540.0
Comparing variance: 0.033472691695614794 to score=0.0011247113681544891 #egs=98.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 1,540.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.111213)
%         ILP node to extend: faculty(A) :- sameperson(A, A).  [covers 1,540.0/1,638.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.111213) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 98.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.033473)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -0.033473) into position #2 in the search queue (new size=3).

% Time for loop #2: 147 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      faculty(A) :- sameperson(A, A).  [covers 1,540.0/1,638.0 pos, 0.0/0.0 neg]
% This clause covers 1540 positive examples, of which 1540 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'faculty(A) :- sameperson(A, A).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]'
%     Score = -174.548281 (regressionFit = 174.548280, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 3 260 495 518 540 751 1019 1126 1130 1344
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #3, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 1,540.0/1,540.0 pos, 0.0/0.0 neg]' score=-174.54828147689398
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 7 bad extensions.
%     Score = -169.082994 (regressionFit = 169.082992, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 700.0/1,540.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -169.082994): faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 700.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -169.139413 (regressionFit = 169.139411, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 710.0/1,540.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=2] 'faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 700.0/1,540.0 pos, 0.0/0.0 neg]' score=-169.08299418823358
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -169.082995 (regressionFit = 169.082992, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), courseprof(_, A).  [covers 700.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -164.043480 (regressionFit = 164.043477, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _).  [covers 310.0/1,540.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -164.043480): faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _).  [covers 310.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -166.567745 (regressionFit = 166.567742, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), project(_, A).  [covers 430.0/1,540.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=3] 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _).  [covers 310.0/1,540.0 pos, 0.0/0.0 neg]' score=-164.04348004157546
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 10 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 7 bad extensions.
%     Score = -164.043481 (regressionFit = 164.043477, penalties=4.140000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), courseprof(_, A).  [covers 310.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -164.043481 (regressionFit = 164.043477, penalties=4.040000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), courseta(_, C).  [covers 310.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -159.068575 (regressionFit = 159.068571, penalties=4.240000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A).  [covers 200.0/1,540.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -159.068575): faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A).  [covers 200.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -171.114090 (regressionFit = 171.114086, penalties=4.14E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, C).  [covers 120.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -164.043481 (regressionFit = 164.043477, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), sameperson(C, C).  [covers 310.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -164.043481 (regressionFit = 164.043477, penalties=4.03E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), student(C).  [covers 310.0/1,540.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=3] 'faculty(A) :- sameperson(A, A), courseprof(_, A), project(_, A).  [covers 430.0/1,540.0 pos, 0.0/0.0 neg]' score=-166.5677453363374
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 3 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -166.567746 (regressionFit = 166.567742, penalties=4.240000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), project(_, A), courseprof(_, A).  [covers 430.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -159.068575 (regressionFit = 159.068571, penalties=4.240000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), project(_, A), courseta(B, _).  [covers 200.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -166.567746 (regressionFit = 166.567742, penalties=4.140000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), project(B, A), project(B, _).  [covers 430.0/1,540.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=3] 'faculty(A) :- sameperson(A, A), courseprof(_, A), courseprof(_, A).  [covers 700.0/1,540.0 pos, 0.0/0.0 neg]' score=-169.0829951982336
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 4 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -169.082996 (regressionFit = 169.082992, penalties=4.14E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 700.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -164.043481 (regressionFit = 164.043477, penalties=4.140000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseprof(_, A), courseta(B, _).  [covers 310.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -164.043481 (regressionFit = 164.043477, penalties=4.140000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), courseprof(B, A), courseta(B, _).  [covers 310.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -166.567746 (regressionFit = 166.567742, penalties=4.240000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), courseprof(_, A), project(_, A).  [covers 430.0/1,540.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 710.0/1,540.0 pos, 0.0/0.0 neg]' score=-169.13941346229026
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -169.139414 (regressionFit = 169.139411, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 710.0/1,540.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=3] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 710.0/1,540.0 pos, 0.0/0.0 neg]' score=-169.13941437229025
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 8 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -166.567746 (regressionFit = 166.567742, penalties=4.140000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _), courseprof(_, A).  [covers 430.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -168.169400 (regressionFit = 168.169396, penalties=4.040000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(_, C).  [covers 570.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -171.042022 (regressionFit = 171.042018, penalties=4.040000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseta(_, C).  [covers 170.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -169.139415 (regressionFit = 169.139411, penalties=3.94E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), project(_, C).  [covers 710.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -169.139415 (regressionFit = 169.139411, penalties=4.040000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _), project(B, _).  [covers 710.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -169.139415 (regressionFit = 169.139411, penalties=3.830000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), sameperson(C, C).  [covers 710.0/1,540.0 pos, 0.0/0.0 neg]
%     Score = -168.774860 (regressionFit = 168.774856, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), student(C).  [covers 650.0/1,540.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A).  [covers 200.0/1,540.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A).  [covers 200.0/1,540.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.111.
% Will extend: faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A).  [covers 200.0/1,540.0 pos, 0.0/0.0 neg]
Comparing variance: 0.7953428546165446 to score=0.0011247113681544891 #egs=200.0
Comparing variance: 1.574647543368055E-13 to score=0.0011247113681544891 #egs=1340.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 200.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.795343)
%         ILP node to extend: faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A).  [covers 200.0/1,540.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.795343) into position #1 in the search queue (new size=3).
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0011247113681544891

% Time for loop #3: 205 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A).  [covers 200.0/1,540.0 pos, 0.0/0.0 neg]
% This clause covers 200 positive examples, of which 200 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A).  [covers 200.0/200.0 pos, 0.0/0.0 neg]'
%     Score = -159.068575 (regressionFit = 159.068571, penalties=4.240000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A).  [covers 200.0/200.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 2 19 38 43 49 52 55 65 140 154
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #4, bodyLen=4] 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A).  [covers 200.0/200.0 pos, 0.0/0.0 neg]' score=-159.06857516351994
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 13 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 7 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.2500000000000006E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), courseprof(_, A).  [covers 200.0/200.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.2500000000000006E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), courseprof(B, _).  [covers 200.0/200.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.2500000000000006E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), courseta(B, _).  [covers 200.0/200.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.150000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), courseta(_, C).  [covers 200.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563528 (regressionFit = 155.563524, penalties=4.940000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(D, C).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -155.563528): faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(D, C).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.2500000000000006E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), project(_, A).  [covers 200.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721783 (regressionFit = 149.721778, penalties=5.150000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -149.721783): faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.150000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(C, A), project(C, _).  [covers 200.0/200.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.040000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), sameperson(C, C).  [covers 200.0/200.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.140000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), student(C).  [covers 200.0/200.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=5] 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]' score=-149.72178300487496
%  At # nodes expanded = 2, |OPEN| = 9.  Pruned 16 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 9 bad extensions.
%     Score = -149.721784 (regressionFit = 149.721778, penalties=6.160000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(_, A).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721784 (regressionFit = 149.721778, penalties=6.160000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(B, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721784 (regressionFit = 149.721778, penalties=6.160000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseta(B, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721784 (regressionFit = 149.721778, penalties=6.160000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseta(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563529 (regressionFit = 155.563524, penalties=5.950000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, C).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563529 (regressionFit = 155.563524, penalties=5.950000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, A).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721784 (regressionFit = 149.721778, penalties=6.160000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), project(_, A).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721784 (regressionFit = 149.721778, penalties=6.160000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), project(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721784 (regressionFit = 149.721778, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721784 (regressionFit = 149.721778, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721784 (regressionFit = 149.721778, penalties=6.0500000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), sameperson(C, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721784 (regressionFit = 149.721778, penalties=6.15E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), student(C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=6] 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), sameperson(C, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]' score=-149.72178390487497
%  At # nodes expanded = 3, |OPEN| = 20.  Pruned 14 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 9 bad extensions.
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.060000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), sameperson(C, C), courseprof(_, A).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.060000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), sameperson(C, C), courseprof(B, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.060000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), sameperson(C, C), courseta(B, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.060000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), sameperson(C, C), courseta(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563530 (regressionFit = 155.563524, penalties=6.8500000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), sameperson(C, C), project(D, C).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563530 (regressionFit = 155.563524, penalties=6.8500000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), sameperson(C, C), project(D, A).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.060000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), sameperson(C, C), project(_, A).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.060000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), sameperson(C, C), project(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), sameperson(C, C), project(D, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), sameperson(C, C), project(D, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.050000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), sameperson(C, C), student(C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=6] 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]' score=-149.72178391487498
%  At # nodes expanded = 4, |OPEN| = 19.  Pruned 33 variant children.  Sending 22 items to OPEN for evaluation and possible insertion.
% Have created 22 valid-on-seeds descendants and have picked up 13 bad extensions.
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, E), courseprof(B, E).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, _), courseprof(_, A).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, E), courseprof(_, E).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, _), courseprof(B, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563530 (regressionFit = 155.563524, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, E), courseta(B, E).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, _), courseta(B, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, _), courseta(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -154.395181 (regressionFit = 154.395174, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, E), courseta(_, E).  [covers 50.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563530 (regressionFit = 155.563524, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, _), project(D, C).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563530 (regressionFit = 155.563524, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(E, C), project(D, _), project(E, A).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -154.395181 (regressionFit = 154.395174, penalties=6.7600000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(E, C), project(D, F), project(E, F).  [covers 50.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, _), project(_, A).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, _), project(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, E), project(_, E).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, _), project(D, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(E, C), project(D, _), project(E, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, _), sameperson(C, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563530 (regressionFit = 155.563524, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, E), sameperson(C, E).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563530 (regressionFit = 155.563524, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, E), sameperson(E, C).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, E), sameperson(E, E).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.060000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, _), student(C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.960000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), project(D, E), student(E).  [covers 80.0/200.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=6] 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]' score=-149.72178391487498
%  At # nodes expanded = 5, |OPEN| = 18.  Pruned 33 variant children.  Sending 22 items to OPEN for evaluation and possible insertion.
% Have created 22 valid-on-seeds descendants and have picked up 13 bad extensions.
%     Score = -155.563530 (regressionFit = 155.563524, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, E), courseprof(B, E).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, _), courseprof(_, A).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -151.519245 (regressionFit = 151.519238, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, E), courseprof(_, E).  [covers 70.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, _), courseprof(B, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, E), courseta(B, E).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, _), courseta(B, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, _), courseta(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, E), courseta(_, E).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563530 (regressionFit = 155.563524, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(E, C), project(E, _), project(D, C).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -154.395181 (regressionFit = 154.395174, penalties=6.7600000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(E, C), project(E, F), project(D, F).  [covers 50.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563530 (regressionFit = 155.563524, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, _), project(D, A).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, _), project(_, A).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, _), project(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, E), project(_, E).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(E, C), project(E, _), project(D, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, _), project(D, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, _), sameperson(C, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, E), sameperson(C, E).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, E), sameperson(E, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, E), sameperson(E, E).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.060000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, _), student(C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.960000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), project(D, E), student(E).  [covers 80.0/200.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=6] 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), student(C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]' score=-149.72178400487496
%  At # nodes expanded = 6, |OPEN| = 17.  Pruned 16 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 9 bad extensions.
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.160000000000003E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), student(C), courseprof(_, A).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.160000000000003E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), student(C), courseprof(B, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.160000000000003E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), student(C), courseta(B, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.160000000000003E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), student(C), courseta(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563530 (regressionFit = 155.563524, penalties=6.950000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), student(C), project(D, C).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563530 (regressionFit = 155.563524, penalties=6.950000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), student(C), project(D, A).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.160000000000003E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), student(C), project(_, A).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.160000000000003E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), student(C), project(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.060000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), student(C), project(D, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.060000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), student(C), project(D, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.050000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), student(C), sameperson(C, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #4, bodyLen=6] 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(_, A).  [covers 80.0/200.0 pos, 0.0/0.0 neg]' score=-149.72178401487497
%  At # nodes expanded = 7, |OPEN| = 16.  Pruned 22 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants and have picked up 11 bad extensions.
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(_, A), courseprof(_, A).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(_, A), courseprof(B, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(D, A), courseprof(D, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(_, A), courseta(B, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(D, A), courseta(D, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(D, A), courseta(D, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(_, A), courseta(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563530 (regressionFit = 155.563524, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), courseprof(_, A), project(D, C).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563530 (regressionFit = 155.563524, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), courseprof(_, A), project(D, A).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(_, A), project(_, A).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(_, A), project(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), courseprof(_, A), project(D, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), courseprof(_, A), project(D, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.060000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(_, A), sameperson(C, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.160000000000003E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(_, A), student(C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #4, bodyLen=6] 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(B, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]' score=-149.72178401487497
%  At # nodes expanded = 8, |OPEN| = 15.  Pruned 32 variant children.  Sending 17 items to OPEN for evaluation and possible insertion.
% Have created 17 valid-on-seeds descendants and have picked up 17 bad extensions.
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(B, _), courseprof(_, A).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(B, D), courseprof(_, D).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(B, _), courseprof(B, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(B, _), courseta(B, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(B, _), courseta(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563530 (regressionFit = 155.563524, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), courseprof(B, _), project(D, C).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), courseprof(B, E), project(D, E).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563530 (regressionFit = 155.563524, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), courseprof(B, _), project(D, A).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563530 (regressionFit = 155.563524, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), courseprof(B, E), project(D, E).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(B, _), project(_, A).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(B, _), project(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(B, D), project(_, D).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), courseprof(B, _), project(D, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), courseprof(B, _), project(D, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.060000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(B, _), sameperson(C, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(B, D), sameperson(D, D).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.160000000000003E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseprof(B, _), student(C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #4, bodyLen=6] 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseta(B, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]' score=-149.72178401487497
%  At # nodes expanded = 9, |OPEN| = 14.  Pruned 32 variant children.  Sending 20 items to OPEN for evaluation and possible insertion.
% Have created 20 valid-on-seeds descendants and have picked up 14 bad extensions.
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseta(B, _), courseprof(_, A).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseta(B, _), courseprof(B, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseta(B, _), courseta(B, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseta(B, _), courseta(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseta(B, D), courseta(_, D).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563530 (regressionFit = 155.563524, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), courseta(B, _), project(D, C).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563530 (regressionFit = 155.563524, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), courseta(B, E), project(D, E).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -155.563530 (regressionFit = 155.563524, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), courseta(B, _), project(D, A).  [covers 40.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), courseta(B, E), project(D, E).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseta(B, _), project(_, A).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseta(B, _), project(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseta(B, D), project(_, D).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(_, C), courseta(B, _), project(D, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(D, C), courseta(B, _), project(D, _).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.060000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseta(B, _), sameperson(C, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseta(B, D), sameperson(C, D).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseta(B, D), sameperson(D, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseta(B, D), sameperson(D, D).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.160000000000003E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseta(B, _), student(C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
%     Score = -149.721785 (regressionFit = 149.721778, penalties=7.060000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C), courseta(B, D), student(D).  [covers 80.0/200.0 pos, 0.0/0.0 neg]

***** Warning: #21 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.795.
% Will extend: faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
Comparing variance: -8.526512829121202E-15 to score=0.0011247113681544891 #egs=80.0
Comparing variance: 1.2476814821239637 to score=0.0011247113681544891 #egs=120.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0011247113681544891
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 120.0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-1.247681)
%         ILP node to extend: faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A).  [covers 200.0/200.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -1.247681) into position #1 in the search queue (new size=3).

% Time for loop #4: 279 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, C).  [covers 80.0/200.0 pos, 0.0/0.0 neg]
% This clause covers 80 positive examples, of which 80 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A).  [covers 200.0/120.0 pos, 0.0/0.0 neg]'
%     Score = -159.068575 (regressionFit = 159.068571, penalties=4.240000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A).  [covers 120.0/120.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 9 12 26 27 28 50 51 72 85 94
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=4] 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A).  [covers 120.0/120.0 pos, 0.0/0.0 neg]' score=-159.06857516351994
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 13 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 15 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.2500000000000006E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), courseprof(_, A).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.150000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), courseta(_, C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.2500000000000006E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), project(_, A).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.150000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(C, A), project(C, _).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.040000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), sameperson(C, C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.140000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), student(C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=5] 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), courseprof(_, A).  [covers 120.0/120.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 19 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 11 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.260000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), courseprof(_, A), courseprof(_, A).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.160000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), courseprof(C, A), courseta(C, _).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.160000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), courseprof(_, A), courseta(_, C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.260000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), courseprof(_, A), project(_, A).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.160000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(C, A), courseprof(_, A), project(C, _).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.0500000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), courseprof(_, A), sameperson(C, C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.15E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), courseprof(_, A), student(C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=5] 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), courseta(_, C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 11.  Pruned 19 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 11 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), courseta(D, C), courseprof(D, _).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), courseta(D, C), courseta(D, _).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.160000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), courseta(_, C), courseta(_, C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.160000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), courseta(_, C), project(_, A).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), courseta(_, C), project(D, _).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.0500000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), courseta(_, C), sameperson(C, C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.15E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), courseta(_, C), student(C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=5] 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), project(_, A).  [covers 120.0/120.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 17.  Pruned 16 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 11 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.260000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), project(_, A), project(_, A).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.160000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(C, A), project(_, A), project(C, _).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.160000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), project(C, A), project(C, _).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.0500000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, A), sameperson(C, C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.15E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), project(_, A), student(C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=5] 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(C, A), project(C, _).  [covers 120.0/120.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 21.  Pruned 28 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 15 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(C, A), project(C, D), courseprof(_, D).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(C, A), project(C, D), project(_, D).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.160000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(C, A), project(C, _), project(C, _).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.950000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(D, _), sameperson(C, C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.950000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(C, A), project(C, D), sameperson(D, D).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.050000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(D, A), project(D, _), student(C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.050000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(C, A), project(C, D), student(D).  [covers 120.0/120.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #5, bodyLen=5] 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), sameperson(C, C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 27.  Pruned 11 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 8 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.0400000000000015E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), sameperson(C, C), student(C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #5, bodyLen=5] 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), student(C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 27.  Pruned 13 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 8 bad extensions.

% Consider expanding [#8 of outerLoop #5, bodyLen=6] 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), courseprof(_, A), courseprof(_, A).  [covers 120.0/120.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 26.  Pruned 25 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 14 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.270000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), courseprof(C, A), courseprof(_, A), courseta(C, _).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), courseprof(_, A), courseprof(C, A), courseta(C, _).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), courseprof(_, A), courseprof(_, A), courseta(_, C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.270000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), courseprof(_, A), courseprof(_, A), project(_, A).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(C, A), courseprof(_, A), courseprof(_, A), project(C, _).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.060000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), courseprof(_, A), courseprof(_, A), sameperson(C, C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.160000000000003E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), courseprof(_, A), courseprof(_, A), student(C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #5, bodyLen=6] 'faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), courseprof(C, A), courseta(C, _).  [covers 120.0/120.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 25.  Pruned 37 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), courseprof(C, A), courseta(C, _), courseprof(_, A).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), courseprof(D, A), courseta(D, _), courseta(_, C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), courseprof(C, A), courseta(C, D), courseta(_, D).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.170000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), courseprof(C, A), courseta(C, _), project(_, A).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(C, A), courseprof(D, A), courseta(D, _), project(C, _).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), courseprof(D, A), courseta(D, _), sameperson(C, C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), courseprof(D, A), courseta(D, E), sameperson(C, E).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), courseprof(D, A), courseta(D, E), sameperson(E, C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), courseprof(C, A), courseta(C, D), sameperson(D, D).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.060000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, C), project(_, A), courseprof(D, A), courseta(D, _), student(C).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.060000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A), courseprof(C, A), courseta(C, D), student(D).  [covers 120.0/120.0 pos, 0.0/0.0 neg]

***** Warning: #22 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -159.0686):
%  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _), project(_, A).  [covers 120.0/120.0 pos, 0.0/0.0 neg]
Created a leaf under (faculty(D) :- project(Anon14747, Anon14185))

% Have these 10 positive seeds: 35 38 40 50 53 56 58 65 78 96
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 98.0/98.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 98.0/98.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #6, bodyLen=0] 'faculty(_).  [covers 98.0/98.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3.252828 (regressionFit = 3.252827, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 13.0/98.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.252828): faculty(A) :- courseprof(_, A).  [covers 13.0/98.0 pos, 0.0/0.0 neg]
%     Score = -2.938662 (regressionFit = 2.938661, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 89.0/98.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -2.938662): faculty(A) :- project(_, A).  [covers 89.0/98.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 89.0/98.0 pos, 0.0/0.0 neg]' score=-2.93866236514001
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -2.956710 (regressionFit = 2.956707, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 4.0/98.0 pos, 0.0/0.0 neg]
%     Score = -2.938663 (regressionFit = 2.938661, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 89.0/98.0 pos, 0.0/0.0 neg]
%     Score = -2.938663 (regressionFit = 2.938661, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 89.0/98.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 89.0/98.0 pos, 0.0/0.0 neg]' score=-2.9386632751400104
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 10 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 7 bad extensions.
%     Score = -2.956711 (regressionFit = 2.956707, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 4.0/98.0 pos, 0.0/0.0 neg]
%     Score = -3.110645 (regressionFit = 3.110642, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 56.0/98.0 pos, 0.0/0.0 neg]
%     Score = -3.206044 (regressionFit = 3.206041, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C).  [covers 21.0/98.0 pos, 0.0/0.0 neg]
%     Score = -2.938664 (regressionFit = 2.938661, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 89.0/98.0 pos, 0.0/0.0 neg]
%     Score = -2.938664 (regressionFit = 2.938661, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 89.0/98.0 pos, 0.0/0.0 neg]
%     Score = -2.938664 (regressionFit = 2.938661, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 89.0/98.0 pos, 0.0/0.0 neg]
%     Score = -3.154938 (regressionFit = 3.154935, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 83.0/98.0 pos, 0.0/0.0 neg]
%     Score = -3.280134 (regressionFit = 3.280131, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C).  [covers 66.0/98.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 89.0/98.0 pos, 0.0/0.0 neg]' score=-2.93866337514001
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 4 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -2.956711 (regressionFit = 2.956707, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 4.0/98.0 pos, 0.0/0.0 neg]
%     Score = -2.938664 (regressionFit = 2.938661, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 89.0/98.0 pos, 0.0/0.0 neg]
%     Score = -2.938664 (regressionFit = 2.938661, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 89.0/98.0 pos, 0.0/0.0 neg]
%     Score = -2.938664 (regressionFit = 2.938661, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 89.0/98.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #6, bodyLen=2] 'faculty(A) :- project(_, A), courseprof(_, A).  [covers 4.0/98.0 pos, 0.0/0.0 neg]' score=-2.956709639392756
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 5 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -2.956711 (regressionFit = 2.956707, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A), courseprof(_, A).  [covers 4.0/98.0 pos, 0.0/0.0 neg]
%     Score = -2.956711 (regressionFit = 2.956707, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A), project(_, A).  [covers 4.0/98.0 pos, 0.0/0.0 neg]
%     Score = -2.956711 (regressionFit = 2.956707, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), courseprof(_, A), project(B, _).  [covers 4.0/98.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #6, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 13.0/98.0 pos, 0.0/0.0 neg]' score=-3.252828049436085
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 4 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3.252829 (regressionFit = 3.252827, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 13.0/98.0 pos, 0.0/0.0 neg]
%     Score = -2.938663 (regressionFit = 2.938661, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 9.0/98.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #6, bodyLen=2] 'faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 9.0/98.0 pos, 0.0/0.0 neg]' score=-2.9386633751400173
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 12 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 9 bad extensions.
%     Score = -2.938664 (regressionFit = 2.938661, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), courseprof(_, A).  [covers 9.0/98.0 pos, 0.0/0.0 neg]
%     Score = -2.938664 (regressionFit = 2.938661, penalties=3.04E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), courseta(_, C).  [covers 9.0/98.0 pos, 0.0/0.0 neg]
%     Score = -2.938664 (regressionFit = 2.938661, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), project(_, C).  [covers 9.0/98.0 pos, 0.0/0.0 neg]
%     Score = -2.938664 (regressionFit = 2.938661, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), sameperson(C, C).  [covers 9.0/98.0 pos, 0.0/0.0 neg]
%     Score = -2.938664 (regressionFit = 2.938661, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), student(C).  [covers 9.0/98.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #6, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 13.0/98.0 pos, 0.0/0.0 neg]' score=-3.252829059436085
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 6 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -3.252830 (regressionFit = 3.252827, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 13.0/98.0 pos, 0.0/0.0 neg]
%     Score = -2.938664 (regressionFit = 2.938661, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(_, A), courseta(B, _).  [covers 9.0/98.0 pos, 0.0/0.0 neg]
%     Score = -2.938664 (regressionFit = 2.938661, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(B, A), courseta(B, _).  [covers 9.0/98.0 pos, 0.0/0.0 neg]
%     Score = -2.956711 (regressionFit = 2.956707, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), project(_, A).  [covers 4.0/98.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- project(_, A).  [covers 89.0/98.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- project(_, A).  [covers 89.0/98.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.033.
% Will extend: faculty(A) :- project(_, A).  [covers 89.0/98.0 pos, 0.0/0.0 neg]
Comparing variance: 0.03301866567573046 to score=0.0011247113681544891 #egs=89.0
Comparing variance: -9.868649107779169E-17 to score=0.0011247113681544891 #egs=9.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 89.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.033019)
%         ILP node to extend: faculty(A) :- project(_, A).  [covers 89.0/98.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.033019) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0011247113681544891

% Time for loop #6: 23 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      faculty(A) :- project(_, A).  [covers 89.0/98.0 pos, 0.0/0.0 neg]
% This clause covers 89 positive examples, of which 89 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'faculty(A) :- project(_, A).  [covers 89.0/89.0 pos, 0.0/0.0 neg]'
%     Score = -2.938662 (regressionFit = 2.938661, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 89.0/89.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 6 9 12 33 40 56 61 62 69 70
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #7, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 89.0/89.0 pos, 0.0/0.0 neg]' score=-2.93866236514001
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 3 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 9 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 89.0/89.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 89.0/89.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 89.0/89.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 4 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 89.0/89.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 89.0/89.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 89.0/89.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 89.0/89.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 10 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 8 bad extensions.
%     Score = -2.484911 (regressionFit = 2.484908, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 56.0/89.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -2.484911): faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 56.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.906999 (regressionFit = 2.906996, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C).  [covers 21.0/89.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 89.0/89.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 89.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.922972 (regressionFit = 2.922969, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 83.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.839018 (regressionFit = 2.839015, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C).  [covers 66.0/89.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=3] 'faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 56.0/89.0 pos, 0.0/0.0 neg]' score=-2.4849106537250565
%  At # nodes expanded = 4, |OPEN| = 8.  Pruned 16 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 10 bad extensions.
%     Score = -2.484912 (regressionFit = 2.484908, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), courseprof(_, C).  [covers 56.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.484912 (regressionFit = 2.484908, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseprof(D, _).  [covers 56.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.895535 (regressionFit = 2.895531, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, _).  [covers 29.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.484912 (regressionFit = 2.484908, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), project(_, A).  [covers 56.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.484912 (regressionFit = 2.484908, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), project(_, C).  [covers 56.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.484912 (regressionFit = 2.484908, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), project(B, _).  [covers 56.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.938233 (regressionFit = 2.938229, penalties=4.040000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C).  [covers 46.0/89.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #7, bodyLen=3] 'faculty(A) :- project(B, A), project(B, C), student(C).  [covers 66.0/89.0 pos, 0.0/0.0 neg]' score=-2.8390180585191453
%  At # nodes expanded = 5, |OPEN| = 7.  Pruned 10 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 9 bad extensions.
%     Score = -2.907000 (regressionFit = 2.906996, penalties=4.040000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C), courseta(_, C).  [covers 21.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.839019 (regressionFit = 2.839015, penalties=3.94E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C), project(_, A).  [covers 66.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.839019 (regressionFit = 2.839015, penalties=3.94E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C), project(_, C).  [covers 66.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.839019 (regressionFit = 2.839015, penalties=3.94E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C), project(B, _).  [covers 66.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.839019 (regressionFit = 2.839015, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C), sameperson(C, C).  [covers 66.0/89.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #7, bodyLen=3] 'faculty(A) :- project(B, A), project(B, C), courseta(_, C).  [covers 21.0/89.0 pos, 0.0/0.0 neg]' score=-2.9069988158432567
%  At # nodes expanded = 6, |OPEN| = 6.  Pruned 16 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 9 bad extensions.
%     Score = -2.907000 (regressionFit = 2.906996, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(D, C), courseprof(D, _).  [covers 21.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.907000 (regressionFit = 2.906996, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(D, C), courseta(D, _).  [covers 21.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.907000 (regressionFit = 2.906996, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C), courseta(_, C).  [covers 21.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.907000 (regressionFit = 2.906996, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C), project(_, A).  [covers 21.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.907000 (regressionFit = 2.906996, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C), project(_, C).  [covers 21.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.907000 (regressionFit = 2.906996, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C), project(B, _).  [covers 21.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.907000 (regressionFit = 2.906996, penalties=4.040000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C), sameperson(C, C).  [covers 21.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.907000 (regressionFit = 2.906996, penalties=4.040000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C), student(C).  [covers 21.0/89.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #7, bodyLen=3] 'faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 83.0/89.0 pos, 0.0/0.0 neg]' score=-2.922972240675178
%  At # nodes expanded = 7, |OPEN| = 5.  Pruned 8 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 8 bad extensions.
%     Score = -2.938233 (regressionFit = 2.938229, penalties=4.040000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C), courseprof(_, C).  [covers 46.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.907000 (regressionFit = 2.906996, penalties=4.040000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C), courseta(_, C).  [covers 21.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.922973 (regressionFit = 2.922969, penalties=3.94E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C), project(_, A).  [covers 83.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.922973 (regressionFit = 2.922969, penalties=3.94E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C), project(_, C).  [covers 83.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.922973 (regressionFit = 2.922969, penalties=3.94E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C), project(B, _).  [covers 83.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.839019 (regressionFit = 2.839015, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C), student(C).  [covers 66.0/89.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #7, bodyLen=3] 'faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 89.0/89.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 4.  Pruned 5 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 7 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.150000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A).  [covers 89.0/89.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _).  [covers 89.0/89.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _).  [covers 89.0/89.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _).  [covers 89.0/89.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #7, bodyLen=3] 'faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 89.0/89.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 3.  Pruned 13 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 10 bad extensions.
%     Score = -2.484912 (regressionFit = 2.484908, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, C), courseprof(_, C).  [covers 56.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.907000 (regressionFit = 2.906996, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, C), courseta(_, C).  [covers 21.0/89.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.740000000000001E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(B, D), project(C, D).  [covers 89.0/89.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _), project(_, A).  [covers 89.0/89.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, C), project(_, C).  [covers 89.0/89.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _), project(B, _).  [covers 89.0/89.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(B, _), project(C, _).  [covers 89.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.922973 (regressionFit = 2.922969, penalties=3.94E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, C), sameperson(C, C).  [covers 83.0/89.0 pos, 0.0/0.0 neg]
%     Score = -2.839019 (regressionFit = 2.839015, penalties=3.94E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, C), student(C).  [covers 66.0/89.0 pos, 0.0/0.0 neg]

***** Warning: #23 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 56.0/89.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 56.0/89.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.033.
% Will extend: faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 56.0/89.0 pos, 0.0/0.0 neg]
Comparing variance: 0.03755266629585081 to score=0.0011247113681544891 #egs=56.0
Comparing variance: 0.011574493974467 to score=0.0011247113681544891 #egs=33.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 56.0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-0.037553)
%         ILP node to extend: faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 56.0/89.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -0.037553) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 33.0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-0.011574)
%         ILP node to extend: faculty(A) :- project(_, A).  [covers 89.0/89.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -0.011574) into the LAST position (#3) in the search queue.

% Time for loop #7: 78 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 56.0/89.0 pos, 0.0/0.0 neg]
% This clause covers 56 positive examples, of which 56 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 56.0/56.0 pos, 0.0/0.0 neg]'
%     Score = -2.484911 (regressionFit = 2.484908, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 56.0/56.0 pos, 0.0/0.0 neg]

% Have these 8 positive seeds: 1 10 15 19 31 43 50 54
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #8, bodyLen=3] 'faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 56.0/56.0 pos, 0.0/0.0 neg]' score=-2.4849106537250565
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 16 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), courseprof(_, C).  [covers 56.0/56.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseprof(D, _).  [covers 56.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.070724 (regressionFit = 2.070720, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, _).  [covers 29.0/56.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -2.070724): faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, _).  [covers 29.0/56.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), project(_, A).  [covers 56.0/56.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), project(_, C).  [covers 56.0/56.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), project(B, _).  [covers 56.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388037 (regressionFit = 1.388033, penalties=4.040000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.388037): faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #8, bodyLen=4] 'faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]' score=-1.388037406451376
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 14 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 10 bad extensions.
%     Score = -1.388038 (regressionFit = 1.388033, penalties=5.050000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), courseprof(_, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388038 (regressionFit = 1.388033, penalties=4.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseprof(D, _).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.070725 (regressionFit = 2.070720, penalties=5.050000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _).  [covers 29.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388038 (regressionFit = 1.388033, penalties=5.050000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(_, A).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388038 (regressionFit = 1.388033, penalties=5.050000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(_, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388038 (regressionFit = 1.388033, penalties=5.050000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(B, _).  [covers 46.0/56.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #8, bodyLen=5] 'faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseprof(D, _).  [covers 46.0/56.0 pos, 0.0/0.0 neg]' score=-1.3880383164513759
%  At # nodes expanded = 3, |OPEN| = 11.  Pruned 28 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 17 bad extensions.
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.9600000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseprof(D, _), courseprof(_, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.8600000000000015E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseprof(D, E), courseprof(_, E).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.9600000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseprof(D, _), courseprof(D, _).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.070726 (regressionFit = 2.070720, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseprof(D, _), courseta(D, _).  [covers 29.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.750000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseprof(D, E), project(B, E).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.9600000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseprof(D, _), project(_, A).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.9600000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseprof(D, _), project(_, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.8600000000000015E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseprof(D, E), project(_, E).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.9600000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseprof(D, _), project(B, _).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.750000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseprof(D, E), sameperson(E, E).  [covers 46.0/56.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #8, bodyLen=5] 'faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), courseprof(_, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]' score=-1.388038416451376
%  At # nodes expanded = 4, |OPEN| = 10.  Pruned 20 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 13 bad extensions.
%     Score = -1.388039 (regressionFit = 1.388033, penalties=6.060000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), courseprof(_, C), courseprof(_, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.9600000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseprof(_, C), courseprof(D, _).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.9600000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), courseprof(D, C), courseprof(D, _).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.070726 (regressionFit = 2.070720, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseprof(_, C), courseta(D, _).  [covers 29.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.070726 (regressionFit = 2.070720, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), courseprof(D, C), courseta(D, _).  [covers 29.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=6.060000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), courseprof(_, C), project(_, A).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=6.060000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), courseprof(_, C), project(_, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=6.060000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), courseprof(_, C), project(B, _).  [covers 46.0/56.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #8, bodyLen=5] 'faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(_, A).  [covers 46.0/56.0 pos, 0.0/0.0 neg]' score=-1.388038416451376
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 17 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 12 bad extensions.
%     Score = -1.388039 (regressionFit = 1.388033, penalties=6.060000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(_, A), courseprof(_, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.9600000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), project(_, A), courseprof(D, _).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.070726 (regressionFit = 2.070720, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), project(_, A), courseta(D, _).  [covers 29.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.850000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(D, A), project(D, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=6.060000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(_, A), project(_, A).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=6.060000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(_, A), project(_, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=6.060000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(_, A), project(B, _).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.9600000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(D, A), project(D, _).  [covers 46.0/56.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #8, bodyLen=5] 'faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(_, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]' score=-1.388038416451376
%  At # nodes expanded = 6, |OPEN| = 8.  Pruned 17 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 12 bad extensions.
%     Score = -1.388039 (regressionFit = 1.388033, penalties=6.060000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(_, C), courseprof(_, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.9600000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), project(_, C), courseprof(D, _).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.070726 (regressionFit = 2.070720, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), project(_, C), courseta(D, _).  [covers 29.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.850000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(D, C), project(D, A).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=6.060000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(_, C), project(_, A).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=6.060000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(_, C), project(_, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=6.060000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(_, C), project(B, _).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.9600000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(D, C), project(D, _).  [covers 46.0/56.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #8, bodyLen=5] 'faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(B, _).  [covers 46.0/56.0 pos, 0.0/0.0 neg]' score=-1.388038416451376
%  At # nodes expanded = 7, |OPEN| = 7.  Pruned 29 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 15 bad extensions.
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.750000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), project(B, E), courseprof(D, E).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=6.060000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(B, _), courseprof(_, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.9600000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(B, D), courseprof(_, D).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.9600000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), project(B, _), courseprof(D, _).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.008593 (regressionFit = 2.008587, penalties=5.850000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), project(B, E), courseta(D, E).  [covers 9.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.070726 (regressionFit = 2.070720, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), project(B, _), courseta(D, _).  [covers 29.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.043083 (regressionFit = 2.043077, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(B, D), courseta(_, D).  [covers 16.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=6.060000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(B, _), project(_, A).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=6.060000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(B, _), project(_, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.9600000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(B, D), project(_, D).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=6.060000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(B, _), project(B, _).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.850000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(B, D), sameperson(D, D).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%     Score = -1.388039 (regressionFit = 1.388033, penalties=5.950000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(B, D), student(D).  [covers 46.0/56.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #8, bodyLen=4] 'faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, _).  [covers 29.0/56.0 pos, 0.0/0.0 neg]' score=-2.0707244263922147
%  At # nodes expanded = 8, |OPEN| = 6.  Pruned 30 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 16 bad extensions.
%     Score = -2.070725 (regressionFit = 2.070720, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseprof(_, C).  [covers 29.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.070725 (regressionFit = 2.070720, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseprof(D, _).  [covers 29.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.070725 (regressionFit = 2.070720, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseta(D, _).  [covers 29.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.070725 (regressionFit = 2.070720, penalties=4.96E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseta(_, E).  [covers 29.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.008592 (regressionFit = 2.008587, penalties=4.85E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(B, E).  [covers 9.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.070725 (regressionFit = 2.070720, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, _), project(_, A).  [covers 29.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.070725 (regressionFit = 2.070720, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, _), project(_, C).  [covers 29.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.008592 (regressionFit = 2.008587, penalties=4.96E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E).  [covers 9.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.070725 (regressionFit = 2.070720, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, _), project(B, _).  [covers 29.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.070725 (regressionFit = 2.070720, penalties=4.950000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, E), sameperson(E, E).  [covers 29.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.070725 (regressionFit = 2.070720, penalties=4.950000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, E), student(E).  [covers 29.0/56.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #8, bodyLen=5] 'faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(B, E).  [covers 9.0/56.0 pos, 0.0/0.0 neg]' score=-2.008591536296967
%  At # nodes expanded = 9, |OPEN| = 16.  Pruned 29 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 16 bad extensions.
%     Score = -2.008593 (regressionFit = 2.008587, penalties=5.8600000000000015E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(B, E), courseprof(_, C).  [covers 9.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.008593 (regressionFit = 2.008587, penalties=5.8600000000000015E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(B, E), courseprof(D, _).  [covers 9.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.008593 (regressionFit = 2.008587, penalties=5.8600000000000015E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(B, E), courseta(D, _).  [covers 9.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.008593 (regressionFit = 2.008587, penalties=5.8600000000000015E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(B, E), courseta(_, E).  [covers 9.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.008593 (regressionFit = 2.008587, penalties=5.8600000000000015E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(B, E), project(_, A).  [covers 9.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.008593 (regressionFit = 2.008587, penalties=5.8600000000000015E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(B, E), project(_, C).  [covers 9.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.008593 (regressionFit = 2.008587, penalties=5.8600000000000015E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(B, E), project(_, E).  [covers 9.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.008593 (regressionFit = 2.008587, penalties=5.8600000000000015E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(B, E), project(B, _).  [covers 9.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.008593 (regressionFit = 2.008587, penalties=5.850000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(B, E), sameperson(C, C).  [covers 9.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.008593 (regressionFit = 2.008587, penalties=5.850000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(B, E), sameperson(E, E).  [covers 9.0/56.0 pos, 0.0/0.0 neg]
%     Score = -2.008593 (regressionFit = 2.008587, penalties=5.850000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(B, E), student(E).  [covers 9.0/56.0 pos, 0.0/0.0 neg]

***** Warning: #24 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]

% Expanding node at Level 4 with score = -0.038.
% Will extend: faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
Comparing variance: 0.030174638401116907 to score=0.0011247113681544891 #egs=46.0
Comparing variance: -1.7763568394002506E-16 to score=0.0011247113681544891 #egs=10.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 46.0
%      addToQueueOfTreeStructuredLearningTasks (level=5; score=-0.030175)
%         ILP node to extend: faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 5 and with score = -0.030175) into position #1 in the search queue (new size=3).
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0011247113681544891

% Time for loop #8: 183 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C).  [covers 46.0/56.0 pos, 0.0/0.0 neg]
% This clause covers 46 positive examples, of which 46 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C).  [covers 46.0/46.0 pos, 0.0/0.0 neg]'
%     Score = -1.388037 (regressionFit = 1.388033, penalties=4.040000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C).  [covers 46.0/46.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 5 11 14 16 18 25 29 34 35 44
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #9, bodyLen=4] 'faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C).  [covers 46.0/46.0 pos, 0.0/0.0 neg]' score=-1.388037406451376
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 14 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), courseprof(_, C).  [covers 46.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319596 (regressionFit = 1.319591, penalties=5.050000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1.319596): faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(_, A).  [covers 46.0/46.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(_, C).  [covers 46.0/46.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), project(B, _).  [covers 46.0/46.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #9, bodyLen=5] 'faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _).  [covers 29.0/46.0 pos, 0.0/0.0 neg]' score=-1.3195958088056865
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 28 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 17 bad extensions.
%     Score = -1.319597 (regressionFit = 1.319591, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), courseprof(_, C).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319597 (regressionFit = 1.319591, penalties=5.9600000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), courseta(_, E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319597 (regressionFit = 1.319591, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), project(_, C).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319597 (regressionFit = 1.319591, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), project(B, _).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319597 (regressionFit = 1.319591, penalties=5.850000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), sameperson(E, E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319597 (regressionFit = 1.319591, penalties=5.9500000000000015E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), student(E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #9, bodyLen=6] 'faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), sameperson(E, E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]' score=-1.3195966088056865
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 26 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 17 bad extensions.
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.86E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), sameperson(E, E), courseprof(_, C).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.86E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), sameperson(E, E), courseta(_, E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.86E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), sameperson(E, E), project(_, C).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.86E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), sameperson(E, E), project(B, _).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.850000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), sameperson(E, E), student(E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #9, bodyLen=6] 'faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), student(E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]' score=-1.3195967088056866
%  At # nodes expanded = 4, |OPEN| = 8.  Pruned 28 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 17 bad extensions.
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.960000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), student(E), courseprof(_, C).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.960000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), student(E), courseta(_, E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.960000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), student(E), project(_, C).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.960000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), student(E), project(B, _).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.850000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), student(E), sameperson(E, E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #9, bodyLen=6] 'faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), courseta(_, E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]' score=-1.3195967188056865
%  At # nodes expanded = 5, |OPEN| = 7.  Pruned 38 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.7600000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), courseta(F, E), courseprof(F, C).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.97E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), courseta(_, E), courseprof(_, C).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.97E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), courseta(_, E), courseta(_, E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.97E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), courseta(_, E), project(_, C).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.97E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), courseta(_, E), project(B, _).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.86E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), courseta(_, E), sameperson(E, E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.960000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), courseta(_, E), student(E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #9, bodyLen=6] 'faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), courseprof(_, C).  [covers 29.0/46.0 pos, 0.0/0.0 neg]' score=-1.3195968188056866
%  At # nodes expanded = 6, |OPEN| = 6.  Pruned 38 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -1.319598 (regressionFit = 1.319591, penalties=7.070000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), courseprof(_, C), courseprof(_, C).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.7600000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), courseprof(F, C), courseta(F, E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.97E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), courseprof(_, C), courseta(_, E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=7.070000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), courseprof(_, C), project(_, C).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=7.070000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), courseprof(_, C), project(B, _).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.86E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), courseprof(_, C), sameperson(E, E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.960000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), courseprof(_, C), student(E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #9, bodyLen=6] 'faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), project(_, C).  [covers 29.0/46.0 pos, 0.0/0.0 neg]' score=-1.3195968188056866
%  At # nodes expanded = 7, |OPEN| = 5.  Pruned 33 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -1.319598 (regressionFit = 1.319591, penalties=7.070000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), project(_, C), courseprof(_, C).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.97E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), project(_, C), courseta(_, E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=7.070000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), project(_, C), project(_, C).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=7.070000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), project(_, C), project(B, _).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.97E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), project(E, C), project(E, _).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.86E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), project(_, C), sameperson(E, E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.960000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), project(_, C), student(E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #9, bodyLen=6] 'faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), project(B, _).  [covers 29.0/46.0 pos, 0.0/0.0 neg]' score=-1.3195968188056866
%  At # nodes expanded = 8, |OPEN| = 4.  Pruned 47 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 26 bad extensions.
%     Score = -1.319598 (regressionFit = 1.319591, penalties=7.070000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), project(B, _), courseprof(_, C).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.97E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), project(B, E), courseprof(_, E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.97E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), project(B, _), courseta(_, E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.388017 (regressionFit = 1.388010, penalties=6.97E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), project(B, E), courseta(_, E).  [covers 16.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=7.070000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), project(B, _), project(_, C).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.97E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), project(B, E), project(_, E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=7.070000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), project(B, _), project(B, _).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.86E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), project(B, _), sameperson(E, E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.86E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), project(B, E), sameperson(E, E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.960000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, E), project(B, _), student(E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319598 (regressionFit = 1.319591, penalties=6.960000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _), project(B, E), student(E).  [covers 29.0/46.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #9, bodyLen=5] 'faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), courseprof(_, C).  [covers 46.0/46.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 3.  Pruned 20 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 13 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=6.060000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), courseprof(_, C), courseprof(_, C).  [covers 46.0/46.0 pos, 0.0/0.0 neg]
%     Score = -1.319597 (regressionFit = 1.319591, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), courseprof(D, C), courseta(D, _).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.060000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), courseprof(_, C), project(_, A).  [covers 46.0/46.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.060000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), courseprof(_, C), project(_, C).  [covers 46.0/46.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=6.060000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C), sameperson(C, C), courseprof(_, C), project(B, _).  [covers 46.0/46.0 pos, 0.0/0.0 neg]

***** Warning: #25 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _).  [covers 29.0/46.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _).  [covers 29.0/46.0 pos, 0.0/0.0 neg]

% Expanding node at Level 5 with score = -0.030.
% Will extend: faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 5 >= 5

% Time for loop #9: 243 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #9, the best clause found is:
%      faculty(A) :- project(B, A), project(B, C), courseprof(D, C), sameperson(C, C), courseta(D, _).  [covers 29.0/46.0 pos, 0.0/0.0 neg]
% This clause covers 29 positive examples, of which 29 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (faculty(D) :- student(D))
Created a leaf under (faculty(D) :- project(Anon20191, Anon20841), courseprof(Anon20947, Anon20841))

%%%%%  WILL-Produced Tree Combined @ 14:37:03 5/11/17.  [Using 4,710,696 memory cells.]  %%%%%


% FOR faculty(A):
%   if ( student(A) )
%   then return -0.5956612986467671;  // std dev = 0.138, 1,716.000 (wgt'ed) examples reached here.  /* #neg=1,716 */
%   else if ( sameperson(A, A) )
%   | then if ( courseprof(B, A), courseta(B, C), project(D, A) )
%   | | then if ( project(E, C) )
%   | | | then return 3.799991559424199;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | | | else return 4.241267953072903;  // std dev = 1.117, 120.000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | | else return 3.7999915594241593;  // std dev = 1.45e-05, 1,340.000 (wgt'ed) examples reached here.  /* #pos=1,340 */
%   | else if ( project(F, A) )
%   | | then if ( project(F, G), courseprof(H, G) )
%   | | | then if ( sameperson(G, G) )
%   | | | | then if ( courseta(H, I) )
%   | | | | | then return -0.6782454151236398;  // std dev = 1.043, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | | | else return -0.5983321767792763;  // std dev = 0.481, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | | else return -0.9437262371086377;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.5535662221861962;  // std dev = 0.108, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.8510349609193765;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


% Clauses:

faculty(A, -0.5956612986467671) :- 
     student(A), 
     !. // Clause #1.

faculty(A, 3.799991559424199) :- 
     sameperson(A, A), 
     courseprof(B, A), 
     courseta(B, C), 
     project(D, A), 
     project(E, C), 
     !. // Clause #2.

faculty(A, 4.241267953072903) :- 
     sameperson(A, A), 
     courseprof(B, A), 
     courseta(B, C), 
     project(D, A), 
     !. // Clause #3.

faculty(A, 3.7999915594241593) :- 
     sameperson(A, A), 
     !. // Clause #4.

faculty(A, -0.6782454151236398) :- 
     project(B, A), 
     project(B, C), 
     courseprof(D, C), 
     sameperson(C, C), 
     courseta(D, E), 
     !. // Clause #5.

faculty(A, -0.5983321767792763) :- 
     project(B, A), 
     project(B, C), 
     courseprof(D, C), 
     sameperson(C, C), 
     !. // Clause #6.

faculty(A, -0.9437262371086377) :- 
     project(B, A), 
     project(B, C), 
     courseprof(D, C), 
     !. // Clause #7.

faculty(A, -0.5535662221861962) :- 
     project(B, A), 
     !. // Clause #8.

faculty(A, -0.8510349609193765) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_faculty(a, -0.5956612986467671) :-  /* #neg=1,716 */ 
   student(a),
   !. // Flattened version of clause #1.

flattened_faculty(a, 3.799991559424199) :-  /* #pos=80 */ 
   sameperson(a, a),
   courseprof(uniqueVar1, a),
   courseta(uniqueVar1, uniqueVar2),
   project(underscore, a),
   project(underscore, uniqueVar2),
   !. // Flattened version of clause #2.

flattened_faculty(a, 4.241267953072903) :-  /* #pos=120 */ 
   sameperson(a, a),
   courseprof(uniqueVar3, a),
   courseta(uniqueVar3, underscore),
   project(underscore, a),
   !. // Flattened version of clause #3.

flattened_faculty(a, 3.7999915594241593) :-  /* #pos=1,340 */ 
   sameperson(a, a),
   !. // Flattened version of clause #4.

flattened_faculty(a, -0.6782454151236398) :-  /* #neg=29 */ 
   project(uniqueVar4, a),
   project(uniqueVar4, uniqueVar5),
   courseprof(uniqueVar6, uniqueVar5),
   sameperson(uniqueVar5, uniqueVar5),
   courseta(uniqueVar6, underscore),
   !. // Flattened version of clause #5.

flattened_faculty(a, -0.5983321767792763) :-  /* #neg=17 */ 
   project(uniqueVar7, a),
   project(uniqueVar7, uniqueVar8),
   courseprof(underscore, uniqueVar8),
   sameperson(uniqueVar8, uniqueVar8),
   !. // Flattened version of clause #6.

flattened_faculty(a, -0.9437262371086377) :-  /* #neg=10 */ 
   project(uniqueVar9, a),
   project(uniqueVar9, uniqueVar10),
   courseprof(underscore, uniqueVar10),
   !. // Flattened version of clause #7.

flattened_faculty(a, -0.5535662221861962) :-  /* #neg=33 */ 
   project(underscore, a),
   !. // Flattened version of clause #8.

flattened_faculty(underscore, -0.8510349609193765) :-  /* #neg=9 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   student(a)
%   courseta(uniqueVar3, underscore)
%   project(uniqueVar4, uniqueVar5)
%   courseprof(uniqueVar6, uniqueVar5)
%   project(uniqueVar7, uniqueVar8)
%   courseprof(underscore, uniqueVar10)
%   project(uniqueVar9, uniqueVar10)
%   project(uniqueVar4, a)
%   sameperson(uniqueVar8, uniqueVar8)
%   courseprof(uniqueVar3, a)
%   courseta(uniqueVar6, underscore)
%   sameperson(a, a)
%   project(uniqueVar7, a)
%   project(underscore, a)
%   sameperson(uniqueVar5, uniqueVar5)
%   courseprof(underscore, uniqueVar8)
%   courseprof(uniqueVar1, a)
%   project(underscore, uniqueVar2)
%   courseta(uniqueVar1, uniqueVar2)
%   project(uniqueVar9, a)

% Time taken to learn model for 'faculty': 3.890 seconds.
% Saving model in: datasets/WebKB/train/models/bRDNs/faculty.model
cached groundings hit: 0
Misses: 0

% Total learning time (10 trees): 4.361 seconds.
