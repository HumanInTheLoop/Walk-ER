% Running on host: hawk

% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

% Calling ILPouterLoop from createRegressionOuterLooper.

% getInputArgWithDefaultValue: args=[datasets/WebKB/train/train_pos.txt, datasets/WebKB/train/train_neg.txt, datasets/WebKB/train/train_bk.txt, datasets/WebKB/train/train_facts.txt]
%  for N=0: args[N]=datasets/WebKB/train/train_pos.txt

% getInputArgWithDefaultValue: args=[datasets/WebKB/train/train_pos.txt, datasets/WebKB/train/train_neg.txt, datasets/WebKB/train/train_bk.txt, datasets/WebKB/train/train_facts.txt]
%  for N=1: args[N]=datasets/WebKB/train/train_neg.txt

% getInputArgWithDefaultValue: args=[datasets/WebKB/train/train_pos.txt, datasets/WebKB/train/train_neg.txt, datasets/WebKB/train/train_bk.txt, datasets/WebKB/train/train_facts.txt]
%  for N=2: args[N]=datasets/WebKB/train/train_bk.txt

% getInputArgWithDefaultValue: args=[datasets/WebKB/train/train_pos.txt, datasets/WebKB/train/train_neg.txt, datasets/WebKB/train/train_bk.txt, datasets/WebKB/train/train_facts.txt]
%  for N=3: args[N]=datasets/WebKB/train/train_facts.txt

% Welcome to the WILL ILP/SRL systems.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.
% Reading background theory from dir: null
% Load '../webkb_bk.txt'.

% Switching to VarIndicator = uppercase.

***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****


***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****

% [ LazyGroundClauseIndex ]  Building full index for mode/1 with 1 assertions.
% LoadAllModes() called.  Currently loaded modes: []
% [ LazyGroundClauseIndex ]  Building full index for sameAs/2 with 2 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for exp/3.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for log/3.

%  Read the facts.
%  Have read 1,913 facts.
% Have read 154 examples from 'datasets/WebKB/train' [datasets/WebKB/train/train*].
% Have read 594 examples from 'datasets/WebKB/train' [datasets/WebKB/train/train*].

%  LearnOneClause initialized.

% The outer looper has been created.

% Initializing the ILP inner looper.

% NEW target:                 faculty(D)
%  targetPred:                faculty/1
%  targetArgTypes:            signature = [const], types = [+Person]
%  targets:                   [faculty(D)]
%  targetPredicates:          [faculty/1]
%  targetArgSpecs:            [[D[+Person]]]
%  variablesInTargets:        [[D]]

% Started collecting constants

% Collecting the types of constants.
%  Because type='Person' is inconsistent with project/2[Proj, Person], cannot infer constants from argument #1 in mode = [+Person, -Proj]
%  Because type='Proj' is inconsistent with project/2[Proj, Person], cannot infer constants from argument #2 in mode = [+Person, -Proj]
%  Because type='Person' is inconsistent with project/2[Proj, Person], cannot infer constants from argument #1 in mode = [+Person, +Proj]
%  Because type='Proj' is inconsistent with project/2[Proj, Person], cannot infer constants from argument #2 in mode = [+Person, +Proj]

% Looking at the training examples to see if any types of new constants can be inferred.

% The type of the following constants are not known: 
%  phttpcstrcscornelledu  [from: project(phttpcstrcscornelledu, ahttpdricornelledupubeopledavishtml)]
%  Inferring that 'phttpcstrcscornelledu' is of type 'willAnything'.
%  phttpdricornelledu  [from: project(phttpdricornelledu, ahttpdricornelledupubeopledavishtml)]
%  Inferring that 'phttpdricornelledu' is of type 'willAnything'.
%  phttpmetacrawlercswashingtonedu8080  [from: project(phttpmetacrawlercswashingtonedu8080, ahttpwwwcswashingtoneduhomesetzioni)]
%  Inferring that 'phttpmetacrawlercswashingtonedu8080' is of type 'willAnything'.
%  phttprobios8mewiscedu  [from: project(phttprobios8mewiscedu, ahttprobios8mewiscedulumelskylumelskyhtml)]
%  Inferring that 'phttprobios8mewiscedu' is of type 'willAnything'.
%  phttpsimoncscornelledunforojects  [from: project(phttpsimoncscornelledunforojects, ahttpsimoncscornelledunfoeoplevogels)]
%  Inferring that 'phttpsimoncscornelledunforojects' is of type 'willAnything'.
%  phttpwwwcscornelledunfoeoplenikoscprojectspremaindexhtml  [from: project(phttpwwwcscornelledunfoeoplenikoscprojectspremaindexhtml, ahttpwwwcscornelledunfoeoplenikoscnikoschtml)]
%  Inferring that 'phttpwwwcscornelledunfoeoplenikoscprojectspremaindexhtml' is of type 'willAnything'.
%  phttpwwwcscornelledunfoeoplepraveenprojectsseqhtml  [from: project(phttpwwwcscornelledunfoeoplepraveenprojectsseqhtml, ahttpwwwcscornelledunfoeoplepraveenpraveenhtml)]
%  Inferring that 'phttpwwwcscornelledunfoeoplepraveenprojectsseqhtml' is of type 'willAnything'.
%  phttpwwwcscornelledunfoeopletahhytechhtml  [from: project(phttpwwwcscornelledunfoeopletahhytechhtml, ahttpwwwcscornelledunfoeopletahtahhtml)]
%  Inferring that 'phttpwwwcscornelledunfoeopletahhytechhtml' is of type 'willAnything'.
%  phttpwwwcscornelledunfoeoplevavasisqmghomehtml  [from: project(phttpwwwcscornelledunfoeoplevavasisqmghomehtml, ahttpwwwcscornelledunfoeoplevavasisvavasishtml)]
%  Inferring that 'phttpwwwcscornelledunfoeoplevavasisqmghomehtml' is of type 'willAnything'.
%  phttpwwwcscornelledunfoeopleyanhongcachethtml  [from: project(phttpwwwcscornelledunfoeopleyanhongcachethtml, ahttpwwwcscornelledunfoeoplettimeitelbaumhtml)]
%  Inferring that 'phttpwwwcscornelledunfoeopleyanhongcachethtml' is of type 'willAnything'.
%  phttpwwwcscornelledunforojects2  [from: project(phttpwwwcscornelledunforojects2, ahttpwwwcscornelledunfoeoplegrzesgrzeshtml)]
%  Inferring that 'phttpwwwcscornelledunforojects2' is of type 'willAnything'.
%  phttpwwwcscornelledunforojects  [from: project(phttpwwwcscornelledunforojects, ahttpwwwcscornelledunfoeoplechichaochichaohtml)]
%  Inferring that 'phttpwwwcscornelledunforojects' is of type 'willAnything'.
%  phttpwwwcscornelledunforojectsarpahtml  [from: project(phttpwwwcscornelledunforojectsarpahtml, ahttpwwwcscornelledunfoeoplervrrvrhtml)]
%  Inferring that 'phttpwwwcscornelledunforojectsarpahtml' is of type 'willAnything'.
%  phttpwwwcscornelledunforojectscsrvlcsrvlhtml  [from: project(phttpwwwcscornelledunforojectscsrvlcsrvlhtml, ahttpwwwcscornelleducgibinssisnfoeoplekmaikmaihtml)]
%  Inferring that 'phttpwwwcscornelledunforojectscsrvlcsrvlhtml' is of type 'willAnything'.
%  phttpwwwcscornelledunforojectsediaet  [from: project(phttpwwwcscornelledunforojectsediaet, ahttpwwwcscornelledunfoacultyrianmithhtml)]
%  Inferring that 'phttpwwwcscornelledunforojectsediaet' is of type 'willAnything'.
%  phttpwwwcscornelledunforojectset  [from: project(phttpwwwcscornelledunforojectset, ahttpsimoncscornelledunfoeoplevogels)]
%  Inferring that 'phttpwwwcscornelledunforojectset' is of type 'willAnything'.
%  phttpwwwcscornelledunforojectsicaphtml  [from: project(phttpwwwcscornelledunforojectsicaphtml, ahttpwwwcscornelledunfoeopledeanhomehtml)]
%  Inferring that 'phttpwwwcscornelledunforojectsicaphtml' is of type 'willAnything'.
%  phttpwwwcscornelledunforojectsimabindexhtml  [from: project(phttpwwwcscornelledunforojectsimabindexhtml, ahttpwwwcscornelledunfoacultyrcrchtml)]
%  Inferring that 'phttpwwwcscornelledunforojectsimabindexhtml' is of type 'willAnything'.
%  phttpwwwcscornelledunforojectsplit  [from: project(phttpwwwcscornelledunforojectsplit, ahttpwwwcscornelledunfoeoplechichaochichaohtml)]
%  Inferring that 'phttpwwwcscornelledunforojectsplit' is of type 'willAnything'.
%  phttpwwwcscornelledunforojectsurlnuprlhtml  [from: project(phttpwwwcscornelledunforojectsurlnuprlhtml, ahttpwwwcscornelledunfoacultyrcrchtml)]
%  Inferring that 'phttpwwwcscornelledunforojectsurlnuprlhtml' is of type 'willAnything'.
%  phttpwwwcscornelledunforojectszenozenohtml  [from: project(phttpwwwcscornelledunforojectszenozenohtml, ahttpwwwcscornelledunfoacultyrianmithhtml)]
%  Inferring that 'phttpwwwcscornelledunforojectszenozenohtml' is of type 'willAnything'.
%  phttpwwwcsutexaseduusersailab  [from: project(phttpwwwcsutexaseduusersailab, ahttpwwwcsutexaseduusersboyer)]
%  Inferring that 'phttpwwwcsutexaseduusersailab' is of type 'willAnything'.
%  phttpwwwcsutexaseduuserscadcadhtml  [from: project(phttpwwwcsutexaseduuserscadcadhtml, ahttpwwwcsutexaseduusershaizhou)]
%  Inferring that 'phttpwwwcsutexaseduuserscadcadhtml' is of type 'willAnything'.
%  phttpwwwcsutexaseduuserscilk  [from: project(phttpwwwcsutexaseduuserscilk, ahttpwwwcsutexaseduusersrdb)]
%  Inferring that 'phttpwwwcsutexaseduuserscilk' is of type 'willAnything'.
%  phttpwwwcsutexaseduuserscode  [from: project(phttpwwwcsutexaseduuserscode, ahttpwwwcsutexaseduusersajohn)]
%  Inferring that 'phttpwwwcsutexaseduuserscode' is of type 'willAnything'.
%  phttpwwwcsutexaseduuserscpg  [from: project(phttpwwwcsutexaseduuserscpg, ahttpwwwcsutexaseduuserscdj)]
%  Inferring that 'phttpwwwcsutexaseduuserscpg' is of type 'willAnything'.
%  phttpwwwcsutexaseduusersdmcl  [from: project(phttpwwwcsutexaseduusersdmcl, ahttpwwwcsutexaseduusersejp)]
%  Inferring that 'phttpwwwcsutexaseduusersdmcl' is of type 'willAnything'.
%  phttpwwwcsutexaseduuserslam  [from: project(phttpwwwcsutexaseduuserslam, ahttpwwwcsutexaseduusersckwong)]
%  Inferring that 'phttpwwwcsutexaseduuserslam' is of type 'willAnything'.
%  phttpwwwcsutexaseduusersless  [from: project(phttpwwwcsutexaseduusersless, ahttpwwwcsutexaseduusersdahlin)]
%  Inferring that 'phttpwwwcsutexaseduusersless' is of type 'willAnything'.
%  phttpwwwcsutexaseduusersmfkb  [from: project(phttpwwwcsutexaseduusersmfkb, ahttpwwwcsutexaseduuserscorrel)]
%  Inferring that 'phttpwwwcsutexaseduusersmfkb' is of type 'willAnything'.
%  phttpwwwcsutexaseduusersnlacq  [from: project(phttpwwwcsutexaseduusersnlacq, ahttpwwwcsutexaseduuserscthomp)]
%  Inferring that 'phttpwwwcsutexaseduusersnlacq' is of type 'willAnything'.
%  phttpwwwcsutexaseduusersnn  [from: project(phttpwwwcsutexaseduusersnn, ahttpwwwcsutexaseduusersdianelaw)]
%  Inferring that 'phttpwwwcsutexaseduusersnn' is of type 'willAnything'.
%  phttpwwwcsutexaseduusersoops  [from: project(phttpwwwcsutexaseduusersoops, ahttpwwwcsutexaseduusersesteban)]
%  Inferring that 'phttpwwwcsutexaseduusersoops' is of type 'willAnything'.
%  phttpwwwcsutexaseduuserspsp  [from: project(phttpwwwcsutexaseduuserspsp, ahttpwwwcsutexaseduuserscarruth)]
%  Inferring that 'phttpwwwcsutexaseduuserspsp' is of type 'willAnything'.
%  phttpwwwcsutexaseduusersqr  [from: project(phttpwwwcsutexaseduusersqr, ahttpwwwcsutexaseduusersbert)]
%  Inferring that 'phttpwwwcsutexaseduusersqr' is of type 'willAnything'.
%  phttpwwwcsutexaseduusersschwartz  [from: project(phttpwwwcsutexaseduusersschwartz, ahttpwwwcsutexaseduusersdsb)]
%  Inferring that 'phttpwwwcsutexaseduusersschwartz' is of type 'willAnything'.
%  phttpwwwcsutexaseduusersvlrsachtml  [from: project(phttpwwwcsutexaseduusersvlrsachtml, ahttpwwwcsutexaseduusersckpoon)]
%  Inferring that 'phttpwwwcsutexaseduusersvlrsachtml' is of type 'willAnything'.
%  phttpwwwcswashingtoneduhomesahrens  [from: project(phttpwwwcswashingtoneduhomesahrens, ahttpwwwcswashingtoneduhomesahrens)]
%  Inferring that 'phttpwwwcswashingtoneduhomesahrens' is of type 'willAnything'.
%  phttpwwwcswashingtoneduhomeslevyopalopalhtml  [from: project(phttpwwwcswashingtoneduhomeslevyopalopalhtml, ahttpwwwcswashingtoneduhomesdylan)]
%  Inferring that 'phttpwwwcswashingtoneduhomeslevyopalopalhtml' is of type 'willAnything'.
%  phttpwwwcswashingtoneduhomesromermemsysindexhtml  [from: project(phttpwwwcswashingtoneduhomesromermemsysindexhtml, ahttpwwwcswashingtoneduhomesbershad)]
%  Inferring that 'phttpwwwcswashingtoneduhomesromermemsysindexhtml' is of type 'willAnything'.
%  phttpwwwcswashingtoneduhomesromerrocky  [from: project(phttpwwwcswashingtoneduhomesromerrocky, ahttpwwwcswashingtoneduhomesbershad)]
%  Inferring that 'phttpwwwcswashingtoneduhomesromerrocky' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchmetipmetiphtml  [from: project(phttpwwwcswashingtoneduresearchmetipmetiphtml, ahttpwwwcswashingtoneduhomesbricker)]
%  Inferring that 'phttpwwwcswashingtoneduresearchmetipmetiphtml' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchmobicompmobilehtml  [from: project(phttpwwwcswashingtoneduresearchmobicompmobilehtml, ahttpwwwcswashingtoneduhomesbershad)]
%  Inferring that 'phttpwwwcswashingtoneduresearchmobicompmobilehtml' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectscecilcecilwwwcecilhomehtml  [from: project(phttpwwwcswashingtoneduresearchprojectscecilcecilwwwcecilhomehtml, ahttpwwwcswashingtoneduhomesgrove)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectscecilcecilwwwcecilhomehtml' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectsgrail2wwwindexhtml  [from: project(phttpwwwcswashingtoneduresearchprojectsgrail2wwwindexhtml, ahttpwwwcswashingtoneduhomesadam)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectsgrail2wwwindexhtml' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectslischaoswwwchaoshtml  [from: project(phttpwwwcswashingtoneduresearchprojectslischaoswwwchaoshtml, ahttpwwwcswashingtoneduhomeskwb)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectslischaoswwwchaoshtml' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectslischinookwww  [from: project(phttpwwwcswashingtoneduresearchprojectslischinookwww, ahttpwwwcswashingtoneduhomeschou)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectslischinookwww' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectsliswwwemerald  [from: project(phttpwwwcswashingtoneduresearchprojectsliswwwemerald, ahttpwwwcswashingtoneduhomesdarrenc)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectsliswwwemerald' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectsliswwwindexhtml  [from: project(phttpwwwcswashingtoneduresearchprojectsliswwwindexhtml, ahttpwwwcswashingtoneduhomeschou)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectsliswwwindexhtml' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectssafetywww  [from: project(phttpwwwcswashingtoneduresearchprojectssafetywww, ahttpwwwcswashingtoneduhomesjdreese)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectssafetywww' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectssoftbotswwwsoftbotshtml  [from: project(phttpwwwcswashingtoneduresearchprojectssoftbotswwwsoftbotshtml, ahttpwwwcswashingtoneduhomesbobd)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectssoftbotswwwsoftbotshtml' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectsspinwww  [from: project(phttpwwwcswashingtoneduresearchprojectsspinwww, ahttpwwwcswashingtoneduhomesausland)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectsspinwww' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectsuniswynompwww  [from: project(phttpwwwcswashingtoneduresearchprojectsuniswynompwww, ahttpwwwcswashingtoneduhomesausland)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectsuniswynompwww' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectsweirdwww  [from: project(phttpwwwcswashingtoneduresearchprojectsweirdwww, ahttpwwwcswashingtoneduhomesborning)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectsweirdwww' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchprojectszpl  [from: project(phttpwwwcswashingtoneduresearchprojectszpl, ahttpwwwcswashingtoneduhomesbrad)]
%  Inferring that 'phttpwwwcswashingtoneduresearchprojectszpl' is of type 'willAnything'.
%  phttpwwwcswashingtoneduresearchsmt  [from: project(phttpwwwcswashingtoneduresearchsmt, ahttpwwwcswashingtoneduhomeseggers)]
%  Inferring that 'phttpwwwcswashingtoneduresearchsmt' is of type 'willAnything'.
%  phttpwwwcswisceducomputervisionprojectsexplorationhtml  [from: project(phttpwwwcswisceducomputervisionprojectsexplorationhtml, ahttpwwwcswiscedudyerdyerhtml)]
%  Inferring that 'phttpwwwcswisceducomputervisionprojectsexplorationhtml' is of type 'willAnything'.
%  phttpwwwcswisceducomputervisionprojectsvisadhtml  [from: project(phttpwwwcswisceducomputervisionprojectsvisadhtml, ahttpwwwcswiscedudyerdyerhtml)]
%  Inferring that 'phttpwwwcswisceducomputervisionprojectsvisadhtml' is of type 'willAnything'.
%  phttpwwwcswisceducondor  [from: project(phttpwwwcswisceducondor, ahttpwwwcswiscedujbasneyjbasneyhtml)]
%  Inferring that 'phttpwwwcswisceducondor' is of type 'willAnything'.
%  phttpwwwcswisceducondorhtml  [from: project(phttpwwwcswisceducondorhtml, ahttpwwwcswiscedujussijussihtml)]
%  Inferring that 'phttpwwwcswisceducondorhtml' is of type 'willAnything'.
%  phttpwwwcswisceducoral  [from: project(phttpwwwcswisceducoral, ahttpwwwcswiscedubeyerbeyerhtml)]
%  Inferring that 'phttpwwwcswisceducoral' is of type 'willAnything'.
%  phttpwwwcswisceducpnet  [from: project(phttpwwwcswisceducpnet, ahttpwwwcswisceduferrisferrishtml)]
%  Inferring that 'phttpwwwcswisceducpnet' is of type 'willAnything'.
%  phttpwwwcswiscedudevise  [from: project(phttpwwwcswiscedudevise, ahttpwwwcswisceduflisakowflisakowhtml)]
%  Inferring that 'phttpwwwcswiscedudevise' is of type 'willAnything'.
%  phttpwwwcswisceduexodus  [from: project(phttpwwwcswisceduexodus, ahttpwwwcswisceducareycareyhtml)]
%  Inferring that 'phttpwwwcswisceduexodus' is of type 'willAnything'.
%  phttpwwwcswiscedugalileo  [from: project(phttpwwwcswiscedugalileo, ahttpwwwcswiscedualainalainhtml)]
%  Inferring that 'phttpwwwcswiscedugalileo' is of type 'willAnything'.
%  phttpwwwcswiscedumscalar  [from: project(phttpwwwcswiscedumscalar, ahttpwwwcswisceduamiramirhtml)]
%  Inferring that 'phttpwwwcswiscedumscalar' is of type 'willAnything'.
%  phttpwwwcswisceduolviuwmpcancerhtml  [from: project(phttpwwwcswisceduolviuwmpcancerhtml, ahttpwwwcswisceduolviolvihtml)]
%  Inferring that 'phttpwwwcswisceduolviuwmpcancerhtml' is of type 'willAnything'.
%  phttpwwwcswisceduolviuwmppatsephtml  [from: project(phttpwwwcswisceduolviuwmppatsephtml, ahttpwwwcswisceduolviolvihtml)]
%  Inferring that 'phttpwwwcswisceduolviuwmppatsephtml' is of type 'willAnything'.
%  phttpwwwcswisceduparadise  [from: project(phttpwwwcswisceduparadise, ahttpwwwcswiscedubolobolohtml)]
%  Inferring that 'phttpwwwcswisceduparadise' is of type 'willAnything'.
%  phttpwwwcswisceduparadyn  [from: project(phttpwwwcswisceduparadyn, ahttpwwwcswiscedubartbarthtml)]
%  Inferring that 'phttpwwwcswisceduparadyn' is of type 'willAnything'.
%  phttpwwwcswiscedupraveenprojectsseqhtml  [from: project(phttpwwwcswiscedupraveenprojectsseqhtml, ahttpwwwcswisceduraghuraghuhtml)]
%  Inferring that 'phttpwwwcswiscedupraveenprojectsseqhtml' is of type 'willAnything'.
%  phttpwwwcswisceduscout  [from: project(phttpwwwcswisceduscout, ahttpwwwcswisceduejhazenejhazenhtml)]
%  Inferring that 'phttpwwwcswisceduscout' is of type 'willAnything'.
%  phttpwwwcswisceduseitzanimationhtml  [from: project(phttpwwwcswisceduseitzanimationhtml, ahttpwwwcswiscedudyerdyerhtml)]
%  Inferring that 'phttpwwwcswisceduseitzanimationhtml' is of type 'willAnything'.
%  phttpwwwcswisceduseitzinterpinterphtml  [from: project(phttpwwwcswisceduseitzinterpinterphtml, ahttpwwwcswiscedudyerdyerhtml)]
%  Inferring that 'phttpwwwcswisceduseitzinterpinterphtml' is of type 'willAnything'.
%  phttpwwwcswisceduseitzinterpvmorphhtml  [from: project(phttpwwwcswisceduseitzinterpvmorphhtml, ahttpwwwcswiscedudyerdyerhtml)]
%  Inferring that 'phttpwwwcswisceduseitzinterpvmorphhtml' is of type 'willAnything'.
%  phttpwwwcswisceduseitzpmotionhtml  [from: project(phttpwwwcswisceduseitzpmotionhtml, ahttpwwwcswiscedudyerdyerhtml)]
%  Inferring that 'phttpwwwcswisceduseitzpmotionhtml' is of type 'willAnything'.
%  phttpwwwcswiscedushavlikuwmlhtml  [from: project(phttpwwwcswiscedushavlikuwmlhtml, ahttpwwwcswisceduallexallexhtml)]
%  Inferring that 'phttpwwwcswiscedushavlikuwmlhtml' is of type 'willAnything'.
%  phttpwwwcswiscedushore  [from: project(phttpwwwcswiscedushore, ahttpwwwcswiscedubolobolohtml)]
%  Inferring that 'phttpwwwcswiscedushore' is of type 'willAnything'.
%  phttpwwwcswisceduwwt  [from: project(phttpwwwcswisceduwwt, ahttpwwwcswisceducaocaohtml)]
%  Inferring that 'phttpwwwcswisceduwwt' is of type 'willAnything'.
%  phttpwwwmautexaseduusersbshults  [from: project(phttpwwwmautexaseduusersbshults, ahttpwwwcsutexaseduusersmartym)]
%  Inferring that 'phttpwwwmautexaseduusersbshults' is of type 'willAnything'.

***** Warning: checkThatTypesOfAllConstantsAreKnown: Note that there were some constants whose type was not known (see list above or in dribble file). *****

% Time to collect constants: 52 milliseconds
% Time to collect examples: 0 seconds

% Read 154 pos examples and 594 neg examples.
% Time to init learnOneClause: 58 milliseconds
% Old dirnull
Setting model dir

% Have 154 'raw' positive examples and kept 154.
% Have 594 'raw' negative examples and kept 594.

% processing backup's for faculty
%  POS EX = 154
%  NEG EX = 594

% Memory usage by WILLSetup (just counts # targets?):
%  |backupPosExamples| = 1
%  |backupNegExamples| = 1
%  |predicatesAsFacts| = 0
%  |addedToFactBase|   = 0
datasets/WebKB/train/models/
File: datasets/WebKB/train/advice.txt doesnt exist.Hence no advice loaded
% Learning 3 trees in this iteration for faculty

% Learn model for: faculty
% Kept 154 of the 154 positive examples.
% Kept 313 of the 594 negative examples.
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.22101985886495878
Set score:0.0025
% Dataset size: 467
Computing probabilities
prob time:2 milliseconds
No hidden examples for : faculty
Time to build dataset: 2 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.22101985886496178
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 3 20 74 178 187 195 214 245 262 306
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% LearnOneClause Parameters:
%   Targets (1):
%    faculty(+Person)
%  Modes (50):
%    courseprof(-Course, +Person),
%    courseprof(+Course, -Person),
%    courseprof(+Course, +Person),
%    courseta(+Course, -Person),
%    courseta(-Course, +Person),
%    courseta(+Course, +Person),
%    project(-Proj, +Person),
%    project(+Proj, -Person),
%    project(+Person, -Proj),
%    project(+Person, +Proj),
%    sameperson(-Person, +Person),
%    sameperson(+Person, -Person),
%    sameperson(+Person, +Person),
%    student(+Person),
%    addList(+willList, #willNumber),
%    multiplyList(+willList, #willNumber),
%    abs(+willNumber, &willNumber),
%    minus(+willNumber, &willNumber),
%    minus(+willNumber, +willNumber, &willNumber),
%    plus(+willNumber, +willNumber, &willNumber),
%    mult(+willNumber, +willNumber, &willNumber),
%    div(+willNumber, +willNumber, &willNumber),
%    allNumbers(+willList),
%    positiveNumber(+willNumber),
%    negativeNumber(+willNumber),
%    in0toDot001(+willNumber),
%    in0toDot01(+willNumber),
%    in0toDot1(+willNumber),
%    in0to1(+willNumber),
%    in0to10(+willNumber),
%    in0to100(+willNumber),
%    in0to1000(+willNumber),
%    equalWithTolerance(+willNumber, +willNumber, &willNumber),
%    greaterOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    smallerOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    isaEqualTolerance(+willNumber),
%    lessThan(+willNumber, +willNumber),
%    greaterThan(+willNumber, +willNumber),
%    lessThanOrEqual(+willNumber, +willNumber),
%    greaterThanOrEqual(+willNumber, +willNumber),
%    inBetweenOO(+willNumber, +willNumber, +willNumber),
%    inBetweenCO(+willNumber, +willNumber, +willNumber),
%    inBetweenOC(+willNumber, +willNumber, +willNumber),
%    inBetweenCC(+willNumber, +willNumber, +willNumber),
%    memberOfList(+willAnything, +willList),
%    firstInList(+willList, &willAnything),
%    restOfList(+willList, &willList),
%    positionInList(+willAnything, +willList, &willNumber),
%    nthInList(+willNumber, +willList, &willAnything),
%    lengthOfList(+willList, &willNumber)

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 467.0/467.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 467.0/467.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 467.0/467.0 pos, 0.0/0.0 neg]' score=-Infinity
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for courseprof/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for courseta/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for project/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for project/2.
% [ LazyGroundClauseIndex ]  Building full index for sameperson/2 with 711 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for sameperson/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for sameperson/2.
% [ LazyGroundClauseIndex ]  Building full index for student/1 with 559 assertions.
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -67.167735 (regressionFit = 67.167734, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 71.0/467.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -67.167735): faculty(A) :- courseprof(_, A).  [covers 71.0/467.0 pos, 0.0/0.0 neg]
%     Score = -102.859949 (regressionFit = 102.859948, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 196.0/467.0 pos, 0.0/0.0 neg]
%     Score = -100.585587 (regressionFit = 100.585586, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 444.0/467.0 pos, 0.0/0.0 neg]
%     Score = -20.011300 (regressionFit = 20.011299, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- student(A).  [covers 290.0/467.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -20.011300): faculty(A) :- student(A).  [covers 290.0/467.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- student(A).  [covers 290.0/467.0 pos, 0.0/0.0 neg]' score=-20.01130044502927
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 2 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -88.846156 (regressionFit = 88.846154, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- student(A), project(_, A).  [covers 103.0/467.0 pos, 0.0/0.0 neg]
%     Score = -20.011301 (regressionFit = 20.011299, penalties=2.0100000000000002E-6) for clause:  faculty(A) :- student(A), sameperson(A, A).  [covers 290.0/467.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), sameperson(A, A).  [covers 290.0/467.0 pos, 0.0/0.0 neg]' score=-20.01130144502927
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -88.846157 (regressionFit = 88.846154, penalties=3.12E-6) for clause:  faculty(A) :- student(A), sameperson(A, A), project(_, A).  [covers 103.0/467.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 71.0/467.0 pos, 0.0/0.0 neg]' score=-67.16773479477612
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for courseprof/2.
% [ LazyGroundClauseIndex ]  Building full index for courseta/2 with 121 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for courseta/2.
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 4 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -67.167736 (regressionFit = 67.167734, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 71.0/467.0 pos, 0.0/0.0 neg]
%     Score = -89.189442 (regressionFit = 89.189440, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/467.0 pos, 0.0/0.0 neg]
%     Score = -66.226702 (regressionFit = 66.226700, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/467.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/467.0 pos, 0.0/0.0 neg]' score=-66.22670237188939
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 2 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -66.226703 (regressionFit = 66.226700, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A), courseprof(_, A).  [covers 70.0/467.0 pos, 0.0/0.0 neg]
%     Score = -88.300462 (regressionFit = 88.300459, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), sameperson(A, A), courseta(B, _).  [covers 31.0/467.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 71.0/467.0 pos, 0.0/0.0 neg]' score=-67.16773580477613
%  At # nodes expanded = 6, |OPEN| = 4.  Pruned 6 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -67.167737 (regressionFit = 67.167734, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 71.0/467.0 pos, 0.0/0.0 neg]
%     Score = -89.189443 (regressionFit = 89.189440, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(_, A), courseta(B, _).  [covers 32.0/467.0 pos, 0.0/0.0 neg]
%     Score = -89.189443 (regressionFit = 89.189440, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(B, A), courseta(B, _).  [covers 32.0/467.0 pos, 0.0/0.0 neg]
%     Score = -66.226703 (regressionFit = 66.226700, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), sameperson(A, A).  [covers 70.0/467.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), project(_, A).  [covers 103.0/467.0 pos, 0.0/0.0 neg]' score=-88.8461559661545
% [ LazyGroundClauseIndex ]  Building full index for project/2 with 392 assertions.
%  At # nodes expanded = 7, |OPEN| = 3.  Pruned 3 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -88.846157 (regressionFit = 88.846154, penalties=3.130000000000001E-6) for clause:  faculty(A) :- student(A), project(_, A), project(_, A).  [covers 103.0/467.0 pos, 0.0/0.0 neg]
%     Score = -88.846157 (regressionFit = 88.846154, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, _).  [covers 103.0/467.0 pos, 0.0/0.0 neg]
%     Score = -88.846157 (regressionFit = 88.846154, penalties=3.12E-6) for clause:  faculty(A) :- student(A), project(_, A), sameperson(A, A).  [covers 103.0/467.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/467.0 pos, 0.0/0.0 neg]' score=-89.18944178517276
% [ LazyGroundClauseIndex ]  Building full index for courseprof/2 with 130 assertions.
%  At # nodes expanded = 8, |OPEN| = 2.  Pruned 12 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 8 bad extensions.
%     Score = -89.189443 (regressionFit = 89.189440, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), courseprof(_, A).  [covers 32.0/467.0 pos, 0.0/0.0 neg]
%     Score = -89.189443 (regressionFit = 89.189440, penalties=3.04E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), courseta(_, C).  [covers 32.0/467.0 pos, 0.0/0.0 neg]
%     Score = -98.508983 (regressionFit = 98.508980, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), project(_, C).  [covers 13.0/467.0 pos, 0.0/0.0 neg]
%     Score = -88.300462 (regressionFit = 88.300459, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), sameperson(A, A).  [covers 31.0/467.0 pos, 0.0/0.0 neg]
%     Score = -89.189443 (regressionFit = 89.189440, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), sameperson(C, C).  [covers 32.0/467.0 pos, 0.0/0.0 neg]
%     Score = -89.189443 (regressionFit = 89.189440, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), student(C).  [covers 32.0/467.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 444.0/467.0 pos, 0.0/0.0 neg]' score=-100.58558659558697
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -101.516792 (regressionFit = 101.516790, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 174.0/467.0 pos, 0.0/0.0 neg]

***** Warning: #1 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- student(A).  [covers 290.0/467.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- student(A).  [covers 290.0/467.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: faculty(A) :- student(A).  [covers 290.0/467.0 pos, 0.0/0.0 neg]
Comparing variance: 6.1253684117250015E-18 to score=0.0025 #egs=290.0
Comparing variance: 0.11305818889847047 to score=0.0025 #egs=177.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 177.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.113058)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.113058) into the LAST position (#1) in the search queue.

% Time for loop #1: 271 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      faculty(A) :- student(A).  [covers 290.0/467.0 pos, 0.0/0.0 neg]
% This clause covers 290 positive examples, of which 290 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 39 42 89 111 117 125 146 163
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 177.0/177.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 177.0/177.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 177.0/177.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -18.419879 (regressionFit = 18.419878, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 71.0/177.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -18.419879): faculty(A) :- courseprof(_, A).  [covers 71.0/177.0 pos, 0.0/0.0 neg]
%     Score = -17.783795 (regressionFit = 17.783794, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 93.0/177.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -17.783795): faculty(A) :- project(_, A).  [covers 93.0/177.0 pos, 0.0/0.0 neg]
%     Score = -0.000001 (regressionFit = 9.09717e-13, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 154.0/177.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.000001): faculty(A) :- sameperson(A, A).  [covers 154.0/177.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 154.0/177.0 pos, 0.0/0.0 neg]' score=-1.0100009097167467E-6
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -18.056077 (regressionFit = 18.056075, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/177.0 pos, 0.0/0.0 neg]
%     Score = -18.009436 (regressionFit = 18.009434, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/177.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 93.0/177.0 pos, 0.0/0.0 neg]' score=-17.783795282826283
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 3 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -19.052241 (regressionFit = 19.052239, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 43.0/177.0 pos, 0.0/0.0 neg]
%     Score = -17.783796 (regressionFit = 17.783794, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 93.0/177.0 pos, 0.0/0.0 neg]
%     Score = -17.783796 (regressionFit = 17.783794, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 93.0/177.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 93.0/177.0 pos, 0.0/0.0 neg]' score=-17.783796192826284
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 10 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -19.052242 (regressionFit = 19.052239, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 43.0/177.0 pos, 0.0/0.0 neg]
%     Score = -19.651138 (regressionFit = 19.651135, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 70.0/177.0 pos, 0.0/0.0 neg]
%     Score = -19.998337 (regressionFit = 19.998334, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C).  [covers 19.0/177.0 pos, 0.0/0.0 neg]
%     Score = -17.783797 (regressionFit = 17.783794, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 93.0/177.0 pos, 0.0/0.0 neg]
%     Score = -17.783797 (regressionFit = 17.783794, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 93.0/177.0 pos, 0.0/0.0 neg]
%     Score = -17.783797 (regressionFit = 17.783794, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 93.0/177.0 pos, 0.0/0.0 neg]
%     Score = -18.009437 (regressionFit = 18.009434, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, _), sameperson(A, A).  [covers 71.0/177.0 pos, 0.0/0.0 neg]
%     Score = -18.009437 (regressionFit = 18.009434, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(A, C).  [covers 71.0/177.0 pos, 0.0/0.0 neg]
%     Score = -18.009437 (regressionFit = 18.009434, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, A).  [covers 71.0/177.0 pos, 0.0/0.0 neg]
%     Score = -19.311418 (regressionFit = 19.311415, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 88.0/177.0 pos, 0.0/0.0 neg]
%     Score = -19.692460 (regressionFit = 19.692457, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C).  [covers 79.0/177.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 93.0/177.0 pos, 0.0/0.0 neg]' score=-17.78379629282628
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -19.052242 (regressionFit = 19.052239, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 43.0/177.0 pos, 0.0/0.0 neg]
%     Score = -17.783797 (regressionFit = 17.783794, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 93.0/177.0 pos, 0.0/0.0 neg]
%     Score = -17.783797 (regressionFit = 17.783794, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 93.0/177.0 pos, 0.0/0.0 neg]
%     Score = -17.783797 (regressionFit = 17.783794, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 93.0/177.0 pos, 0.0/0.0 neg]
%     Score = -18.009437 (regressionFit = 18.009434, penalties=3.130000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), sameperson(A, A).  [covers 71.0/177.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/177.0 pos, 0.0/0.0 neg]' score=-18.009436082264013
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -19.052242 (regressionFit = 19.052239, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), courseprof(_, A).  [covers 43.0/177.0 pos, 0.0/0.0 neg]
%     Score = -18.009437 (regressionFit = 18.009434, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), project(_, A).  [covers 71.0/177.0 pos, 0.0/0.0 neg]
%     Score = -18.009437 (regressionFit = 18.009434, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 71.0/177.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/177.0 pos, 0.0/0.0 neg]' score=-18.05607688635502
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -18.056078 (regressionFit = 18.056075, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), courseprof(_, A).  [covers 70.0/177.0 pos, 0.0/0.0 neg]
%     Score = -19.376715 (regressionFit = 19.376712, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _).  [covers 31.0/177.0 pos, 0.0/0.0 neg]
%     Score = -19.052242 (regressionFit = 19.052239, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), project(_, A).  [covers 43.0/177.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 71.0/177.0 pos, 0.0/0.0 neg]' score=-18.41987887710873
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 4 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -18.419880 (regressionFit = 18.419878, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 71.0/177.0 pos, 0.0/0.0 neg]
%     Score = -19.630821 (regressionFit = 19.630819, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/177.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 71.0/177.0 pos, 0.0/0.0 neg]' score=-18.419879887108728
%  At # nodes expanded = 9, |OPEN| = 2.  Pruned 6 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -18.419881 (regressionFit = 18.419878, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 71.0/177.0 pos, 0.0/0.0 neg]
%     Score = -19.630822 (regressionFit = 19.630819, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(_, A), courseta(B, _).  [covers 32.0/177.0 pos, 0.0/0.0 neg]
%     Score = -19.630822 (regressionFit = 19.630819, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(B, A), courseta(B, _).  [covers 32.0/177.0 pos, 0.0/0.0 neg]
%     Score = -19.052242 (regressionFit = 19.052239, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), project(_, A).  [covers 43.0/177.0 pos, 0.0/0.0 neg]
%     Score = -18.056078 (regressionFit = 18.056075, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), sameperson(A, A).  [covers 70.0/177.0 pos, 0.0/0.0 neg]

***** Warning: #2 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/177.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/177.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.113.
% Will extend: faculty(A) :- sameperson(A, A).  [covers 154.0/177.0 pos, 0.0/0.0 neg]
Comparing variance: 5.905809751772262E-15 to score=0.0025 #egs=154.0
Comparing variance: 9.654113257610057E-18 to score=0.0025 #egs=23.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #2: 130 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      faculty(A) :- sameperson(A, A).  [covers 154.0/177.0 pos, 0.0/0.0 neg]
% This clause covers 154 positive examples, of which 154 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #1 @ 8:56:40 5/11/17.  [Using 3,205,512 memory cells.]  %%%%%


% FOR faculty(A):
%   if ( student(A) )
%   then return -0.1418510649004879;  // std dev = 4.21e-08, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
%   else if ( sameperson(A, A) )
%   | then return 0.8581489350995098;  // std dev = 9.54e-07, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


% Clauses:

faculty(A, -0.1418510649004879) :- 
     student(A), 
     !. // Clause #1.

faculty(A, 0.8581489350995098) :- 
     sameperson(A, A), 
     !. // Clause #2.

faculty(A, -0.14185106490048774) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_faculty(a, -0.1418510649004879) :-  /* #neg=290 */ 
   student(a),
   !. // Flattened version of clause #1.

flattened_faculty(a, 0.8581489350995098) :-  /* #pos=154 */ 
   sameperson(a, a),
   !. // Flattened version of clause #2.

flattened_faculty(underscore, -0.14185106490048774) :-  /* #neg=23 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   sameperson(a, a)
%   student(a)

% Saving model in: datasets/WebKB/train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 1 trees is 502 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.11305818889847041
Set score:0.0025
% Only 467 out of 467 converged.
% Kept 154 of the 154 positive examples.
% Kept 310 of the 594 negative examples.
% Dataset size: 464
Computing probabilities
prob time:4 milliseconds
No hidden examples for : faculty
Time to build dataset: 14 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.15829807383828143
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 20 206 234 262 263 275 303 305 360 404
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 464.0/464.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 464.0/464.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 464.0/464.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -48.504624 (regressionFit = 48.504622, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 72.0/464.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -48.504624): faculty(A) :- courseprof(_, A).  [covers 72.0/464.0 pos, 0.0/0.0 neg]
%     Score = -69.337727 (regressionFit = 69.337725, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 47.0/464.0 pos, 0.0/0.0 neg]
%     Score = -72.297832 (regressionFit = 72.297831, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 174.0/464.0 pos, 0.0/0.0 neg]
%     Score = -72.062612 (regressionFit = 72.062611, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 447.0/464.0 pos, 0.0/0.0 neg]
%     Score = -10.929562 (regressionFit = 10.929561, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- student(A).  [covers 293.0/464.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -10.929562): faculty(A) :- student(A).  [covers 293.0/464.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- student(A).  [covers 293.0/464.0 pos, 0.0/0.0 neg]' score=-10.929561768092126
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -69.337728 (regressionFit = 69.337725, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- student(A), courseta(_, A).  [covers 47.0/464.0 pos, 0.0/0.0 neg]
%     Score = -65.029951 (regressionFit = 65.029949, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- student(A), project(_, A).  [covers 87.0/464.0 pos, 0.0/0.0 neg]
%     Score = -10.929563 (regressionFit = 10.929561, penalties=2.0100000000000002E-6) for clause:  faculty(A) :- student(A), sameperson(A, A).  [covers 293.0/464.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), sameperson(A, A).  [covers 293.0/464.0 pos, 0.0/0.0 neg]' score=-10.929562768092126
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -69.337729 (regressionFit = 69.337725, penalties=3.12E-6) for clause:  faculty(A) :- student(A), sameperson(A, A), courseta(_, A).  [covers 47.0/464.0 pos, 0.0/0.0 neg]
%     Score = -65.029952 (regressionFit = 65.029949, penalties=3.12E-6) for clause:  faculty(A) :- student(A), sameperson(A, A), project(_, A).  [covers 87.0/464.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 72.0/464.0 pos, 0.0/0.0 neg]' score=-48.50462360582876
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 4 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -48.504625 (regressionFit = 48.504622, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 72.0/464.0 pos, 0.0/0.0 neg]
%     Score = -63.498720 (regressionFit = 63.498718, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/464.0 pos, 0.0/0.0 neg]
%     Score = -47.181740 (regressionFit = 47.181738, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/464.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 70.0/464.0 pos, 0.0/0.0 neg]' score=-47.1817401519628
%  At # nodes expanded = 5, |OPEN| = 7.  Pruned 2 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -47.181741 (regressionFit = 47.181738, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A), courseprof(_, A).  [covers 70.0/464.0 pos, 0.0/0.0 neg]
%     Score = -62.864882 (regressionFit = 62.864879, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), sameperson(A, A), courseta(B, _).  [covers 31.0/464.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 72.0/464.0 pos, 0.0/0.0 neg]' score=-48.50462461582876
%  At # nodes expanded = 6, |OPEN| = 6.  Pruned 6 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -48.504626 (regressionFit = 48.504622, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 72.0/464.0 pos, 0.0/0.0 neg]
%     Score = -63.498721 (regressionFit = 63.498718, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(_, A), courseta(B, _).  [covers 32.0/464.0 pos, 0.0/0.0 neg]
%     Score = -63.498721 (regressionFit = 63.498718, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(B, A), courseta(B, _).  [covers 32.0/464.0 pos, 0.0/0.0 neg]
%     Score = -47.181741 (regressionFit = 47.181738, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), sameperson(A, A).  [covers 70.0/464.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/464.0 pos, 0.0/0.0 neg]' score=-63.49872015021022
%  At # nodes expanded = 7, |OPEN| = 5.  Pruned 12 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 8 bad extensions.
%     Score = -63.498721 (regressionFit = 63.498718, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), courseprof(_, A).  [covers 32.0/464.0 pos, 0.0/0.0 neg]
%     Score = -63.498721 (regressionFit = 63.498718, penalties=3.04E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), courseta(_, C).  [covers 32.0/464.0 pos, 0.0/0.0 neg]
%     Score = -70.113327 (regressionFit = 70.113323, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), project(_, C).  [covers 13.0/464.0 pos, 0.0/0.0 neg]
%     Score = -62.864882 (regressionFit = 62.864879, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), sameperson(A, A).  [covers 31.0/464.0 pos, 0.0/0.0 neg]
%     Score = -63.498721 (regressionFit = 63.498718, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), sameperson(C, C).  [covers 32.0/464.0 pos, 0.0/0.0 neg]
%     Score = -63.498721 (regressionFit = 63.498718, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), student(C).  [covers 32.0/464.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), project(_, A).  [covers 87.0/464.0 pos, 0.0/0.0 neg]' score=-65.02995069050134
%  At # nodes expanded = 8, |OPEN| = 4.  Pruned 3 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -65.029952 (regressionFit = 65.029949, penalties=3.130000000000001E-6) for clause:  faculty(A) :- student(A), project(_, A), project(_, A).  [covers 87.0/464.0 pos, 0.0/0.0 neg]
%     Score = -65.029952 (regressionFit = 65.029949, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, _).  [covers 87.0/464.0 pos, 0.0/0.0 neg]
%     Score = -65.029952 (regressionFit = 65.029949, penalties=3.12E-6) for clause:  faculty(A) :- student(A), project(_, A), sameperson(A, A).  [covers 87.0/464.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseta(_, A).  [covers 47.0/464.0 pos, 0.0/0.0 neg]' score=-69.33772660648415
%  At # nodes expanded = 9, |OPEN| = 3.  Pruned 4 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -71.806695 (regressionFit = 71.806693, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, _).  [covers 20.0/464.0 pos, 0.0/0.0 neg]
%     Score = -69.337728 (regressionFit = 69.337725, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- courseta(_, A), sameperson(A, A).  [covers 47.0/464.0 pos, 0.0/0.0 neg]

***** Warning: #3 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- student(A).  [covers 293.0/464.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- student(A).  [covers 293.0/464.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: faculty(A) :- student(A).  [covers 293.0/464.0 pos, 0.0/0.0 neg]
Comparing variance: -8.184579294164976E-17 to score=0.0025 #egs=293.0
Comparing variance: 0.06391555998884299 to score=0.0025 #egs=171.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 171.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.063916)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.063916) into the LAST position (#1) in the search queue.

% Time for loop #1: 70 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      faculty(A) :- student(A).  [covers 293.0/464.0 pos, 0.0/0.0 neg]
% This clause covers 293 positive examples, of which 293 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 10 positive seeds: 15 21 25 31 35 39 41 48 51 56
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 171.0/171.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 171.0/171.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 171.0/171.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10.473942 (regressionFit = 10.473941, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 72.0/171.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -10.473942): faculty(A) :- courseprof(_, A).  [covers 72.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.026942 (regressionFit = 10.026940, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -10.026942): faculty(A) :- project(_, A).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -0.000001 (regressionFit = -3.97904e-13, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.000001): faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]' score=-1.0099996020960683E-6
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10.093368 (regressionFit = 10.093366, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.072941 (regressionFit = 10.072939, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 87.0/171.0 pos, 0.0/0.0 neg]' score=-10.026941606041188
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 3 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10.680833 (regressionFit = 10.680831, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 44.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.026943 (regressionFit = 10.026940, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 87.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 87.0/171.0 pos, 0.0/0.0 neg]' score=-10.026942516041187
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 10 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -10.680834 (regressionFit = 10.680831, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 44.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.824809 (regressionFit = 10.824806, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 66.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.026943 (regressionFit = 10.026940, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.026944 (regressionFit = 10.026940, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 87.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.072942 (regressionFit = 10.072939, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, _), sameperson(A, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.072942 (regressionFit = 10.072939, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(A, C).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.072942 (regressionFit = 10.072939, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.793893 (regressionFit = 10.793890, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 82.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.883639 (regressionFit = 10.883636, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C).  [covers 74.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/171.0 pos, 0.0/0.0 neg]' score=-10.072940810883717
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10.524252 (regressionFit = 10.524249, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), courseprof(_, A).  [covers 43.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.072942 (regressionFit = 10.072939, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 71.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/171.0 pos, 0.0/0.0 neg]' score=-10.093367860596837
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 2 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10.662408 (regressionFit = 10.662405, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _).  [covers 31.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.524252 (regressionFit = 10.524249, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), project(_, A).  [covers 43.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 72.0/171.0 pos, 0.0/0.0 neg]' score=-10.473942123592742
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 4 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10.798980 (regressionFit = 10.798978, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(_, A), courseprof(_, A).  [covers 44.0/171.0 pos, 0.0/0.0 neg]' score=-10.680832916229647
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 5 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10.769761 (regressionFit = 10.769758, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), courseprof(B, A), courseta(B, _).  [covers 20.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.680834 (regressionFit = 10.680831, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), courseprof(_, A), project(B, _).  [covers 44.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.524252 (regressionFit = 10.524249, penalties=3.230000000000001E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A), sameperson(A, A).  [covers 43.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=2] 'faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 32.0/171.0 pos, 0.0/0.0 neg]' score=-10.798980095651906
%  At # nodes expanded = 9, |OPEN| = 0.  Pruned 12 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 8 bad extensions.
%     Score = -10.769761 (regressionFit = 10.769758, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), project(_, A).  [covers 20.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.662408 (regressionFit = 10.662405, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), sameperson(A, A).  [covers 31.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.798981 (regressionFit = 10.798978, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), sameperson(C, C).  [covers 32.0/171.0 pos, 0.0/0.0 neg]
%     Score = -10.798981 (regressionFit = 10.798978, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), student(C).  [covers 32.0/171.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.064.
% Will extend: faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]
Comparing variance: -2.5837917664003644E-15 to score=0.0025 #egs=154.0
Comparing variance: 0.0 to score=0.0025 #egs=17.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #2: 54 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      faculty(A) :- sameperson(A, A).  [covers 154.0/171.0 pos, 0.0/0.0 neg]
% This clause covers 154 positive examples, of which 154 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #2 @ 8:56:41 5/11/17.  [Using 3,296,568 memory cells.]  %%%%%


% FOR faculty(A):
%   if ( student(A) )
%   then return -0.125444638528392;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   else if ( sameperson(A, A) )
%   | then return 0.7194734122109563;  // std dev = 0.000, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


% Clauses:

faculty(A, -0.125444638528392) :- 
     student(A), 
     !. // Clause #1.

faculty(A, 0.7194734122109563) :- 
     sameperson(A, A), 
     !. // Clause #2.

faculty(A, -0.12544463852839138) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_faculty(a, -0.125444638528392) :-  /* #neg=293 */ 
   student(a),
   !. // Flattened version of clause #1.

flattened_faculty(a, 0.7194734122109563) :-  /* #pos=154 */ 
   sameperson(a, a),
   !. // Flattened version of clause #2.

flattened_faculty(underscore, -0.12544463852839138) :-  /* #neg=17 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   sameperson(a, a)
%   student(a)

% Saving model in: datasets/WebKB/train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 2 trees is 716 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06391555998884307
Set score:0.0025
% Only 464 out of 464 converged.
% Kept 154 of the 154 positive examples.
% Kept 320 of the 594 negative examples.
% Dataset size: 474
Computing probabilities
prob time:3 milliseconds
No hidden examples for : faculty
Time to build dataset: 11 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.09778098605333785
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 5 175 195 285 287 328 440 449
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 474.0/474.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 474.0/474.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 474.0/474.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -45.755711 (regressionFit = 45.755710, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 181.0/474.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -45.755711): faculty(A) :- project(_, A).  [covers 181.0/474.0 pos, 0.0/0.0 neg]
%     Score = -45.467725 (regressionFit = 45.467724, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 456.0/474.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -45.467725): faculty(A) :- sameperson(A, A).  [covers 456.0/474.0 pos, 0.0/0.0 neg]
%     Score = -7.184644 (regressionFit = 7.184643, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- student(A).  [covers 302.0/474.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -7.184644): faculty(A) :- student(A).  [covers 302.0/474.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- student(A).  [covers 302.0/474.0 pos, 0.0/0.0 neg]' score=-7.184643720853323
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 2 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -40.976289 (regressionFit = 40.976287, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- student(A), project(_, A).  [covers 92.0/474.0 pos, 0.0/0.0 neg]
%     Score = -7.184645 (regressionFit = 7.184643, penalties=2.0100000000000002E-6) for clause:  faculty(A) :- student(A), sameperson(A, A).  [covers 302.0/474.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), sameperson(A, A).  [covers 302.0/474.0 pos, 0.0/0.0 neg]' score=-7.184644720853323
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -40.976290 (regressionFit = 40.976287, penalties=3.12E-6) for clause:  faculty(A) :- student(A), sameperson(A, A), project(_, A).  [covers 92.0/474.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), project(_, A).  [covers 92.0/474.0 pos, 0.0/0.0 neg]' score=-40.976288994463516
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 3 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -40.976290 (regressionFit = 40.976287, penalties=3.130000000000001E-6) for clause:  faculty(A) :- student(A), project(_, A), project(_, A).  [covers 92.0/474.0 pos, 0.0/0.0 neg]
%     Score = -40.976290 (regressionFit = 40.976287, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, _).  [covers 92.0/474.0 pos, 0.0/0.0 neg]
%     Score = -40.976290 (regressionFit = 40.976287, penalties=3.12E-6) for clause:  faculty(A) :- student(A), project(_, A), sameperson(A, A).  [covers 92.0/474.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 456.0/474.0 pos, 0.0/0.0 neg]' score=-45.46772530002851
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -44.991284 (regressionFit = 44.991282, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 163.0/474.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 163.0/474.0 pos, 0.0/0.0 neg]' score=-44.9912844992353
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -44.991286 (regressionFit = 44.991282, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), project(_, A).  [covers 163.0/474.0 pos, 0.0/0.0 neg]
%     Score = -44.991285 (regressionFit = 44.991282, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 163.0/474.0 pos, 0.0/0.0 neg]
%     Score = -40.976290 (regressionFit = 40.976287, penalties=3.12E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), student(A).  [covers 92.0/474.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 181.0/474.0 pos, 0.0/0.0 neg]' score=-45.75571145337818
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 3 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -45.755712 (regressionFit = 45.755710, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 181.0/474.0 pos, 0.0/0.0 neg]
%     Score = -45.755712 (regressionFit = 45.755710, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 181.0/474.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 181.0/474.0 pos, 0.0/0.0 neg]' score=-45.75571236337818
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 10 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -45.551067 (regressionFit = 45.551064, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 135.0/474.0 pos, 0.0/0.0 neg]
%     Score = -46.318415 (regressionFit = 46.318412, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C).  [covers 58.0/474.0 pos, 0.0/0.0 neg]
%     Score = -45.755713 (regressionFit = 45.755710, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 181.0/474.0 pos, 0.0/0.0 neg]
%     Score = -45.755713 (regressionFit = 45.755710, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 181.0/474.0 pos, 0.0/0.0 neg]
%     Score = -45.755713 (regressionFit = 45.755710, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 181.0/474.0 pos, 0.0/0.0 neg]
%     Score = -44.991285 (regressionFit = 44.991282, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, _), sameperson(A, A).  [covers 163.0/474.0 pos, 0.0/0.0 neg]
%     Score = -44.991285 (regressionFit = 44.991282, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(A, C).  [covers 163.0/474.0 pos, 0.0/0.0 neg]
%     Score = -44.991285 (regressionFit = 44.991282, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, A).  [covers 163.0/474.0 pos, 0.0/0.0 neg]
%     Score = -45.616295 (regressionFit = 45.616292, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 177.0/474.0 pos, 0.0/0.0 neg]
%     Score = -40.976290 (regressionFit = 40.976287, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, _), student(A).  [covers 92.0/474.0 pos, 0.0/0.0 neg]
%     Score = -45.930593 (regressionFit = 45.930590, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C).  [covers 169.0/474.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 181.0/474.0 pos, 0.0/0.0 neg]' score=-45.75571246337818
%  At # nodes expanded = 9, |OPEN| = 0.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -45.755713 (regressionFit = 45.755710, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 181.0/474.0 pos, 0.0/0.0 neg]
%     Score = -45.755713 (regressionFit = 45.755710, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 181.0/474.0 pos, 0.0/0.0 neg]
%     Score = -45.755713 (regressionFit = 45.755710, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 181.0/474.0 pos, 0.0/0.0 neg]
%     Score = -44.991286 (regressionFit = 44.991282, penalties=3.130000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), sameperson(A, A).  [covers 163.0/474.0 pos, 0.0/0.0 neg]
%     Score = -40.976290 (regressionFit = 40.976287, penalties=3.130000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), student(A).  [covers 92.0/474.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- student(A).  [covers 302.0/474.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- student(A).  [covers 302.0/474.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: faculty(A) :- student(A).  [covers 302.0/474.0 pos, 0.0/0.0 neg]
Comparing variance: -7.793618583461364E-17 to score=0.0025 #egs=302.0
Comparing variance: 0.04177117855147294 to score=0.0025 #egs=172.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 172.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.041771)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.041771) into the LAST position (#1) in the search queue.

% Time for loop #1: 69 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      faculty(A) :- student(A).  [covers 302.0/474.0 pos, 0.0/0.0 neg]
% This clause covers 302 positive examples, of which 302 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 10 positive seeds: 25 37 41 46 51 82 85 108 143 151
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 172.0/172.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 172.0/172.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 172.0/172.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -6.742521 (regressionFit = 6.742520, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 71.0/172.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -6.742521): faculty(A) :- courseprof(_, A).  [covers 71.0/172.0 pos, 0.0/0.0 neg]
%     Score = -6.401494 (regressionFit = 6.401493, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 89.0/172.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -6.401494): faculty(A) :- project(_, A).  [covers 89.0/172.0 pos, 0.0/0.0 neg]
%     Score = -0.000001 (regressionFit = 2.91600e-13, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 154.0/172.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.000001): faculty(A) :- sameperson(A, A).  [covers 154.0/172.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 154.0/172.0 pos, 0.0/0.0 neg]' score=-1.0100002916000777E-6
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -6.608337 (regressionFit = 6.608334, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/172.0 pos, 0.0/0.0 neg]
%     Score = -6.594316 (regressionFit = 6.594314, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/172.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 89.0/172.0 pos, 0.0/0.0 neg]' score=-6.4014936623127365
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 3 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -6.401495 (regressionFit = 6.401493, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 89.0/172.0 pos, 0.0/0.0 neg]
%     Score = -6.401495 (regressionFit = 6.401493, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 89.0/172.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 89.0/172.0 pos, 0.0/0.0 neg]' score=-6.401494572312736
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 10 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -7.087310 (regressionFit = 7.087307, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 67.0/172.0 pos, 0.0/0.0 neg]
%     Score = -7.184642 (regressionFit = 7.184639, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C).  [covers 19.0/172.0 pos, 0.0/0.0 neg]
%     Score = -6.401496 (regressionFit = 6.401493, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 89.0/172.0 pos, 0.0/0.0 neg]
%     Score = -6.401495 (regressionFit = 6.401493, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 89.0/172.0 pos, 0.0/0.0 neg]
%     Score = -6.401496 (regressionFit = 6.401493, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 89.0/172.0 pos, 0.0/0.0 neg]
%     Score = -6.594317 (regressionFit = 6.594314, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, _), sameperson(A, A).  [covers 71.0/172.0 pos, 0.0/0.0 neg]
%     Score = -6.594317 (regressionFit = 6.594314, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(A, C).  [covers 71.0/172.0 pos, 0.0/0.0 neg]
%     Score = -6.594317 (regressionFit = 6.594314, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, A).  [covers 71.0/172.0 pos, 0.0/0.0 neg]
%     Score = -6.914460 (regressionFit = 6.914457, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 85.0/172.0 pos, 0.0/0.0 neg]
%     Score = -7.021770 (regressionFit = 7.021767, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C).  [covers 77.0/172.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 89.0/172.0 pos, 0.0/0.0 neg]' score=-6.401494672312737
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 4 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -6.401496 (regressionFit = 6.401493, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 89.0/172.0 pos, 0.0/0.0 neg]
%     Score = -6.401496 (regressionFit = 6.401493, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 89.0/172.0 pos, 0.0/0.0 neg]
%     Score = -6.401496 (regressionFit = 6.401493, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 89.0/172.0 pos, 0.0/0.0 neg]
%     Score = -6.594317 (regressionFit = 6.594314, penalties=3.130000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), sameperson(A, A).  [covers 71.0/172.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 71.0/172.0 pos, 0.0/0.0 neg]' score=-6.594316080405036
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -6.594317 (regressionFit = 6.594314, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), project(_, A).  [covers 71.0/172.0 pos, 0.0/0.0 neg]
%     Score = -6.594317 (regressionFit = 6.594314, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 71.0/172.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 70.0/172.0 pos, 0.0/0.0 neg]' score=-6.608336592014687
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -6.608338 (regressionFit = 6.608334, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseprof(B, _).  [covers 70.0/172.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 71.0/172.0 pos, 0.0/0.0 neg]' score=-6.742521469167592
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 4 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -6.742522 (regressionFit = 6.742520, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _).  [covers 71.0/172.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=2] 'faculty(A) :- courseprof(B, A), courseprof(B, _).  [covers 71.0/172.0 pos, 0.0/0.0 neg]' score=-6.742522379167592
%  At # nodes expanded = 9, |OPEN| = 0.  Pruned 12 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 8 bad extensions.
%     Score = -6.742523 (regressionFit = 6.742520, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), courseprof(_, C).  [covers 71.0/172.0 pos, 0.0/0.0 neg]
%     Score = -6.742523 (regressionFit = 6.742520, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), courseprof(B, _).  [covers 71.0/172.0 pos, 0.0/0.0 neg]
%     Score = -6.608338 (regressionFit = 6.608334, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, _), sameperson(A, A).  [covers 70.0/172.0 pos, 0.0/0.0 neg]
%     Score = -6.608337 (regressionFit = 6.608334, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(A, C).  [covers 70.0/172.0 pos, 0.0/0.0 neg]
%     Score = -6.608337 (regressionFit = 6.608334, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(C, A).  [covers 70.0/172.0 pos, 0.0/0.0 neg]
%     Score = -6.608337 (regressionFit = 6.608334, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(B, C), sameperson(C, C).  [covers 70.0/172.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/172.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A).  [covers 154.0/172.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.042.
% Will extend: faculty(A) :- sameperson(A, A).  [covers 154.0/172.0 pos, 0.0/0.0 neg]
Comparing variance: 1.8917046861145523E-15 to score=0.0025 #egs=154.0
Comparing variance: 1.5419764230904953E-17 to score=0.0025 #egs=18.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #2: 45 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      faculty(A) :- sameperson(A, A).  [covers 154.0/172.0 pos, 0.0/0.0 neg]
% This clause covers 154 positive examples, of which 154 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #3 @ 8:56:41 5/11/17.  [Using 3,390,872 memory cells.]  %%%%%


% FOR faculty(A):
%   if ( student(A) )
%   then return -0.1123163781936068;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
%   else if ( sameperson(A, A) )
%   | then return 0.5553664367462833;  // std dev = 5.40e-07, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


% Clauses:

faculty(A, -0.1123163781936068) :- 
     student(A), 
     !. // Clause #1.

faculty(A, 0.5553664367462833) :- 
     sameperson(A, A), 
     !. // Clause #2.

faculty(A, -0.11231637819360635) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_faculty(a, -0.1123163781936068) :-  /* #neg=302 */ 
   student(a),
   !. // Flattened version of clause #1.

flattened_faculty(a, 0.5553664367462833) :-  /* #pos=154 */ 
   sameperson(a, a),
   !. // Flattened version of clause #2.

flattened_faculty(underscore, -0.11231637819360635) :-  /* #neg=18 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   sameperson(a, a)
%   student(a)

% Saving model in: datasets/WebKB/train/models/bRDNs/faculty.model.ckpt


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for faculty.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).

logPrior(-1.8).
faculty(D, Total) :- // A general accessor. 
   faculty(D, 1000000, Total), !.
faculty(D, Total) :- waitHere("This should not fail", faculty(D, Total)).

faculty(D, TreesToUse, Total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(LogPrior),
   getScore_faculty_tree1(D, TreesToUse, Total1),
   getScore_faculty_tree2(D, TreesToUse, Total2),
   getScore_faculty_tree3(D, TreesToUse, Total3),
   Total is LogPrior + Total1 + Total2 + Total3,
   !.
faculty(D, TreesToUse, Total) :- waitHere("This should not fail", faculty(D, TreesToUse, Total)).

getScore_faculty_tree1(D, TreesToUse, 0.0) :- 1 > TreesToUse, !.
getScore_faculty_tree1(D, TreesToUse, Total1) :- faculty_tree1(D, Total), stepLength_tree1(StepLen), Total1 is Total * StepLen.

getScore_faculty_tree2(D, TreesToUse, 0.0) :- 2 > TreesToUse, !.
getScore_faculty_tree2(D, TreesToUse, Total2) :- faculty_tree2(D, Total), stepLength_tree2(StepLen), Total2 is Total * StepLen.

getScore_faculty_tree3(D, TreesToUse, 0.0) :- 3 > TreesToUse, !.
getScore_faculty_tree3(D, TreesToUse, Total3) :- faculty_tree3(D, Total), stepLength_tree3(StepLen), Total3 is Total * StepLen.

flattenedLiteralsInThisSetOfTrees(faculty, 2, [
   sameperson(a, a),
   student(a)]).
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:1.4602287760585115
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 84 128 277 421 437 495 588 640 713 867
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 1,103.0/1,103.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 1,103.0/1,103.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 1,103.0/1,103.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -1,090.521055 (regressionFit = 1,090.521053, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 212.0/1,103.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1,090.521055): faculty(A) :- courseprof(_, A).  [covers 212.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,516.162829 (regressionFit = 1,516.162828, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 81.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,595.725787 (regressionFit = 1,595.725786, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 452.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,563.950234 (regressionFit = 1,563.950233, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 1,059.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -250.060716 (regressionFit = 250.060715, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- student(A).  [covers 597.0/1,103.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -250.060716): faculty(A) :- student(A).  [covers 597.0/1,103.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- student(A).  [covers 597.0/1,103.0 pos, 0.0/0.0 neg]' score=-250.0607157028133
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -1,516.162830 (regressionFit = 1,516.162828, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- student(A), courseta(_, A).  [covers 81.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,365.477312 (regressionFit = 1,365.477309, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- student(A), project(_, A).  [covers 197.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -250.060717 (regressionFit = 250.060715, penalties=2.0100000000000002E-6) for clause:  faculty(A) :- student(A), sameperson(A, A).  [covers 597.0/1,103.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), sameperson(A, A).  [covers 597.0/1,103.0 pos, 0.0/0.0 neg]' score=-250.0607167028133
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -1,516.162831 (regressionFit = 1,516.162828, penalties=3.12E-6) for clause:  faculty(A) :- student(A), sameperson(A, A), courseta(_, A).  [covers 81.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,365.477313 (regressionFit = 1,365.477309, penalties=3.12E-6) for clause:  faculty(A) :- student(A), sameperson(A, A), project(_, A).  [covers 197.0/1,103.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 212.0/1,103.0 pos, 0.0/0.0 neg]' score=-1090.5210545604639
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 4 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1,090.521056 (regressionFit = 1,090.521053, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 212.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,404.107879 (regressionFit = 1,404.107877, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 95.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,305.227225 (regressionFit = 1,305.227223, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A).  [covers 129.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,079.741452 (regressionFit = 1,079.741450, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 210.0/1,103.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), sameperson(A, A).  [covers 210.0/1,103.0 pos, 0.0/0.0 neg]' score=-1079.7414516227188
%  At # nodes expanded = 5, |OPEN| = 8.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1,079.741453 (regressionFit = 1,079.741450, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A), courseprof(_, A).  [covers 210.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,393.786480 (regressionFit = 1,393.786476, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), sameperson(A, A), courseta(B, _).  [covers 93.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,305.227226 (regressionFit = 1,305.227223, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), sameperson(A, A), project(_, A).  [covers 129.0/1,103.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 212.0/1,103.0 pos, 0.0/0.0 neg]' score=-1090.521055570464
%  At # nodes expanded = 6, |OPEN| = 7.  Pruned 6 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -1,090.521057 (regressionFit = 1,090.521053, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 212.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,404.107880 (regressionFit = 1,404.107877, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(_, A), courseta(B, _).  [covers 95.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,404.107880 (regressionFit = 1,404.107877, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(B, A), courseta(B, _).  [covers 95.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,305.227226 (regressionFit = 1,305.227223, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), project(_, A).  [covers 129.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,079.741453 (regressionFit = 1,079.741450, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), sameperson(A, A).  [covers 210.0/1,103.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), project(_, A).  [covers 129.0/1,103.0 pos, 0.0/0.0 neg]' score=-1305.227224858023
%  At # nodes expanded = 7, |OPEN| = 6.  Pruned 5 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1,305.227226 (regressionFit = 1,305.227223, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A), courseprof(_, A).  [covers 129.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,469.508364 (regressionFit = 1,469.508360, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(B, A), project(_, A), courseta(B, _).  [covers 60.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,305.227226 (regressionFit = 1,305.227223, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A), project(_, A).  [covers 129.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,305.227226 (regressionFit = 1,305.227223, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), project(B, A), project(B, _).  [covers 129.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,305.227226 (regressionFit = 1,305.227223, penalties=3.230000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A), sameperson(A, A).  [covers 129.0/1,103.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=2] 'faculty(A) :- student(A), project(_, A).  [covers 197.0/1,103.0 pos, 0.0/0.0 neg]' score=-1365.477311527262
%  At # nodes expanded = 8, |OPEN| = 5.  Pruned 3 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1,365.477312 (regressionFit = 1,365.477309, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, _).  [covers 197.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,365.477313 (regressionFit = 1,365.477309, penalties=3.12E-6) for clause:  faculty(A) :- student(A), project(_, A), sameperson(A, A).  [covers 197.0/1,103.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 95.0/1,103.0 pos, 0.0/0.0 neg]' score=-1404.1078790668591
%  At # nodes expanded = 9, |OPEN| = 4.  Pruned 12 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 8 bad extensions.
%     Score = -1,404.107880 (regressionFit = 1,404.107877, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), courseprof(_, A).  [covers 95.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,404.107880 (regressionFit = 1,404.107877, penalties=3.04E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), courseta(_, C).  [covers 95.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,469.508364 (regressionFit = 1,469.508360, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), project(_, A).  [covers 60.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,393.786480 (regressionFit = 1,393.786476, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _), sameperson(A, A).  [covers 93.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,404.107880 (regressionFit = 1,404.107877, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), sameperson(C, C).  [covers 95.0/1,103.0 pos, 0.0/0.0 neg]
%     Score = -1,404.107880 (regressionFit = 1,404.107877, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, C), student(C).  [covers 95.0/1,103.0 pos, 0.0/0.0 neg]

***** Warning: #4 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- student(A).  [covers 597.0/1,103.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- student(A).  [covers 597.0/1,103.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: faculty(A) :- student(A).  [covers 597.0/1,103.0 pos, 0.0/0.0 neg]
Comparing variance: 0.005865262264043753 to score=0.0025 #egs=597.0
Comparing variance: 0.48727105359916834 to score=0.0025 #egs=506.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 597.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.005865)
%         ILP node to extend: faculty(A) :- student(A).  [covers 597.0/1,103.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.005865) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 506.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.487271)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.487271) into position #1 in the search queue (new size=2).

% Time for loop #1: 79 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      faculty(A) :- student(A).  [covers 597.0/1,103.0 pos, 0.0/0.0 neg]
% This clause covers 597 positive examples, of which 597 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 78 207 219 225 251 322 323 425
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 506.0/506.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 506.0/506.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 506.0/506.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -231.761239 (regressionFit = 231.761238, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 212.0/506.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -231.761239): faculty(A) :- courseprof(_, A).  [covers 212.0/506.0 pos, 0.0/0.0 neg]
%     Score = -230.268881 (regressionFit = 230.268880, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 255.0/506.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -230.268881): faculty(A) :- project(_, A).  [covers 255.0/506.0 pos, 0.0/0.0 neg]
%     Score = -9.985753 (regressionFit = 9.985752, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 462.0/506.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -9.985753): faculty(A) :- sameperson(A, A).  [covers 462.0/506.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 462.0/506.0 pos, 0.0/0.0 neg]' score=-9.985752966126396
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -228.504818 (regressionFit = 228.504816, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 210.0/506.0 pos, 0.0/0.0 neg]
%     Score = -228.115784 (regressionFit = 228.115782, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 213.0/506.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 213.0/506.0 pos, 0.0/0.0 neg]' score=-228.11578448988033
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -236.627171 (regressionFit = 236.627168, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), courseprof(_, A).  [covers 129.0/506.0 pos, 0.0/0.0 neg]
%     Score = -228.115785 (regressionFit = 228.115782, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A), project(_, A).  [covers 213.0/506.0 pos, 0.0/0.0 neg]
%     Score = -228.115785 (regressionFit = 228.115782, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 213.0/506.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2] 'faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 210.0/506.0 pos, 0.0/0.0 neg]' score=-228.50481774986397
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -228.504819 (regressionFit = 228.504816, penalties=3.130000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), courseprof(_, A).  [covers 210.0/506.0 pos, 0.0/0.0 neg]
%     Score = -239.161173 (regressionFit = 239.161170, penalties=3.1300000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(B, A), courseta(B, _).  [covers 93.0/506.0 pos, 0.0/0.0 neg]
%     Score = -236.627171 (regressionFit = 236.627168, penalties=3.230000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A), project(_, A).  [covers 129.0/506.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 255.0/506.0 pos, 0.0/0.0 neg]' score=-230.2688809584644
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -236.627170 (regressionFit = 236.627168, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 129.0/506.0 pos, 0.0/0.0 neg]
%     Score = -230.268882 (regressionFit = 230.268880, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 255.0/506.0 pos, 0.0/0.0 neg]
%     Score = -230.268882 (regressionFit = 230.268880, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 255.0/506.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 255.0/506.0 pos, 0.0/0.0 neg]' score=-230.26888186846438
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 10 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -236.627171 (regressionFit = 236.627168, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 129.0/506.0 pos, 0.0/0.0 neg]
%     Score = -245.495568 (regressionFit = 245.495565, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 194.0/506.0 pos, 0.0/0.0 neg]
%     Score = -246.517799 (regressionFit = 246.517796, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C).  [covers 55.0/506.0 pos, 0.0/0.0 neg]
%     Score = -230.268883 (regressionFit = 230.268880, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 255.0/506.0 pos, 0.0/0.0 neg]
%     Score = -230.268883 (regressionFit = 230.268880, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 255.0/506.0 pos, 0.0/0.0 neg]
%     Score = -230.268883 (regressionFit = 230.268880, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 255.0/506.0 pos, 0.0/0.0 neg]
%     Score = -228.115785 (regressionFit = 228.115782, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, _), sameperson(A, A).  [covers 213.0/506.0 pos, 0.0/0.0 neg]
%     Score = -228.115785 (regressionFit = 228.115782, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(A, C).  [covers 213.0/506.0 pos, 0.0/0.0 neg]
%     Score = -228.115785 (regressionFit = 228.115782, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, A).  [covers 213.0/506.0 pos, 0.0/0.0 neg]
%     Score = -243.963971 (regressionFit = 243.963968, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 243.0/506.0 pos, 0.0/0.0 neg]
%     Score = -245.611669 (regressionFit = 245.611666, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C).  [covers 220.0/506.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 255.0/506.0 pos, 0.0/0.0 neg]' score=-230.2688819684644
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 4 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -236.627171 (regressionFit = 236.627168, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 129.0/506.0 pos, 0.0/0.0 neg]
%     Score = -230.268883 (regressionFit = 230.268880, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 255.0/506.0 pos, 0.0/0.0 neg]
%     Score = -230.268883 (regressionFit = 230.268880, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 255.0/506.0 pos, 0.0/0.0 neg]
%     Score = -230.268883 (regressionFit = 230.268880, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 255.0/506.0 pos, 0.0/0.0 neg]
%     Score = -228.115785 (regressionFit = 228.115782, penalties=3.130000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), sameperson(A, A).  [covers 213.0/506.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 212.0/506.0 pos, 0.0/0.0 neg]' score=-231.76123932317265
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 4 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -231.761240 (regressionFit = 231.761238, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 212.0/506.0 pos, 0.0/0.0 neg]
%     Score = -241.733590 (regressionFit = 241.733588, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 95.0/506.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 212.0/506.0 pos, 0.0/0.0 neg]' score=-231.76124033317265
%  At # nodes expanded = 9, |OPEN| = 2.  Pruned 6 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -231.761241 (regressionFit = 231.761238, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 212.0/506.0 pos, 0.0/0.0 neg]
%     Score = -241.733591 (regressionFit = 241.733588, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(_, A), courseta(B, _).  [covers 95.0/506.0 pos, 0.0/0.0 neg]
%     Score = -241.733591 (regressionFit = 241.733588, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(B, A), courseta(B, _).  [covers 95.0/506.0 pos, 0.0/0.0 neg]
%     Score = -236.627171 (regressionFit = 236.627168, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), project(_, A).  [covers 129.0/506.0 pos, 0.0/0.0 neg]
%     Score = -228.504819 (regressionFit = 228.504816, penalties=3.130000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), sameperson(A, A).  [covers 210.0/506.0 pos, 0.0/0.0 neg]

***** Warning: #5 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- sameperson(A, A).  [covers 462.0/506.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A).  [covers 462.0/506.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.487.
% Will extend: faculty(A) :- sameperson(A, A).  [covers 462.0/506.0 pos, 0.0/0.0 neg]
Comparing variance: 0.020984881566876053 to score=0.0025 #egs=462.0
Comparing variance: 0.006607651641583168 to score=0.0025 #egs=44.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 462.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.020985)
%         ILP node to extend: faculty(A) :- sameperson(A, A).  [covers 462.0/506.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.020985) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 44.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.006608)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -0.006608) into position #2 in the search queue (new size=3).

% Time for loop #2: 86 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      faculty(A) :- sameperson(A, A).  [covers 462.0/506.0 pos, 0.0/0.0 neg]
% This clause covers 462 positive examples, of which 462 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'faculty(A) :- sameperson(A, A).  [covers 462.0/462.0 pos, 0.0/0.0 neg]'
%     Score = -9.985753 (regressionFit = 9.985752, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- sameperson(A, A).  [covers 462.0/462.0 pos, 0.0/0.0 neg]

% Have these 8 positive seeds: 30 168 198 306 320 341 364 434
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #3, bodyLen=1] 'faculty(A) :- sameperson(A, A).  [covers 462.0/462.0 pos, 0.0/0.0 neg]' score=-9.985752966126396
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -9.627476 (regressionFit = 9.627474, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 210.0/462.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -9.627476): faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 210.0/462.0 pos, 0.0/0.0 neg]
%     Score = -9.629220 (regressionFit = 9.629218, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(_, A).  [covers 213.0/462.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=2] 'faculty(A) :- sameperson(A, A), courseprof(_, A).  [covers 210.0/462.0 pos, 0.0/0.0 neg]' score=-9.627475933187066
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 2 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% Consider expanding [#3 of outerLoop #3, bodyLen=2] 'faculty(A) :- sameperson(A, A), project(_, A).  [covers 213.0/462.0 pos, 0.0/0.0 neg]' score=-9.629219961776494
%  At # nodes expanded = 3, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -9.629221 (regressionFit = 9.629218, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 213.0/462.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=3] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, _).  [covers 213.0/462.0 pos, 0.0/0.0 neg]' score=-9.629220871776495
%  At # nodes expanded = 4, |OPEN| = 0.  Pruned 8 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 8 bad extensions.
%     Score = -9.599237 (regressionFit = 9.599233, penalties=4.040000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(_, C).  [covers 171.0/462.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -9.599237): faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(_, C).  [covers 171.0/462.0 pos, 0.0/0.0 neg]
%     Score = -9.629222 (regressionFit = 9.629218, penalties=4.040000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, _), project(B, _).  [covers 213.0/462.0 pos, 0.0/0.0 neg]
%     Score = -9.629222 (regressionFit = 9.629218, penalties=3.830000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), sameperson(C, C).  [covers 213.0/462.0 pos, 0.0/0.0 neg]
%     Score = -9.617953 (regressionFit = 9.617949, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), student(C).  [covers 195.0/462.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(_, C).  [covers 171.0/462.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(_, C).  [covers 171.0/462.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.021.
% Will extend: faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(_, C).  [covers 171.0/462.0 pos, 0.0/0.0 neg]
Comparing variance: 0.0561358642623221 to score=0.0025 #egs=171.0
Comparing variance: 4.688117019448084E-15 to score=0.0025 #egs=291.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 171.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.056136)
%         ILP node to extend: faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(_, C).  [covers 171.0/462.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.056136) into position #1 in the search queue (new size=3).
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #3: 53 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(_, C).  [covers 171.0/462.0 pos, 0.0/0.0 neg]
% This clause covers 171 positive examples, of which 171 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(_, C).  [covers 171.0/171.0 pos, 0.0/0.0 neg]'
%     Score = -9.599237 (regressionFit = 9.599233, penalties=4.040000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(_, C).  [covers 171.0/171.0 pos, 0.0/0.0 neg]

% Have these 3 positive seeds: 56 91 132
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #4, bodyLen=4] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(_, C).  [covers 171.0/171.0 pos, 0.0/0.0 neg]' score=-9.599236828858444
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 14 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 9 bad extensions.
%     Score = -9.549728 (regressionFit = 9.549723, penalties=5.050000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(_, C), courseprof(_, A).  [covers 129.0/171.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -9.549728): faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(_, C), courseprof(_, A).  [covers 129.0/171.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(_, C), courseprof(_, C).  [covers 171.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539895 (regressionFit = 9.539890, penalties=5.050000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -9.539895): faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(_, C), project(_, A).  [covers 171.0/171.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(_, C), project(_, C).  [covers 171.0/171.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.050000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(_, C), project(B, _).  [covers 171.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.596522 (regressionFit = 9.596517, penalties=4.94E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(_, C), sameperson(C, C).  [covers 168.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=5] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _).  [covers 123.0/171.0 pos, 0.0/0.0 neg]' score=-9.539894598238705
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 28 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 16 bad extensions.
%     Score = -9.471699 (regressionFit = 9.471693, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseprof(_, A).  [covers 93.0/171.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -9.471699): faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseprof(_, A).  [covers 93.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseprof(_, C).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=5.9600000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseta(_, E).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), project(_, A).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), project(_, C).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.338552 (regressionFit = 9.338546, penalties=5.9600000000000005E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E).  [covers 63.0/171.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -9.338552): faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E).  [covers 63.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=6.0600000000000004E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), project(B, _).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539895 (regressionFit = 9.539890, penalties=5.950000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), sameperson(C, C).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539895 (regressionFit = 9.539890, penalties=5.850000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), sameperson(E, E).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539895 (regressionFit = 9.539890, penalties=5.9500000000000015E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), student(E).  [covers 123.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=6] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E).  [covers 63.0/171.0 pos, 0.0/0.0 neg]' score=-9.338552370431831
%  At # nodes expanded = 3, |OPEN| = 15.  Pruned 33 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -9.173452 (regressionFit = 9.173445, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A).  [covers 45.0/171.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -9.173452): faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A).  [covers 45.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.338553 (regressionFit = 9.338546, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseta(_, E).  [covers 63.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.338553 (regressionFit = 9.338546, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), project(_, C).  [covers 63.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.338553 (regressionFit = 9.338546, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), project(_, E).  [covers 63.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.338553 (regressionFit = 9.338546, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), project(B, _).  [covers 63.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.338553 (regressionFit = 9.338546, penalties=6.87E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), project(F, _).  [covers 63.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.338553 (regressionFit = 9.338546, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), sameperson(C, C).  [covers 63.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.338553 (regressionFit = 9.338546, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), sameperson(E, E).  [covers 63.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.338553 (regressionFit = 9.338546, penalties=6.960000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), student(E).  [covers 63.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=6] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseprof(_, A).  [covers 93.0/171.0 pos, 0.0/0.0 neg]' score=-9.471698738981072
%  At # nodes expanded = 4, |OPEN| = 14.  Pruned 38 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -9.471700 (regressionFit = 9.471693, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseprof(_, A), courseprof(_, A).  [covers 93.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.471700 (regressionFit = 9.471693, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseprof(_, A), courseprof(_, C).  [covers 93.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.317916 (regressionFit = 9.317909, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseprof(E, A), courseta(E, _).  [covers 60.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.471700 (regressionFit = 9.471693, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseprof(_, A), courseta(_, E).  [covers 93.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.471700 (regressionFit = 9.471693, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseprof(_, A), project(_, A).  [covers 93.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.471700 (regressionFit = 9.471693, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseprof(_, A), project(_, C).  [covers 93.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.173452 (regressionFit = 9.173445, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseprof(_, A), project(_, E).  [covers 45.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.471700 (regressionFit = 9.471693, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseprof(_, A), project(B, _).  [covers 93.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.471700 (regressionFit = 9.471693, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseprof(_, A), sameperson(C, C).  [covers 93.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.471700 (regressionFit = 9.471693, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseprof(_, A), sameperson(E, E).  [covers 93.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.471700 (regressionFit = 9.471693, penalties=6.960000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseprof(_, A), student(E).  [covers 93.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=6] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), sameperson(E, E).  [covers 123.0/171.0 pos, 0.0/0.0 neg]' score=-9.539895398238706
%  At # nodes expanded = 5, |OPEN| = 13.  Pruned 26 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 16 bad extensions.
%     Score = -9.471700 (regressionFit = 9.471693, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), sameperson(E, E), courseprof(_, A).  [covers 93.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), sameperson(E, E), courseprof(_, C).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), sameperson(E, E), courseta(_, E).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), sameperson(E, E), project(_, A).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), sameperson(E, E), project(_, C).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.338553 (regressionFit = 9.338546, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), sameperson(E, E), project(_, E).  [covers 63.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), sameperson(E, E), project(B, _).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=6.750000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), sameperson(E, E), sameperson(C, C).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=6.850000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), sameperson(E, E), student(E).  [covers 123.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=6] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), sameperson(C, C).  [covers 123.0/171.0 pos, 0.0/0.0 neg]' score=-9.539895498238705
%  At # nodes expanded = 6, |OPEN| = 12.  Pruned 26 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 16 bad extensions.
%     Score = -9.471700 (regressionFit = 9.471693, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), sameperson(C, C), courseprof(_, A).  [covers 93.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), sameperson(C, C), courseprof(_, C).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), sameperson(C, C), courseta(_, E).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), sameperson(C, C), project(_, A).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), sameperson(C, C), project(_, C).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.338553 (regressionFit = 9.338546, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), sameperson(C, C), project(_, E).  [covers 63.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), sameperson(C, C), project(B, _).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=6.750000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), sameperson(C, C), sameperson(E, E).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=6.850000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), sameperson(C, C), student(E).  [covers 123.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #4, bodyLen=6] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), student(E).  [covers 123.0/171.0 pos, 0.0/0.0 neg]' score=-9.539895498238705
%  At # nodes expanded = 7, |OPEN| = 11.  Pruned 28 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 16 bad extensions.
%     Score = -9.471700 (regressionFit = 9.471693, penalties=6.960000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), student(E), courseprof(_, A).  [covers 93.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=6.960000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), student(E), courseprof(_, C).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=6.960000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), student(E), courseta(_, E).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=6.960000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), student(E), project(_, A).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=6.960000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), student(E), project(_, C).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.338553 (regressionFit = 9.338546, penalties=6.960000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), student(E), project(_, E).  [covers 63.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=6.960000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), student(E), project(B, _).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=6.850000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), student(E), sameperson(C, C).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=6.850000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), student(E), sameperson(E, E).  [covers 123.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #4, bodyLen=6] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseta(_, E).  [covers 123.0/171.0 pos, 0.0/0.0 neg]' score=-9.539895508238704
%  At # nodes expanded = 8, |OPEN| = 10.  Pruned 38 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -9.471700 (regressionFit = 9.471693, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseta(_, E), courseprof(_, A).  [covers 93.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseta(_, E), courseprof(_, C).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=6.87E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseta(F, E), courseprof(F, _).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseta(_, E), courseta(_, E).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseta(_, E), project(_, A).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseta(_, E), project(_, C).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.338553 (regressionFit = 9.338546, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseta(_, E), project(_, E).  [covers 63.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseta(_, E), project(B, _).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseta(_, E), sameperson(C, C).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseta(_, E), sameperson(E, E).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=6.960000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseta(_, E), student(E).  [covers 123.0/171.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #4, bodyLen=6] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseprof(_, C).  [covers 123.0/171.0 pos, 0.0/0.0 neg]' score=-9.539895608238705
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 38 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -9.471700 (regressionFit = 9.471693, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseprof(_, C), courseprof(_, A).  [covers 93.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseprof(_, C), courseprof(_, C).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseprof(_, C), courseta(_, E).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseprof(_, C), project(_, A).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseprof(_, C), project(_, C).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.338553 (regressionFit = 9.338546, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseprof(_, C), project(_, E).  [covers 63.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=7.070000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseprof(_, C), project(B, _).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=6.96E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, _), courseprof(_, C), sameperson(C, C).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539896 (regressionFit = 9.539890, penalties=6.86E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseprof(_, C), sameperson(E, E).  [covers 123.0/171.0 pos, 0.0/0.0 neg]
%     Score = -9.539897 (regressionFit = 9.539890, penalties=6.960000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), courseprof(_, C), student(E).  [covers 123.0/171.0 pos, 0.0/0.0 neg]

***** Warning: #6 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A).  [covers 45.0/171.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A).  [covers 45.0/171.0 pos, 0.0/0.0 neg]

% Expanding node at Level 3 with score = -0.056.
% Will extend: faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A).  [covers 45.0/171.0 pos, 0.0/0.0 neg]
Comparing variance: 0.20385433416508678 to score=0.0025 #egs=45.0
Comparing variance: 7.218211918832763E-15 to score=0.0025 #egs=126.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 45.0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-0.203854)
%         ILP node to extend: faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A).  [covers 45.0/171.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -0.203854) into position #1 in the search queue (new size=3).
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #4: 707 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A).  [covers 45.0/171.0 pos, 0.0/0.0 neg]
% This clause covers 45 positive examples, of which 45 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A).  [covers 45.0/45.0 pos, 0.0/0.0 neg]'
%     Score = -9.173452 (regressionFit = 9.173445, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A).  [covers 45.0/45.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 0 4 7 10 13 16 17 18 32 39
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=7] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A).  [covers 45.0/45.0 pos, 0.0/0.0 neg]' score=-9.173452007429814
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 43 variant children.  Sending 18 items to OPEN for evaluation and possible insertion.
% Have created 18 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.980000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), courseprof(_, A).  [covers 45.0/45.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.980000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), courseprof(_, C).  [covers 45.0/45.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.980000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), courseprof(D, _).  [covers 45.0/45.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.980000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), courseta(D, _).  [covers 45.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.513047 (regressionFit = 8.513040, penalties=7.77E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E).  [covers 24.0/45.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -8.513047): faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E).  [covers 24.0/45.0 pos, 0.0/0.0 neg]
%     Score = -9.084552 (regressionFit = 9.084544, penalties=7.88E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, _).  [covers 39.0/45.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.980000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), courseta(_, E).  [covers 45.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.788216 (regressionFit = 8.788209, penalties=7.870000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), project(B, E).  [covers 18.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.788216 (regressionFit = 8.788209, penalties=7.77E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, A).  [covers 18.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017743 (regressionFit = 8.017735, penalties=7.77E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -8.017743): faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.980000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), project(_, A).  [covers 45.0/45.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.980000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), project(_, C).  [covers 45.0/45.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.980000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), project(_, E).  [covers 45.0/45.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.980000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), project(B, _).  [covers 45.0/45.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.88E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, _).  [covers 45.0/45.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.870000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), sameperson(C, C).  [covers 45.0/45.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.870000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), sameperson(E, E).  [covers 45.0/45.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), student(E).  [covers 45.0/45.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=8] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]' score=-8.017743196414134
%  At # nodes expanded = 2, |OPEN| = 17.  Pruned 42 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants and have picked up 24 bad extensions.
%     Score = -8.017744 (regressionFit = 8.017735, penalties=8.78E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(_, A).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017744 (regressionFit = 8.017735, penalties=8.78E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(_, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017744 (regressionFit = 8.017735, penalties=8.78E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(D, _).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017744 (regressionFit = 8.017735, penalties=8.78E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseta(D, _).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.306672 (regressionFit = 8.306663, penalties=8.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(G, A), project(F, C), courseta(G, _).  [covers 27.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017744 (regressionFit = 8.017735, penalties=8.78E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseta(_, E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.788217 (regressionFit = 8.788209, penalties=8.670000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), project(B, E).  [covers 18.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017744 (regressionFit = 8.017735, penalties=8.78E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), project(_, A).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017744 (regressionFit = 8.017735, penalties=8.78E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), project(_, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017744 (regressionFit = 8.017735, penalties=8.78E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), project(_, E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017744 (regressionFit = 8.017735, penalties=8.78E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), project(B, _).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017744 (regressionFit = 8.017735, penalties=8.78E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), project(F, _).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017744 (regressionFit = 8.017735, penalties=8.670000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(C, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017744 (regressionFit = 8.017735, penalties=8.670000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(E, E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017744 (regressionFit = 8.017735, penalties=8.77E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), student(E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=9] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(C, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]' score=-8.017744096414134
%  At # nodes expanded = 3, |OPEN| = 31.  Pruned 40 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 24 bad extensions.
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(C, C), courseprof(_, A).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(C, C), courseprof(_, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(C, C), courseprof(D, _).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(C, C), courseta(D, _).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.306672 (regressionFit = 8.306663, penalties=9.580000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(G, A), project(F, C), sameperson(C, C), courseta(G, _).  [covers 27.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(C, C), courseta(_, E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.788218 (regressionFit = 8.788209, penalties=9.570000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(C, C), project(B, E).  [covers 18.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(C, C), project(_, A).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(C, C), project(_, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(C, C), project(_, E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(C, C), project(B, _).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(C, C), project(F, _).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.570000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(C, C), sameperson(E, E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.67E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(C, C), student(E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=9] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(E, E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]' score=-8.017744096414134
%  At # nodes expanded = 4, |OPEN| = 30.  Pruned 40 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 24 bad extensions.
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(E, E), courseprof(_, A).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(E, E), courseprof(_, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(E, E), courseprof(D, _).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(E, E), courseta(D, _).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.306672 (regressionFit = 8.306663, penalties=9.580000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(G, A), project(F, C), sameperson(E, E), courseta(G, _).  [covers 27.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(E, E), courseta(_, E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.788218 (regressionFit = 8.788209, penalties=9.570000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(E, E), project(B, E).  [covers 18.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(E, E), project(_, A).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(E, E), project(_, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(E, E), project(_, E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(E, E), project(B, _).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(E, E), project(F, _).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.570000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(E, E), sameperson(C, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.67E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), sameperson(E, E), student(E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=9] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), student(E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]' score=-8.017744196414135
%  At # nodes expanded = 5, |OPEN| = 29.  Pruned 42 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 24 bad extensions.
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.780000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), student(E), courseprof(_, A).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.780000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), student(E), courseprof(_, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.780000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), student(E), courseprof(D, _).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.780000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), student(E), courseta(D, _).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.306673 (regressionFit = 8.306663, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(G, A), project(F, C), student(E), courseta(G, _).  [covers 27.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.780000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), student(E), courseta(_, E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.788218 (regressionFit = 8.788209, penalties=9.67E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), student(E), project(B, E).  [covers 18.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.780000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), student(E), project(_, A).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.780000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), student(E), project(_, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.780000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), student(E), project(_, E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.780000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), student(E), project(B, _).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.780000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), student(E), project(F, _).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.67E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), student(E), sameperson(C, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.67E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), student(E), sameperson(E, E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #5, bodyLen=9] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(_, A).  [covers 30.0/45.0 pos, 0.0/0.0 neg]' score=-8.017744206414134
%  At # nodes expanded = 6, |OPEN| = 28.  Pruned 52 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 29 bad extensions.
%     Score = -8.788218 (regressionFit = 8.788209, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(_, A), project(B, E).  [covers 18.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(_, A), sameperson(C, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(_, A), sameperson(E, E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.780000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(_, A), student(E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #5, bodyLen=9] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(_, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]' score=-8.017744206414134
%  At # nodes expanded = 7, |OPEN| = 27.  Pruned 52 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 28 bad extensions.
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.580000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(G, C), courseta(G, E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.788218 (regressionFit = 8.788209, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(_, C), project(B, E).  [covers 18.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(_, C), sameperson(C, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(_, C), sameperson(E, E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.780000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(_, C), student(E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #5, bodyLen=9] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(D, _).  [covers 30.0/45.0 pos, 0.0/0.0 neg]' score=-8.017744206414134
%  At # nodes expanded = 8, |OPEN| = 26.  Pruned 66 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 34 bad extensions.
%     Score = -8.788218 (regressionFit = 8.788209, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(D, _), project(B, E).  [covers 18.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.580000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(D, G), project(B, G).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.580000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(D, G), project(F, G).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(D, _), sameperson(C, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.580000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(D, G), sameperson(C, G).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(D, _), sameperson(E, E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.580000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(D, G), sameperson(G, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.580000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(D, G), sameperson(G, G).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.780000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseprof(D, _), student(E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #5, bodyLen=9] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseta(D, _).  [covers 30.0/45.0 pos, 0.0/0.0 neg]' score=-8.017744206414134
%  At # nodes expanded = 9, |OPEN| = 25.  Pruned 66 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 33 bad extensions.
%     Score = -8.788218 (regressionFit = 8.788209, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseta(D, _), project(B, E).  [covers 18.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.788218 (regressionFit = 8.788209, penalties=9.580000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseta(D, G), project(B, G).  [covers 18.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.580000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseta(D, G), project(F, G).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseta(D, _), sameperson(C, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseta(D, _), sameperson(E, E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.580000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseta(D, G), sameperson(E, G).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.580000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseta(D, G), sameperson(G, E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.580000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseta(D, G), sameperson(G, G).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.780000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseta(D, _), student(E).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
%     Score = -8.017745 (regressionFit = 8.017735, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C), courseta(D, G), student(G).  [covers 30.0/45.0 pos, 0.0/0.0 neg]

***** Warning: #7 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]

% Expanding node at Level 4 with score = -0.204.
% Will extend: faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
Comparing variance: 5.684341886080802E-15 to score=0.0025 #egs=30.0
Comparing variance: 0.5345156950942642 to score=0.0025 #egs=15.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 15.0
%      addToQueueOfTreeStructuredLearningTasks (level=5; score=-0.534516)
%         ILP node to extend: faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A).  [covers 45.0/45.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 5 and with score = -0.534516) into position #1 in the search queue (new size=3).

% Time for loop #5: 587 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, C).  [covers 30.0/45.0 pos, 0.0/0.0 neg]
% This clause covers 30 positive examples, of which 30 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A).  [covers 45.0/15.0 pos, 0.0/0.0 neg]'
%     Score = -9.173452 (regressionFit = 9.173445, penalties=6.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A).  [covers 15.0/15.0 pos, 0.0/0.0 neg]

% Have these 8 positive seeds: 1 2 3 5 7 11 12 13
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #6, bodyLen=7] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A).  [covers 15.0/15.0 pos, 0.0/0.0 neg]' score=-9.173452007429814
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 43 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 47 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=7.980000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), courseprof(_, A).  [covers 15.0/15.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.980000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), courseprof(_, C).  [covers 15.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584352 (regressionFit = 7.584344, penalties=7.77E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -7.584352): faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584352 (regressionFit = 7.584344, penalties=7.88E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, _).  [covers 12.0/15.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.980000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), courseta(_, E).  [covers 15.0/15.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.980000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), project(_, A).  [covers 15.0/15.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.980000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), project(_, C).  [covers 15.0/15.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.980000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), project(_, E).  [covers 15.0/15.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.980000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), project(B, _).  [covers 15.0/15.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.88E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(_, A), project(F, _).  [covers 15.0/15.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.870000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), sameperson(C, C).  [covers 15.0/15.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.870000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), sameperson(E, E).  [covers 15.0/15.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=7.97E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(_, A), student(E).  [covers 15.0/15.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=8] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]' score=-7.584352092283481
%  At # nodes expanded = 2, |OPEN| = 12.  Pruned 41 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 26 bad extensions.
%     Score = -7.584353 (regressionFit = 7.584344, penalties=8.78E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), courseprof(_, A).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584353 (regressionFit = 7.584344, penalties=8.78E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), courseprof(_, C).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584353 (regressionFit = 7.584344, penalties=8.78E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), courseta(_, E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584353 (regressionFit = 7.584344, penalties=8.78E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), project(_, A).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584353 (regressionFit = 7.584344, penalties=8.78E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), project(_, C).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584353 (regressionFit = 7.584344, penalties=8.78E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), project(B, _).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584353 (regressionFit = 7.584344, penalties=8.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(G, A), courseta(G, E), project(F, _).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584353 (regressionFit = 7.584344, penalties=8.670000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), sameperson(E, E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584353 (regressionFit = 7.584344, penalties=8.77E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), student(E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=8] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, _).  [covers 12.0/15.0 pos, 0.0/0.0 neg]' score=-7.5843522022834815
%  At # nodes expanded = 3, |OPEN| = 20.  Pruned 67 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 37 bad extensions.
%     Score = -7.584353 (regressionFit = 7.584344, penalties=8.78E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, _), sameperson(C, C).  [covers 12.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584353 (regressionFit = 7.584344, penalties=8.78E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, _), sameperson(E, E).  [covers 12.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584353 (regressionFit = 7.584344, penalties=8.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, G), sameperson(E, G).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584353 (regressionFit = 7.584344, penalties=8.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, G), sameperson(G, E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584353 (regressionFit = 7.584344, penalties=8.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, G), sameperson(G, G).  [covers 12.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584353 (regressionFit = 7.584344, penalties=8.880000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, _), student(E).  [covers 12.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584353 (regressionFit = 7.584344, penalties=8.78E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, G), student(G).  [covers 12.0/15.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=9] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), sameperson(E, E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]' score=-7.584352992283481
%  At # nodes expanded = 4, |OPEN| = 26.  Pruned 39 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 26 bad extensions.
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), sameperson(E, E), courseprof(_, A).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), sameperson(E, E), courseprof(_, C).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), sameperson(E, E), courseta(_, E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), sameperson(E, E), project(_, A).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), sameperson(E, E), project(_, C).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), sameperson(E, E), project(B, _).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.580000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(G, A), courseta(G, E), sameperson(E, E), project(F, _).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.67E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), sameperson(E, E), student(E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #6, bodyLen=9] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(G, A), courseta(G, E), project(F, _).  [covers 3.0/15.0 pos, 0.0/0.0 neg]' score=-7.584353002283481
%  At # nodes expanded = 5, |OPEN| = 25.  Pruned 66 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 37 bad extensions.
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.580000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(G, A), courseta(G, E), project(F, _), sameperson(E, E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.480000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(G, A), courseta(G, E), project(F, H), sameperson(E, H).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.480000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(G, A), courseta(G, E), project(F, H), sameperson(H, E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.480000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(G, A), courseta(G, E), project(F, H), sameperson(H, H).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(G, A), courseta(G, E), project(F, _), student(E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.580000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(G, A), courseta(G, E), project(F, H), student(H).  [covers 3.0/15.0 pos, 0.0/0.0 neg]

% Consider expanding [#6 of outerLoop #6, bodyLen=9] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, G), sameperson(E, G).  [covers 3.0/15.0 pos, 0.0/0.0 neg]' score=-7.584353002283481
%  At # nodes expanded = 6, |OPEN| = 24.  Pruned 65 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 41 bad extensions.
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, G), sameperson(E, G), student(E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, G), sameperson(E, G), student(G).  [covers 3.0/15.0 pos, 0.0/0.0 neg]

% Consider expanding [#7 of outerLoop #6, bodyLen=9] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, G), sameperson(G, E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]' score=-7.584353002283481
%  At # nodes expanded = 7, |OPEN| = 23.  Pruned 65 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 41 bad extensions.
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, G), sameperson(G, E), student(E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, G), sameperson(G, E), student(G).  [covers 3.0/15.0 pos, 0.0/0.0 neg]

% Consider expanding [#8 of outerLoop #6, bodyLen=9] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, G), sameperson(G, G).  [covers 12.0/15.0 pos, 0.0/0.0 neg]' score=-7.584353002283481
%  At # nodes expanded = 8, |OPEN| = 22.  Pruned 65 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 39 bad extensions.
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.580000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, G), sameperson(G, G), sameperson(C, C).  [covers 12.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.580000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, G), sameperson(G, G), sameperson(E, E).  [covers 12.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, G), sameperson(G, G), student(E).  [covers 12.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, G), sameperson(G, G), student(G).  [covers 12.0/15.0 pos, 0.0/0.0 neg]

% Consider expanding [#9 of outerLoop #6, bodyLen=9] 'faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), student(E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]' score=-7.584353092283481
%  At # nodes expanded = 9, |OPEN| = 21.  Pruned 41 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 26 bad extensions.
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.780000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), student(E), courseprof(_, A).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.780000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), student(E), courseprof(_, C).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.780000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), student(E), courseta(_, E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.780000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), student(E), project(_, A).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.780000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), student(E), project(_, C).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.780000000000001E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), student(E), project(B, _).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.680000000000002E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(F, E), courseprof(G, A), courseta(G, E), student(E), project(F, _).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%     Score = -7.584354 (regressionFit = 7.584344, penalties=9.67E-6) for clause:  faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E), student(E), sameperson(E, E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]

***** Warning: #8 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]

% Expanding node at Level 5 with score = -0.535.
% Will extend: faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 5 >= 5

% Time for loop #6: 116 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      faculty(A) :- sameperson(A, A), project(B, A), project(B, C), courseprof(D, C), courseta(D, E), project(_, E), courseprof(F, A), courseta(F, E).  [covers 3.0/15.0 pos, 0.0/0.0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 3 4 7 12 13 17 25 38
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44.0/44.0 pos, 0.0/0.0 neg]
% Most-general root: faculty(_).  [covers 44.0/44.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #7, bodyLen=0] 'faculty(_).  [covers 44.0/44.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 42.0/44.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 42.0/44.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 3 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 42.0/44.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 42.0/44.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 42.0/44.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 4 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 42.0/44.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 42.0/44.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 42.0/44.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 42.0/44.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 0.  Pruned 10 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 8 bad extensions.
%     Score = -0.277228 (regressionFit = 0.277225, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 23.0/44.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.277228): faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 23.0/44.0 pos, 0.0/0.0 neg]
%     Score = -0.288627 (regressionFit = 0.288624, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseta(_, C).  [covers 4.0/44.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 42.0/44.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 42.0/44.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 42.0/44.0 pos, 0.0/0.0 neg]
%     Score = -0.243639 (regressionFit = 0.243636, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 30.0/44.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -0.243639): faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 30.0/44.0 pos, 0.0/0.0 neg]
%     Score = -0.272637 (regressionFit = 0.272634, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- project(B, A), project(B, C), student(C).  [covers 25.0/44.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 30.0/44.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 30.0/44.0 pos, 0.0/0.0 neg]

% Expanding node at Level 2 with score = -0.007.
% Will extend: faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 30.0/44.0 pos, 0.0/0.0 neg]
Comparing variance: 0.005678691288825588 to score=0.0025 #egs=30.0
Comparing variance: 0.005233964368241005 to score=0.0025 #egs=14.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 30.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.005679)
%         ILP node to extend: faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 30.0/44.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0.005679) into the LAST position (#2) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 14.0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0.005234)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -0.005234) into the LAST position (#3) in the search queue.

% Time for loop #7: 16 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      faculty(A) :- project(B, A), project(B, C), sameperson(C, C).  [covers 30.0/44.0 pos, 0.0/0.0 neg]
% This clause covers 30 positive examples, of which 30 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'faculty(A) :- student(A).  [covers 597.0/597.0 pos, 0.0/0.0 neg]'
%     Score = -250.060716 (regressionFit = 250.060715, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- student(A).  [covers 597.0/597.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 21 40 49 52 72 86 87 94 128 181
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #8, bodyLen=1] 'faculty(A) :- student(A).  [covers 597.0/597.0 pos, 0.0/0.0 neg]' score=-250.0607157028133
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 2 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -3.462912 (regressionFit = 3.462909, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- student(A), project(_, A).  [covers 197.0/597.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.462912): faculty(A) :- student(A), project(_, A).  [covers 197.0/597.0 pos, 0.0/0.0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0100000000000002E-6) for clause:  faculty(A) :- student(A), sameperson(A, A).  [covers 597.0/597.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #8, bodyLen=2] 'faculty(A) :- student(A), project(_, A).  [covers 197.0/597.0 pos, 0.0/0.0 neg]' score=-3.4629115427602923
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3.462912 (regressionFit = 3.462909, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, _).  [covers 197.0/597.0 pos, 0.0/0.0 neg]
%     Score = -3.462913 (regressionFit = 3.462909, penalties=3.12E-6) for clause:  faculty(A) :- student(A), project(_, A), sameperson(A, A).  [covers 197.0/597.0 pos, 0.0/0.0 neg]

% Consider expanding [#3 of outerLoop #8, bodyLen=3] 'faculty(A) :- student(A), project(B, A), project(B, _).  [covers 197.0/597.0 pos, 0.0/0.0 neg]' score=-3.462912452760292
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 10 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3.474880 (regressionFit = 3.474875, penalties=4.040000000000001E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, C), courseprof(_, C).  [covers 139.0/597.0 pos, 0.0/0.0 neg]
%     Score = -3.454735 (regressionFit = 3.454731, penalties=4.040000000000001E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, C), courseta(_, C).  [covers 66.0/597.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -3.454735): faculty(A) :- student(A), project(B, A), project(B, C), courseta(_, C).  [covers 66.0/597.0 pos, 0.0/0.0 neg]
%     Score = -3.462913 (regressionFit = 3.462909, penalties=3.94E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, C), project(_, C).  [covers 197.0/597.0 pos, 0.0/0.0 neg]
%     Score = -3.462913 (regressionFit = 3.462909, penalties=4.040000000000001E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, _), project(B, _).  [covers 197.0/597.0 pos, 0.0/0.0 neg]
%     Score = -3.462913 (regressionFit = 3.462909, penalties=4.03E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, _), sameperson(A, A).  [covers 197.0/597.0 pos, 0.0/0.0 neg]
%     Score = -3.462913 (regressionFit = 3.462909, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, C), sameperson(A, C).  [covers 197.0/597.0 pos, 0.0/0.0 neg]
%     Score = -3.462913 (regressionFit = 3.462909, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, C), sameperson(C, A).  [covers 197.0/597.0 pos, 0.0/0.0 neg]
%     Score = -3.462913 (regressionFit = 3.462909, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, C), sameperson(C, C).  [covers 197.0/597.0 pos, 0.0/0.0 neg]
%     Score = -3.462913 (regressionFit = 3.462909, penalties=3.830000000000001E-6) for clause:  faculty(A) :- student(A), project(B, A), project(B, C), student(C).  [covers 197.0/597.0 pos, 0.0/0.0 neg]

% Consider expanding [#4 of outerLoop #8, bodyLen=3] 'faculty(A) :- student(A), project(_, A), sameperson(A, A).  [covers 197.0/597.0 pos, 0.0/0.0 neg]' score=-3.4629125427602925
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3.462913 (regressionFit = 3.462909, penalties=4.03E-6) for clause:  faculty(A) :- student(A), project(B, A), sameperson(A, A), project(B, _).  [covers 197.0/597.0 pos, 0.0/0.0 neg]

% Consider expanding [#5 of outerLoop #8, bodyLen=2] 'faculty(A) :- student(A), sameperson(A, A).  [covers 597.0/597.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.

% The best node found: faculty(A) :- student(A), project(B, A), project(B, C), courseta(_, C).  [covers 66.0/597.0 pos, 0.0/0.0 neg]

% The best node found: faculty(A) :- student(A), project(B, A), project(B, C), courseta(_, C).  [covers 66.0/597.0 pos, 0.0/0.0 neg]

% Expanding node at Level 1 with score = -0.006.
% Will extend: faculty(A) :- student(A), project(B, A), project(B, C), courseta(_, C).  [covers 66.0/597.0 pos, 0.0/0.0 neg]
Comparing variance: 0.006347166816057252 to score=0.0025 #egs=66.0
Comparing variance: 0.0057171713086143225 to score=0.0025 #egs=531.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 66.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.006347)
%         ILP node to extend: faculty(A) :- student(A), project(B, A), project(B, C), courseta(_, C).  [covers 66.0/597.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.006347) into position #1 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 531.0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0.005717)
%         ILP node to extend: faculty(A) :- student(A).  [covers 597.0/597.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -0.005717) into position #2 in the search queue (new size=4).

% Time for loop #8: 56 milliseconds.
% Internal node max length = 3
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 5
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      faculty(A) :- student(A), project(B, A), project(B, C), courseta(_, C).  [covers 66.0/597.0 pos, 0.0/0.0 neg]
% This clause covers 66 positive examples, of which 66 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (faculty(D) :- project(Anon14489, D), project(Anon14489, Anon14523), courseta(Anon14559, Anon14523))
Created a leaf under (faculty(D) :- project(Anon14489, D), project(Anon14489, Anon14523), courseta(Anon14559, Anon14523))
Created a leaf under (faculty(D) :- project(Anon14185, D), project(Anon14185, Anon14211), sameperson(Anon14211, Anon14211))
Created a leaf under (faculty(D) :- project(Anon14185, D), project(Anon14185, Anon14211), sameperson(Anon14211, Anon14211))

%%%%%  WILL-Produced Tree Combined @ 8:56:43 5/11/17.  [Using 3,456,136 memory cells.]  %%%%%


% FOR faculty(A):
%   if ( student(A) )
%   then if ( project(B, A), project(B, C), courseta(D, C) )
%   | then return -0.27074324006189315;  // std dev = 0.080, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return -0.2989876680612982;  // std dev = 0.076, 531.000 (wgt'ed) examples reached here.  /* #neg=531 */
%   else if ( sameperson(A, A) )
%   | then if ( project(E, A), project(E, F), courseprof(G, F) )
%   | | then if ( courseta(G, H), project(I, H), courseprof(J, A) )
%   | | | then if ( project(I, F) )
%   | | | | then return 2.1329887840567507;  // std dev = 4.13e-07, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | | else if ( courseta(J, H) )
%   | | | | | then return 2.1329887840567516;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 2.557935400375832;  // std dev = 2.754, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 2.1329887840567503;  // std dev = 9.54e-07, 126.000 (wgt'ed) examples reached here.  /* #pos=126 */
%   | | else return 2.132988784056751;  // std dev = 1.17e-06, 291.000 (wgt'ed) examples reached here.  /* #pos=291 */
%   | else if ( project(K, A), project(K, L), sameperson(L, L) )
%   | | then return -0.26029396458366055;  // std dev = 0.075, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.3305387580870267;  // std dev = 0.072, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


% Clauses:

faculty(A, -0.27074324006189315) :- 
     student(A), 
     project(B, A), 
     project(B, C), 
     courseta(D, C), 
     !. // Clause #1.

faculty(A, -0.2989876680612982) :- 
     student(A), 
     !. // Clause #2.

faculty(A, 2.1329887840567507) :- 
     sameperson(A, A), 
     project(B, A), 
     project(B, C), 
     courseprof(D, C), 
     courseta(D, E), 
     project(F, E), 
     courseprof(G, A), 
     project(F, C), 
     !. // Clause #3.

faculty(A, 2.1329887840567516) :- 
     sameperson(A, A), 
     project(B, A), 
     project(B, C), 
     courseprof(D, C), 
     courseta(D, E), 
     project(F, E), 
     courseprof(G, A), 
     courseta(G, E), 
     !. // Clause #4.

faculty(A, 2.557935400375832) :- 
     sameperson(A, A), 
     project(B, A), 
     project(B, C), 
     courseprof(D, C), 
     courseta(D, E), 
     project(F, E), 
     courseprof(G, A), 
     !. // Clause #5.

faculty(A, 2.1329887840567503) :- 
     sameperson(A, A), 
     project(B, A), 
     project(B, C), 
     courseprof(D, C), 
     !. // Clause #6.

faculty(A, 2.132988784056751) :- 
     sameperson(A, A), 
     !. // Clause #7.

faculty(A, -0.26029396458366055) :- 
     project(B, A), 
     project(B, C), 
     sameperson(C, C), 
     !. // Clause #8.

faculty(A, -0.3305387580870267) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_faculty(a, -0.27074324006189315) :-  /* #neg=66 */ 
   student(a),
   project(uniqueVar1, a),
   project(uniqueVar1, uniqueVar2),
   courseta(underscore, uniqueVar2),
   !. // Flattened version of clause #1.

flattened_faculty(a, -0.2989876680612982) :-  /* #neg=531 */ 
   student(a),
   !. // Flattened version of clause #2.

flattened_faculty(a, 2.1329887840567507) :-  /* #pos=30 */ 
   sameperson(a, a),
   project(uniqueVar3, a),
   project(uniqueVar3, uniqueVar4),
   courseprof(uniqueVar5, uniqueVar4),
   courseta(uniqueVar5, uniqueVar6),
   project(uniqueVar7, uniqueVar6),
   courseprof(underscore, a),
   project(uniqueVar7, uniqueVar4),
   !. // Flattened version of clause #3.

flattened_faculty(a, 2.1329887840567516) :-  /* #pos=3 */ 
   sameperson(a, a),
   project(uniqueVar8, a),
   project(uniqueVar8, uniqueVar9),
   courseprof(uniqueVar10, uniqueVar9),
   courseta(uniqueVar10, uniqueVar11),
   project(underscore, uniqueVar11),
   courseprof(uniqueVar12, a),
   courseta(uniqueVar12, uniqueVar11),
   !. // Flattened version of clause #4.

flattened_faculty(a, 2.557935400375832) :-  /* #pos=12 */ 
   sameperson(a, a),
   project(uniqueVar13, a),
   project(uniqueVar13, uniqueVar14),
   courseprof(uniqueVar15, uniqueVar14),
   courseta(uniqueVar15, uniqueVar16),
   project(underscore, uniqueVar16),
   courseprof(underscore, a),
   !. // Flattened version of clause #5.

flattened_faculty(a, 2.1329887840567503) :-  /* #pos=126 */ 
   sameperson(a, a),
   project(uniqueVar17, a),
   project(uniqueVar17, uniqueVar18),
   courseprof(underscore, uniqueVar18),
   !. // Flattened version of clause #6.

flattened_faculty(a, 2.132988784056751) :-  /* #pos=291 */ 
   sameperson(a, a),
   !. // Flattened version of clause #7.

flattened_faculty(a, -0.26029396458366055) :-  /* #neg=30 */ 
   project(uniqueVar19, a),
   project(uniqueVar19, uniqueVar20),
   sameperson(uniqueVar20, uniqueVar20),
   !. // Flattened version of clause #8.

flattened_faculty(underscore, -0.3305387580870267) :-  /* #neg=14 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   project(uniqueVar1, a)
%   courseprof(underscore, a)
%   courseta(uniqueVar5, uniqueVar6)
%   courseprof(uniqueVar12, a)
%   courseta(underscore, uniqueVar2)
%   project(uniqueVar7, uniqueVar6)
%   courseprof(uniqueVar15, uniqueVar14)
%   project(uniqueVar3, a)
%   courseta(uniqueVar15, uniqueVar16)
%   student(a)
%   sameperson(a, a)
%   courseta(uniqueVar10, uniqueVar11)
%   project(underscore, uniqueVar16)
%   project(uniqueVar8, a)
%   courseprof(uniqueVar10, uniqueVar9)
%   project(uniqueVar13, uniqueVar14)
%   project(uniqueVar7, uniqueVar4)
%   courseta(uniqueVar12, uniqueVar11)
%   project(uniqueVar17, a)
%   project(underscore, uniqueVar11)
%   project(uniqueVar13, a)
%   project(uniqueVar17, uniqueVar18)
%   project(uniqueVar19, a)
%   project(uniqueVar3, uniqueVar4)
%   courseprof(underscore, uniqueVar18)
%   project(uniqueVar8, uniqueVar9)
%   sameperson(uniqueVar20, uniqueVar20)
%   project(uniqueVar1, uniqueVar2)
%   courseprof(uniqueVar5, uniqueVar4)
%   project(uniqueVar19, uniqueVar20)

% Time taken to learn model for 'faculty': 2.695 seconds.
% Saving model in: datasets/WebKB/train/models/bRDNs/faculty.model
cached groundings hit: 0
Misses: 0

% Total learning time (3 trees): 3.071 seconds.
